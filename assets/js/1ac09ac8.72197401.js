"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["1357"],{526688:function(e,t,n){n.r(t),n.d(t,{metadata:()=>r,contentTitle:()=>s,default:()=>l,assets:()=>c,toc:()=>u,frontMatter:()=>o});var r=JSON.parse('{"id":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406/\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D","title":"\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D","description":"gcache \u6A21\u5757\u91C7\u7528\u4E86\u9002\u914D\u5668\u8BBE\u8BA1\u6A21\u5F0F\uFF0C\u63D0\u4F9B\u4E86 Adapter \u9002\u914D\u5668\u63A5\u53E3\uFF0C\u4EFB\u4F55\u5B9E\u73B0\u4E86 Adapter \u63A5\u53E3\u7684\u5BF9\u8C61\u5747\u53EF\u6CE8\u518C\u5230\u7F13\u5B58\u7BA1\u7406\u5BF9\u8C61\u4E2D\uFF0C\u4F7F\u5F97\u5F00\u53D1\u8005\u53EF\u4EE5\u5BF9\u7F13\u5B58\u7BA1\u7406\u5BF9\u8C61\u8FDB\u884C\u7075\u6D3B\u7684\u6269\u5C55\u3002","source":"@site/versioned_docs/version-1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406/\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D.md","sourceDirName":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406","slug":"/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406/\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D","permalink":"/1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406/\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406/\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D.md","tags":[],"version":"1.16.x","lastUpdatedBy":"John","lastUpdatedAt":1730365530000,"sidebarPosition":1,"frontMatter":{"title":"\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D","sidebar_position":1,"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"\u7F13\u5B58\u7BA1\u7406-\u5185\u5B58\u7F13\u5B58","permalink":"/1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406/\u7F13\u5B58\u7BA1\u7406-\u5185\u5B58\u7F13\u5B58"},"next":{"title":"\u7F13\u5B58\u7BA1\u7406-Redis\u7F13\u5B58","permalink":"/1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u7F13\u5B58\u7BA1\u7406/\u7F13\u5B58\u7BA1\u7406-Redis\u7F13\u5B58"}}'),i=n("785893"),a=n("250065");let o={title:"\u7F13\u5B58\u7BA1\u7406-\u7F13\u5B58\u9002\u914D",sidebar_position:1,hide_title:!0},s=void 0,c={},u=[];function d(e){let t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"gcache"})," \u6A21\u5757\u91C7\u7528\u4E86\u9002\u914D\u5668\u8BBE\u8BA1\u6A21\u5F0F\uFF0C\u63D0\u4F9B\u4E86 ",(0,i.jsx)(t.code,{children:"Adapter"})," \u9002\u914D\u5668\u63A5\u53E3\uFF0C\u4EFB\u4F55\u5B9E\u73B0\u4E86 ",(0,i.jsx)(t.code,{children:"Adapter"})," \u63A5\u53E3\u7684\u5BF9\u8C61\u5747\u53EF\u6CE8\u518C\u5230\u7F13\u5B58\u7BA1\u7406\u5BF9\u8C61\u4E2D\uFF0C\u4F7F\u5F97\u5F00\u53D1\u8005\u53EF\u4EE5\u5BF9\u7F13\u5B58\u7BA1\u7406\u5BF9\u8C61\u8FDB\u884C\u7075\u6D3B\u7684\u6269\u5C55\u3002"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"gcache.Cache"})," \u5BF9\u8C61\u7ED3\u6784\u5B9A\u4E49\u5982\u4E0B\uFF1A"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:"// Cache struct.\ntype Cache struct {\n    Adapter // Adapter for cache features.\n}\n\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Adapter"})," \u63A5\u53E3\u5B9A\u4E49\u5982\u4E0B\uFF1A"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://godoc.org/github.com/gogf/gf/os/gcache#Adapter",children:"https://godoc.org/github.com/gogf/gf/os/gcache#Adapter"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:"// Adapter is the adapter for cache features implements.\ntype Adapter interface {\n    // Set sets cache with <key>-<value> pair, which is expired after <duration>.\n    //\n    // It does not expire if <duration> == 0.\n    // It deletes the <key> if <duration> < 0.\n    Set(ctx context.Context, key interface{}, value interface{}, duration time.Duration) error\n\n    // Sets batch sets cache with key-value pairs by <data>, which is expired after <duration>.\n    //\n    // It does not expire if <duration> == 0.\n    // It deletes the keys of <data> if <duration> < 0 or given <value> is nil.\n    Sets(ctx context.Context, data map[interface{}]interface{}, duration time.Duration) error\n\n    // SetIfNotExist sets cache with <key>-<value> pair which is expired after <duration>\n    // if <key> does not exist in the cache. It returns true the <key> dose not exist in the\n    // cache and it sets <value> successfully to the cache, or else it returns false.\n    //\n    // The parameter <value> can be type of <func() interface{}>, but it dose nothing if its\n    // result is nil.\n    //\n    // It does not expire if <duration> == 0.\n    // It deletes the <key> if <duration> < 0 or given <value> is nil.\n    SetIfNotExist(ctx context.Context, key interface{}, value interface{}, duration time.Duration) (bool, error)\n\n    // Get retrieves and returns the associated value of given <key>.\n    // It returns nil if it does not exist, its value is nil or it's expired.\n    Get(ctx context.Context, key interface{}) (interface{}, error)\n\n    // GetOrSet retrieves and returns the value of <key>, or sets <key>-<value> pair and\n    // returns <value> if <key> does not exist in the cache. The key-value pair expires\n    // after <duration>.\n    //\n    // It does not expire if <duration> == 0.\n    // It deletes the <key> if <duration> < 0 or given <value> is nil, but it does nothing\n    // if <value> is a function and the function result is nil.\n    GetOrSet(ctx context.Context, key interface{}, value interface{}, duration time.Duration) (interface{}, error)\n\n    // GetOrSetFunc retrieves and returns the value of <key>, or sets <key> with result of\n    // function <f> and returns its result if <key> does not exist in the cache. The key-value\n    // pair expires after <duration>.\n    //\n    // It does not expire if <duration> == 0.\n    // It deletes the <key> if <duration> < 0 or given <value> is nil, but it does nothing\n    // if <value> is a function and the function result is nil.\n    GetOrSetFunc(ctx context.Context, key interface{}, f func() (interface{}, error), duration time.Duration) (interface{}, error)\n\n    // GetOrSetFuncLock retrieves and returns the value of <key>, or sets <key> with result of\n    // function <f> and returns its result if <key> does not exist in the cache. The key-value\n    // pair expires after <duration>.\n    //\n    // It does not expire if <duration> == 0.\n    // It does nothing if function <f> returns nil.\n    //\n    // Note that the function <f> should be executed within writing mutex lock for concurrent\n    // safety purpose.\n    GetOrSetFuncLock(ctx context.Context, key interface{}, f func() (interface{}, error), duration time.Duration) (interface{}, error)\n\n    // Contains returns true if <key> exists in the cache, or else returns false.\n    Contains(ctx context.Context, key interface{}) (bool, error)\n\n    // GetExpire retrieves and returns the expiration of <key> in the cache.\n    //\n    // It returns 0 if the <key> does not expire.\n    // It returns -1 if the <key> does not exist in the cache.\n    GetExpire(ctx context.Context, key interface{}) (time.Duration, error)\n\n    // Remove deletes one or more keys from cache, and returns its value.\n    // If multiple keys are given, it returns the value of the last deleted item.\n    Remove(ctx context.Context, keys ...interface{}) (value interface{}, err error)\n\n    // Update updates the value of <key> without changing its expiration and returns the old value.\n    // The returned value <exist> is false if the <key> does not exist in the cache.\n    //\n    // It deletes the <key> if given <value> is nil.\n    // It does nothing if <key> does not exist in the cache.\n    Update(ctx context.Context, key interface{}, value interface{}) (oldValue interface{}, exist bool, err error)\n\n    // UpdateExpire updates the expiration of <key> and returns the old expiration duration value.\n    //\n    // It returns -1 and does nothing if the <key> does not exist in the cache.\n    // It deletes the <key> if <duration> < 0.\n    UpdateExpire(ctx context.Context, key interface{}, duration time.Duration) (oldDuration time.Duration, err error)\n\n    // Size returns the number of items in the cache.\n    Size(ctx context.Context) (size int, err error)\n\n    // Data returns a copy of all key-value pairs in the cache as map type.\n    // Note that this function may leads lots of memory usage, you can implement this function\n    // if necessary.\n    Data(ctx context.Context) (map[interface{}]interface{}, error)\n\n    // Keys returns all keys in the cache as slice.\n    Keys(ctx context.Context) ([]interface{}, error)\n\n    // Values returns all values in the cache as slice.\n    Values(ctx context.Context) ([]interface{}, error)\n\n    // Clear clears all data of the cache.\n    // Note that this function is sensitive and should be carefully used.\n    Clear(ctx context.Context) error\n\n    // Close closes the cache if necessary.\n    Close(ctx context.Context) error\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"\u9002\u914D\u5668\u7684\u6CE8\u518C\u65B9\u6CD5\uFF1A"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:"// SetAdapter changes the adapter for this cache.\n// Be very note that, this setting function is not concurrent-safe, which means you should not call\n// this setting function concurrently in multiple goroutines.\nfunc (c *Cache) SetAdapter(adapter Adapter)\n\n"})}),"\n",(0,i.jsxs)(t.p,{children:["\u5177\u4F53\u793A\u4F8B\u8BF7\u53C2\u8003 ",(0,i.jsx)(t.a,{href:"/1.16.x/%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6-%E9%87%8D%E7%82%B9/%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86/%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86-Redis%E7%BC%93%E5%AD%98",children:"\u7F13\u5B58\u7BA1\u7406-Redis\u7F13\u5B58"})," \u7AE0\u8282\u3002"]})]})}function l(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return o}});var r=n(667294);let i={},a=r.createContext(i);function o(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);