"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["27291"],{173672:function(n,e,t){t.r(e),t.d(e,{metadata:()=>r,contentTitle:()=>c,default:()=>l,assets:()=>u,toc:()=>a,frontMatter:()=>i});var r=JSON.parse('{"id":"\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801/gjson-Struct\u8F6C\u6362","title":"gjson-Struct\u8F6C\u6362","description":"Struct \u8F6C\u6362","source":"@site/versioned_docs/version-1.16.x/\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801/gjson-Struct\u8F6C\u6362.md","sourceDirName":"\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801","slug":"/\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801/gjson-Struct\u8F6C\u6362","permalink":"/1.16.x/\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801/gjson-Struct\u8F6C\u6362","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-1.16.x/\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801/gjson-Struct\u8F6C\u6362.md","tags":[],"version":"1.16.x","lastUpdatedBy":"John","lastUpdatedAt":1730365530000,"sidebarPosition":2,"frontMatter":{"title":"gjson-Struct\u8F6C\u6362","sidebar_position":2,"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"gjson-\u5C42\u7EA7\u8BBF\u95EE","permalink":"/1.16.x/\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801/gjson-\u5C42\u7EA7\u8BBF\u95EE"},"next":{"title":"gjson-\u52A8\u6001\u521B\u5EFA\u4FEE\u6539","permalink":"/1.16.x/\u6A21\u5757\u5217\u8868/\u7F16\u7801\u89E3\u7801/gjson -\u6570\u636E\u52A8\u6001\u7F16\u89E3\u7801/gjson-\u52A8\u6001\u521B\u5EFA\u4FEE\u6539"}}'),s=t("785893"),o=t("250065");let i={title:"gjson-Struct\u8F6C\u6362",sidebar_position:2,hide_title:!0},c=void 0,u={},a=[{value:"<code>Struct</code> \u8F6C\u6362",id:"struct-\u8F6C\u6362",level:2},{value:"<code>GetStruct</code> \u8F6C\u6362",id:"getstruct-\u8F6C\u6362",level:2}];function d(n){let e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h2,{id:"struct-\u8F6C\u6362",children:[(0,s.jsx)(e.code,{children:"Struct"})," \u8F6C\u6362"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"Struct"})," \u65B9\u6CD5\u7528\u4E8E\u5C06\u6574\u4E2A ",(0,s.jsx)(e.code,{children:"Json"})," \u5305\u542B\u7684\u6570\u636E\u5185\u5BB9\u8F6C\u6362\u4E3A\u6307\u5B9A\u7684\u6570\u636E\u683C\u5F0F\u6216\u8005\u5BF9\u8C61\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:'data :=\n    `\n{\n    "count" : 1,\n    "array" : ["John", "Ming"]\n}`\nif j, err := gjson.DecodeToJson(data); err != nil {\n    panic(err)\n} else {\n    type Users struct {\n        Count int\n        Array []string\n    }\n    users := new(Users)\n    if err := j.Struct(users); err != nil {\n        panic(err)\n    }\n    fmt.Printf(`%+v`, users)\n}\n\n// Output:\n// &{Count:1 Array:[John Ming]}\n\n'})}),"\n",(0,s.jsxs)(e.h2,{id:"getstruct-\u8F6C\u6362",children:[(0,s.jsx)(e.code,{children:"GetStruct"})," \u8F6C\u6362"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"Get*"})," \u65B9\u6CD5\u7528\u4E8E\u83B7\u5F97\u6307\u5B9A\u5C42\u7EA7\u7684\u8282\u70B9\u6570\u636E\uFF0C\u5E76\u5C06\u8BE5\u6570\u636E\u8F6C\u6362\u4E3A\u6307\u5B9A\u7684\u7ED3\u6784\u4F53\u5BF9\u8C61\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:'data :=\n    `{\n    "users" : {\n        "count" : 1,\n        "array" : ["John", "Ming"]\n    }\n}`\nif j, err := gjson.DecodeToJson(data); err != nil {\n    panic(err)\n} else {\n    type Users struct {\n        Count int\n        Array []string\n    }\n    users := new(Users)\n    if err := j.GetStruct("users", users); err != nil {\n        panic(err)\n    }\n    fmt.Printf(`%+v`, users)\n}\n\n// Output:\n// &{Count:1 Array:[John Ming]}\n\n'})})]})}function l(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},250065:function(n,e,t){t.d(e,{Z:function(){return c},a:function(){return i}});var r=t(667294);let s={},o=r.createContext(s);function i(n){let e=r.useContext(o);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);