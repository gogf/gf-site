"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["27058"],{283741:function(n,e,s){s.r(e),s.d(e,{metadata:()=>l,contentTitle:()=>d,default:()=>j,assets:()=>o,toc:()=>t,frontMatter:()=>r});var l=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-\u65B9\u6CD5\u4ECB\u7ECD","title":"\u901A\u7528\u7F16\u89E3\u7801-\u65B9\u6CD5\u4ECB\u7ECD","description":"\u4F7F\u7528GoFrame\u6846\u67B6\u8FDB\u884C\u901A\u7528\u7F16\u89E3\u7801\u7684\u591A\u79CD\u65B9\u6CD5\uFF0C\u5305\u62ECJson\u5BF9\u8C61\u7684\u521B\u5EFA\u3001\u6570\u636E\u8BBF\u95EE\u548C\u683C\u5F0F\u8F6C\u6362\u7B49\u3002\u63D0\u4F9B\u4E86\u5305\u62ECNew\u3001Load\u3001Encode\u3001Decode\u7B49\u65B9\u6CD5\u7684\u8BE6\u7EC6\u8BF4\u660E\u548C\u793A\u4F8B\u4EE3\u7801\uFF0C\u6709\u52A9\u4E8E\u7406\u89E3\u5982\u4F55\u5728GoFrame\u4E2D\u9AD8\u6548\u5904\u7406\u5404\u79CD\u6570\u636E\u683C\u5F0F\u3002","source":"@site/versioned_docs/version-2.7.x/docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-\u65B9\u6CD5\u4ECB\u7ECD.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson","slug":"/docs/components/encoding-gjson-funcs","permalink":"/2.7.x/docs/components/encoding-gjson-funcs","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-2.7.x/docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-\u65B9\u6CD5\u4ECB\u7ECD.md","tags":[],"version":"2.7.x","lastUpdatedBy":"John","lastUpdatedAt":1731504210000,"sidebarPosition":5,"frontMatter":{"slug":"/docs/components/encoding-gjson-funcs","title":"\u901A\u7528\u7F16\u89E3\u7801-\u65B9\u6CD5\u4ECB\u7ECD","sidebar_position":5,"hide_title":true,"keywords":["GoFrame","Json\u5BF9\u8C61","\u7F16\u89E3\u7801","gjson\u65B9\u6CD5","GoFrame\u6846\u67B6","\u6570\u636E\u5C42\u7EA7\u8BBF\u95EE","\u5E76\u53D1\u5B89\u5168","NewWithTag","\u4EE3\u7801\u793A\u4F8B","\u5185\u5BB9\u683C\u5F0F"],"description":"\u4F7F\u7528GoFrame\u6846\u67B6\u8FDB\u884C\u901A\u7528\u7F16\u89E3\u7801\u7684\u591A\u79CD\u65B9\u6CD5\uFF0C\u5305\u62ECJson\u5BF9\u8C61\u7684\u521B\u5EFA\u3001\u6570\u636E\u8BBF\u95EE\u548C\u683C\u5F0F\u8F6C\u6362\u7B49\u3002\u63D0\u4F9B\u4E86\u5305\u62ECNew\u3001Load\u3001Encode\u3001Decode\u7B49\u65B9\u6CD5\u7684\u8BE6\u7EC6\u8BF4\u660E\u548C\u793A\u4F8B\u4EE3\u7801\uFF0C\u6709\u52A9\u4E8E\u7406\u89E3\u5982\u4F55\u5728GoFrame\u4E2D\u9AD8\u6548\u5904\u7406\u5404\u79CD\u6570\u636E\u683C\u5F0F\u3002"},"sidebar":"mainSidebar","previous":{"title":"\u901A\u7528\u7F16\u89E3\u7801-\u6570\u636E\u683C\u5F0F\u8F6C\u6362","permalink":"/2.7.x/docs/components/encoding-gjson-format-converting"},"next":{"title":"\u901A\u7528\u7F16\u89E3\u7801-FAQ","permalink":"/2.7.x/docs/components/encoding-gjson-faq"}}'),i=s("785893"),c=s("250065");let r={slug:"/docs/components/encoding-gjson-funcs",title:"\u901A\u7528\u7F16\u89E3\u7801-\u65B9\u6CD5\u4ECB\u7ECD",sidebar_position:5,hide_title:!0,keywords:["GoFrame","Json\u5BF9\u8C61","\u7F16\u89E3\u7801","gjson\u65B9\u6CD5","GoFrame\u6846\u67B6","\u6570\u636E\u5C42\u7EA7\u8BBF\u95EE","\u5E76\u53D1\u5B89\u5168","NewWithTag","\u4EE3\u7801\u793A\u4F8B","\u5185\u5BB9\u683C\u5F0F"],description:"\u4F7F\u7528GoFrame\u6846\u67B6\u8FDB\u884C\u901A\u7528\u7F16\u89E3\u7801\u7684\u591A\u79CD\u65B9\u6CD5\uFF0C\u5305\u62ECJson\u5BF9\u8C61\u7684\u521B\u5EFA\u3001\u6570\u636E\u8BBF\u95EE\u548C\u683C\u5F0F\u8F6C\u6362\u7B49\u3002\u63D0\u4F9B\u4E86\u5305\u62ECNew\u3001Load\u3001Encode\u3001Decode\u7B49\u65B9\u6CD5\u7684\u8BE6\u7EC6\u8BF4\u660E\u548C\u793A\u4F8B\u4EE3\u7801\uFF0C\u6709\u52A9\u4E8E\u7406\u89E3\u5982\u4F55\u5728GoFrame\u4E2D\u9AD8\u6548\u5904\u7406\u5404\u79CD\u6570\u636E\u683C\u5F0F\u3002"},d=void 0,o={},t=[{value:"<code>New</code>",id:"new",level:3},{value:"<code>NewWithTag</code>",id:"newwithtag",level:3},{value:"<code>NewWithOptions</code>",id:"newwithoptions",level:3},{value:"<code>Load</code>",id:"load",level:3},{value:"<code>LoadJson</code>",id:"loadjson",level:3},{value:"<code>LoadXml</code>",id:"loadxml",level:3},{value:"LoadIni",id:"loadini",level:3},{value:"<code>LoadYaml</code>",id:"loadyaml",level:3},{value:"<code>LoadToml</code>",id:"loadtoml",level:3},{value:"<code>LoadContent</code>",id:"loadcontent",level:3},{value:"LoadContentType",id:"loadcontenttype",level:3},{value:"<code>IsValidDataType</code>",id:"isvaliddatatype",level:3},{value:"<code>Valid</code>",id:"valid",level:3},{value:"Marshal",id:"marshal",level:3},{value:"<code>MarshalIndent</code>",id:"marshalindent",level:3},{value:"Unmarshal",id:"unmarshal",level:3},{value:"Encode",id:"encode",level:3},{value:"<code>MustEncode</code>",id:"mustencode",level:3},{value:"<code>EncodeString</code>",id:"encodestring",level:3},{value:"<code>MustEncodeString</code>",id:"mustencodestring",level:3},{value:"<code>Decode</code>",id:"decode",level:3},{value:"DecodeTo",id:"decodeto",level:3},{value:"<code>DecodeToJson</code>",id:"decodetojson",level:3},{value:"<code>SetSplitChar</code>",id:"setsplitchar",level:3},{value:"<code>SetViolenceCheck</code>",id:"setviolencecheck",level:3},{value:"<code>ToJson</code>",id:"tojson",level:3},{value:"<code>ToJsonString</code>",id:"tojsonstring",level:3},{value:"ToJsonIndent",id:"tojsonindent",level:3},{value:"<code>ToJsonIndentString</code>",id:"tojsonindentstring",level:3},{value:"MustToJson",id:"musttojson",level:3},{value:"<code>MustToJsonString</code>",id:"musttojsonstring",level:3},{value:"MustToJsonIndent",id:"musttojsonindent",level:3},{value:"<code>MustToJsonIndentString</code>",id:"musttojsonindentstring",level:3},{value:"ToXml",id:"toxml",level:3},{value:"<code>ToXmlString</code>",id:"toxmlstring",level:3},{value:"ToXmlIndent",id:"toxmlindent",level:3},{value:"<code>ToXmlIndentString</code>",id:"toxmlindentstring",level:3},{value:"MustToXml",id:"musttoxml",level:3},{value:"<code>MustToXmlString</code>",id:"musttoxmlstring",level:3},{value:"MustToXmlIndent",id:"musttoxmlindent",level:3},{value:"<code>MustToXmlIndentString</code>",id:"musttoxmlindentstring",level:3},{value:"ToYaml",id:"toyaml",level:3},{value:"ToYamlIndent",id:"toyamlindent",level:3},{value:"<code>ToYamlString</code>",id:"toyamlstring",level:3},{value:"<code>MustToYaml</code>",id:"musttoyaml",level:3},{value:"MustToYamlString",id:"musttoyamlstring",level:3},{value:"<code>ToToml</code>",id:"totoml",level:3},{value:"ToTomlString",id:"totomlstring",level:3},{value:"<code>MustToToml</code>",id:"musttotoml",level:3},{value:"MustToTomlString",id:"musttotomlstring",level:3},{value:"<code>ToIni</code>",id:"toini",level:3},{value:"ToIniString",id:"toinistring",level:3},{value:"<code>MustToIni</code>",id:"musttoini",level:3},{value:"MustToIniString",id:"musttoinistring",level:3},{value:"MarshalJSON",id:"marshaljson",level:3},{value:"UnmarshalJSON",id:"unmarshaljson",level:3},{value:"<code>UnmarshalValue</code>",id:"unmarshalvalue",level:3},{value:"<code>MapStrAny</code>",id:"mapstrany",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"<code>Interface</code>",id:"interface",level:3},{value:"<code>Var</code>",id:"var",level:3},{value:"IsNil",id:"isnil",level:3},{value:"<code>Get</code>",id:"get",level:3},{value:"<code>GetJson</code>",id:"getjson",level:3},{value:"GetJsons",id:"getjsons",level:3},{value:"<code>GetJsonMap</code>",id:"getjsonmap",level:3},{value:"<code>Set</code>",id:"set",level:3},{value:"<code>MustSet</code>",id:"mustset",level:3},{value:"<code>Remove</code>",id:"remove",level:3},{value:"MustRemove",id:"mustremove",level:3},{value:"<code>Contains</code>",id:"contains",level:3},{value:"Len",id:"len",level:3},{value:"<code>Append</code>",id:"append",level:3},{value:"MustAppend",id:"mustappend",level:3},{value:"Map",id:"map",level:3},{value:"Array",id:"array",level:3},{value:"<code>Scan</code>",id:"scan",level:3},{value:"Dump",id:"dump",level:3}];function a(n){let e={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.admonition,{type:"tip",children:(0,i.jsxs)(e.p,{children:["\u4EE5\u4E0B\u5E38\u7528\u65B9\u6CD5\u5217\u8868\uFF0C\u6587\u6863\u66F4\u65B0\u53EF\u80FD\u6EDE\u540E\u4E8E\u4EE3\u7801\u65B0\u7279\u6027\uFF0C\u66F4\u591A\u7684\u65B9\u6CD5\u53CA\u793A\u4F8B\u8BF7\u53C2\u8003\u4EE3\u7801\u6587\u6863\uFF1A ",(0,i.jsx)(e.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/os/gres",children:"https://pkg.go.dev/github.com/gogf/gf/v2/encoding/gjson"})]})}),"\n",(0,i.jsx)(e.h3,{id:"new",children:(0,i.jsx)(e.code,{children:"New"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"New"})," \u53EF\u4EE5\u7528\u4EFB\u610F\u7C7B\u578B\u7684\u503C ",(0,i.jsx)(e.code,{children:"data"})," \u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\uFF0C\u4F46\u662F\u7531\u4E8E\u6570\u636E\u8BBF\u95EE\u7684\u5173\u7CFB\uFF0C ",(0,i.jsx)(e.code,{children:"data"})," \u5E94\u8BE5\u662F\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"map"})," \u6216\u8005 ",(0,i.jsx)(e.code,{children:"slice"}),"\uFF0C\u5426\u5219\u662F\u65E0\u610F\u4E49\u7684\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u6CE8\u610F\uFF1A ",(0,i.jsx)(e.code,{children:"safe"})," \u53C2\u6570\u51B3\u5B9A\u4E86 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u662F\u5426\u662F\u5E76\u53D1\u5B89\u5168\u7684\uFF0C\u9ED8\u8BA4\u4E3A ",(0,i.jsx)(e.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func New(data interface{}, safe ...bool) *Json\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleNew() {\n      jsonContent := `{"name":"john", "score":"100"}`\n      j := gjson.New(jsonContent)\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"newwithtag",children:(0,i.jsx)(e.code,{children:"NewWithTag"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"NewWithTag"})," \u53EF\u4EE5\u7528\u4EFB\u610F\u7C7B\u578B\u7684\u503C ",(0,i.jsx)(e.code,{children:"data"})," \u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\uFF0C\u4F46\u662F\u7531\u4E8E\u6570\u636E\u8BBF\u95EE\u7684\u5173\u7CFB\uFF0C ",(0,i.jsx)(e.code,{children:"data"})," \u5E94\u8BE5\u662F\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"map"})," \u6216\u8005 ",(0,i.jsx)(e.code,{children:"slice"}),"\uFF0C\u5426\u5219\u662F\u65E0\u610F\u4E49\u7684\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u6CE8\u610F\uFF1A ",(0,i.jsx)(e.code,{children:"tgts"})," \u53C2\u6570\u6307\u5B9A\u4E86\u7ED3\u6784\u4F53\u8F6C\u6362\u5230map\u7684\u6807\u7B7E\u540D\u7684\u4F18\u5148\u7EA7\uFF0C\u591A\u4E2A\u6807\u7B7E\u7528 ",(0,i.jsx)(e.code,{children:"','"})," \u5206\u5272\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"safe"})," \u53C2\u6570\u51B3\u5B9A\u4E86 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u662F\u5426\u662F\u5E76\u53D1\u5B89\u5168\u7684\uFF0C\u9ED8\u8BA4\u4E3A ",(0,i.jsx)(e.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func NewWithTag(data interface{}, tags string, safe ...bool) *Json\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleNewWithTag() {\n      type Me struct {\n          Name  string `tag:"name"`\n          Score int    `tag:"score"`\n          Title string\n      }\n      me := Me{\n          Name:  "john",\n          Score: 100,\n          Title: "engineer",\n      }\n      j := gjson.NewWithTag(me, "tag", true)\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n      fmt.Println(j.Get("Title"))\n\n      // Output:\n      // john\n      // 100\n      // engineer\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"newwithoptions",children:(0,i.jsx)(e.code,{children:"NewWithOptions"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"NewWithOptions"})," \u53EF\u4EE5\u7528\u4EFB\u610F\u7C7B\u578B\u7684\u503C ",(0,i.jsx)(e.code,{children:"data"})," \u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\uFF0C\u4F46\u662F\u7531\u4E8E\u6570\u636E\u8BBF\u95EE\u7684\u5173\u7CFB\uFF0C ",(0,i.jsx)(e.code,{children:"data"})," \u5E94\u8BE5\u662F\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"map"})," \u6216\u8005 ",(0,i.jsx)(e.code,{children:"slice"}),"\uFF0C\u5426\u5219\u662F\u65E0\u610F\u4E49\u7684\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func NewWithOptions(data interface{}, options Options) *Json\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleNewWithOptions() {\n      type Me struct {\n          Name  string `tag:"name"`\n          Score int    `tag:"score"`\n          Title string\n      }\n      me := Me{\n          Name:  "john",\n          Score: 100,\n          Title: "engineer",\n      }\n\n      j := gjson.NewWithOptions(me, gjson.Options{\n          Tags: "tag",\n      })\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n      fmt.Println(j.Get("Title"))\n\n      // Output:\n      // john\n      // 100\n      // engineer\n}\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleNewWithOptions_UTF8BOM() {\n      jsonContent := `{"name":"john", "score":"100"}`\n\n      content := make([]byte, 3, len(jsonContent)+3)\n      content[0] = 0xEF\n      content[1] = 0xBB\n      content[2] = 0xBF\n      content = append(content, jsonContent...)\n\n      j := gjson.NewWithOptions(content, gjson.Options{\n          Tags: "tag",\n      })\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"load",children:(0,i.jsx)(e.code,{children:"Load"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Load"})," \u4ECE\u6307\u5B9A\u7684\u6587\u4EF6 ",(0,i.jsx)(e.code,{children:"path"})," \u4E2D\u52A0\u8F7D\u5185\u5BB9\uFF0C\u5E76\u5C06\u5176\u5185\u5BB9\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func Load(path string, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoad() {\n      jsonFilePath := gtest.DataPath("json", "data1.json")\n      j, _ := gjson.Load(jsonFilePath)\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n\n      notExistFilePath := gtest.DataPath("json", "data2.json")\n      j2, _ := gjson.Load(notExistFilePath)\n      fmt.Println(j2.Get("name"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoad_Xml() {\n      jsonFilePath := gtest.DataPath("xml", "data1.xml")\n      j, _ := gjson.Load(jsonFilePath)\n      fmt.Println(j.Get("doc.name"))\n      fmt.Println(j.Get("doc.score"))\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loadjson",children:(0,i.jsx)(e.code,{children:"LoadJson"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"LoadJson"})," \u7528\u7ED9\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u683C\u5F0F\u7684\u5185\u5BB9\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func LoadJson(data interface{}, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadJson() {\n      jsonContent := `{"name":"john", "score":"100"}`\n      j, _ := gjson.LoadJson(jsonContent)\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loadxml",children:(0,i.jsx)(e.code,{children:"LoadXml"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"LoadXml"})," \u7528\u7ED9\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"XML"})," \u683C\u5F0F\u7684\u5185\u5BB9\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func LoadXml(data interface{}, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadXml() {\n      xmlContent := `<?xml version="1.0" encoding="UTF-8"?>\n      <base>\n          <name>john</name>\n          <score>100</score>\n      </base>`\n      j, _ := gjson.LoadXml(xmlContent)\n      fmt.Println(j.Get("base.name"))\n      fmt.Println(j.Get("base.score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loadini",children:"LoadIni"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"LoadIni"})," \u7528\u7ED9\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"INI"})," \u683C\u5F0F\u7684\u5185\u5BB9\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func LoadIni(data interface{}, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadIni() {\n      iniContent := `\n      [base]\n      name = john\n      score = 100\n      `\n      j, _ := gjson.LoadIni(iniContent)\n      fmt.Println(j.Get("base.name"))\n      fmt.Println(j.Get("base.score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loadyaml",children:(0,i.jsx)(e.code,{children:"LoadYaml"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"LoadYaml"})," \u7528\u7ED9\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"YAML"})," \u683C\u5F0F\u7684\u5185\u5BB9\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func LoadYaml(data interface{}, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadYaml() {\n      yamlContent :=\n          `base:\n    name: john\n    score: 100`\n\n      j, _ := gjson.LoadYaml(yamlContent)\n      fmt.Println(j.Get("base.name"))\n      fmt.Println(j.Get("base.score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loadtoml",children:(0,i.jsx)(e.code,{children:"LoadToml"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"LoadToml"})," \u7528\u7ED9\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"TOML"})," \u683C\u5F0F\u7684\u5185\u5BB9\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func LoadToml(data interface{}, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadToml() {\n      tomlContent :=\n          `[base]\n    name = "john"\n    score = 100`\n\n      j, _ := gjson.LoadToml(tomlContent)\n      fmt.Println(j.Get("base.name"))\n      fmt.Println(j.Get("base.score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loadcontent",children:(0,i.jsx)(e.code,{children:"LoadContent"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"LoadContent"})," \u6839\u636E\u7ED9\u5B9A\u7684\u5185\u5BB9\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\uFF0C\u5B83\u81EA\u52A8\u68C0\u67E5 ",(0,i.jsx)(e.code,{children:"content"})," \u7684\u6570\u636E\u7C7B\u578B\uFF0C\u652F\u6301\u7684\u5185\u5BB9\u7C7B\u578B\u5982\u4E0B: ",(0,i.jsx)(e.code,{children:"JSON, XML, INI, YAML\u548CTOML"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func LoadContent(data interface{}, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadContent() {\n      jsonContent := `{"name":"john", "score":"100"}`\n\n      j, _ := gjson.LoadContent(jsonContent)\n\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadContent_UTF8BOM() {\n      jsonContent := `{"name":"john", "score":"100"}`\n\n      content := make([]byte, 3, len(jsonContent)+3)\n      content[0] = 0xEF\n      content[1] = 0xBB\n      content[2] = 0xBF\n      content = append(content, jsonContent...)\n\n      j, _ := gjson.LoadContent(content)\n\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadContent_Xml() {\n      xmlContent := `<?xml version="1.0" encoding="UTF-8"?>\n      <base>\n          <name>john</name>\n          <score>100</score>\n      </base>`\n\n      x, _ := gjson.LoadContent(xmlContent)\n\n      fmt.Println(x.Get("base.name"))\n      fmt.Println(x.Get("base.score"))\n\n      // Output:\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loadcontenttype",children:"LoadContentType"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"LoadContentType"})," \u6839\u636E\u7ED9\u5B9A\u7684\u5185\u5BB9\u548C\u7C7B\u578B\u521B\u5EFA\u4E00\u4E2A ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\uFF0C\u652F\u6301\u7684\u5185\u5BB9\u7C7B\u578B\u5982\u4E0B: ",(0,i.jsx)(e.code,{children:"Json, XML, INI, YAML\u548CTOML"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func LoadContentType(dataType string, data interface{}, safe ...bool) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleLoadContentType() {\n      jsonContent := `{"name":"john", "score":"100"}`\n      xmlContent := `<?xml version="1.0" encoding="UTF-8"?>\n      <base>\n          <name>john</name>\n          <score>100</score>\n      </base>`\n\n      j, _ := gjson.LoadContentType("json", jsonContent)\n      x, _ := gjson.LoadContentType("xml", xmlContent)\n      j1, _ := gjson.LoadContentType("json", "")\n\n      fmt.Println(j.Get("name"))\n      fmt.Println(j.Get("score"))\n      fmt.Println(x.Get("base.name"))\n      fmt.Println(x.Get("base.score"))\n      fmt.Println(j1.Get(""))\n\n      // Output:\n      // john\n      // 100\n      // john\n      // 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"isvaliddatatype",children:(0,i.jsx)(e.code,{children:"IsValidDataType"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"IsValidDataType"})," \u68C0\u67E5\u7ED9\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"dataType"})," \u662F\u5426\u662F\u53EF\u4EE5\u7528\u4E8E\u52A0\u8F7D\u7684\u6709\u6548\u6570\u636E\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func IsValidDataType(dataType string) bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleIsValidDataType() {\n      fmt.Println(gjson.IsValidDataType("json"))\n      fmt.Println(gjson.IsValidDataType("yml"))\n      fmt.Println(gjson.IsValidDataType("js"))\n      fmt.Println(gjson.IsValidDataType("mp4"))\n      fmt.Println(gjson.IsValidDataType("xsl"))\n      fmt.Println(gjson.IsValidDataType("txt"))\n      fmt.Println(gjson.IsValidDataType(""))\n      fmt.Println(gjson.IsValidDataType(".json"))\n\n      // Output:\n      // true\n      // true\n      // true\n      // false\n      // false\n      // false\n      // false\n      // true\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"valid",children:(0,i.jsx)(e.code,{children:"Valid"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Valid"})," \u68C0\u67E5 ",(0,i.jsx)(e.code,{children:"data"})," \u662F\u5426\u4E3A\u6709\u6548\u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u6570\u636E\u7C7B\u578B\u3002 \u53C2\u6570 ",(0,i.jsx)(e.code,{children:"data"})," \u6307\u5B9A ",(0,i.jsx)(e.code,{children:"JSON"})," \u683C\u5F0F\u6570\u636E\uFF0C\u53EF\u4EE5\u662F ",(0,i.jsx)(e.code,{children:"bytes"})," \u6216 ",(0,i.jsx)(e.code,{children:"string"})," \u7C7B\u578B\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func Valid(data interface{}) bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleValid() {\n      data1 := []byte(`{"n":123456789, "m":{"k":"v"}, "a":[1,2,3]}`)\n      data2 := []byte(`{"n":123456789, "m":{"k":"v"}, "a":[1,2,3]`)\n      fmt.Println(gjson.Valid(data1))\n      fmt.Println(gjson.Valid(data2))\n\n      // Output:\n      // true\n      // false\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"marshal",children:"Marshal"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Marshal"})," \u662F ",(0,i.jsx)(e.code,{children:"Encode"})," \u7684\u522B\u540D\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func Marshal(v interface{}) (marshaledBytes []byte, err error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleMarshal() {\n      data := map[string]interface{}{\n          "name":  "john",\n          "score": 100,\n      }\n\n      jsonData, _ := gjson.Marshal(data)\n      fmt.Println(string(jsonData))\n\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "Guo Qiang",\n          Age:  18,\n      }\n\n      infoData, _ := gjson.Marshal(info)\n      fmt.Println(string(infoData))\n\n      // Output:\n      // {"name":"john","score":100}\n      // {"Name":"Guo Qiang","Age":18}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"marshalindent",children:(0,i.jsx)(e.code,{children:"MarshalIndent"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"MarshalIndent"})," \u662F ",(0,i.jsx)(e.code,{children:"json.``MarshalIndent"})," \u7684\u522B\u540D \u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func MarshalIndent(v interface{}, prefix, indent string) (marshaledBytes []byte, err error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleMarshalIndent() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      infoData, _ := gjson.MarshalIndent(info, "", "\\t")\n      fmt.Println(string(infoData))\n\n      // Output:\n      // {\n      //    "Name": "John",\n      //    "Age": 18\n      // }\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"unmarshal",children:"Unmarshal"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Unmarshal"})," \u662F ",(0,i.jsx)(e.code,{children:"DecodeTo"})," \u7684\u522B\u540D\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func Unmarshal(data []byte, v interface{}) (err error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleUnmarshal() {\n      type BaseInfo struct {\n          Name  string\n          Score int\n      }\n\n      var info BaseInfo\n\n      jsonContent := "{\\"name\\":\\"john\\",\\"score\\":100}"\n      gjson.Unmarshal([]byte(jsonContent), &info)\n      fmt.Printf("%+v", info)\n\n      // Output:\n      // {Name:john Score:100}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"encode",children:"Encode"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Encode"})," \u5C06\u4EFB\u610F\u7C7B\u578B ",(0,i.jsx)(e.code,{children:"value"})," \u5E8F\u5217\u5316\u4E3A\u5185\u5BB9\u4E3A ",(0,i.jsx)(e.code,{children:"JSON"})," \u7684 ",(0,i.jsx)(e.code,{children:"byte"})," \u6570\u7EC4\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func Encode(value interface{}) ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleEncode() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      infoData, _ := gjson.Encode(info)\n      fmt.Println(string(infoData))\n\n      // Output:\n      // {"Name":"John","Age":18}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mustencode",children:(0,i.jsx)(e.code,{children:"MustEncode"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"MustEncode"})," \u6267\u884C ",(0,i.jsx)(e.code,{children:"Encode"})," \u64CD\u4F5C\uFF0C\u4F46\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u5B83\u4F1A ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func MustEncode(value interface{}) []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleMustEncode() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      infoData := gjson.MustEncode(info)\n      fmt.Println(string(infoData))\n\n      // Output:\n      // {"Name":"John","Age":18}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"encodestring",children:(0,i.jsx)(e.code,{children:"EncodeString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"EncodeString"})," \u5C06\u4EFB\u610F\u7C7B\u578B ",(0,i.jsx)(e.code,{children:"value"})," \u5E8F\u5217\u5316\u4E3A\u5185\u5BB9\u4E3A ",(0,i.jsx)(e.code,{children:"JSON"})," \u7684 ",(0,i.jsx)(e.code,{children:"string"})," \u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func EncodeString(value interface{}) (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleEncodeString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      infoData, _ := gjson.EncodeString(info)\n      fmt.Println(infoData)\n\n      // Output:\n      // {"Name":"John","Age":18}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mustencodestring",children:(0,i.jsx)(e.code,{children:"MustEncodeString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustEncodeString"})," \u5C06\u4EFB\u610F\u7C7B\u578B ",(0,i.jsx)(e.code,{children:"value"})," \u5E8F\u5217\u5316\u4E3A\u5185\u5BB9\u4E3A ",(0,i.jsx)(e.code,{children:"JSON"})," \u7684 ",(0,i.jsx)(e.code,{children:"string"}),"\uFF0C\u4F46\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u5B83\u4F1A ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func MustEncodeString(value interface{}) string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleMustEncodeString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      infoData := gjson.MustEncodeString(info)\n      fmt.Println(infoData)\n\n      // Output:\n      // {"Name":"John","Age":18}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"decode",children:(0,i.jsx)(e.code,{children:"Decode"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Decode"})," \u5C06 ",(0,i.jsx)(e.code,{children:"JSON"})," \u683C\u5F0F\u7684\u5185\u5BB9 ",(0,i.jsx)(e.code,{children:"data"})," \u89E3\u7801\u4E3A ",(0,i.jsx)(e.code,{children:"interface{}"}),"\u3002 \u53C2\u6570 ",(0,i.jsx)(e.code,{children:"data"})," \u53EF\u4EE5\u662F ",(0,i.jsx)(e.code,{children:"[]byte"})," \u6216 ",(0,i.jsx)(e.code,{children:"string"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func Decode(data interface{}, options ...Options) (interface{}, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleDecode() {\n      jsonContent := `{"name":"john","score":100}`\n      info, _ := gjson.Decode([]byte(jsonContent))\n      fmt.Println(info)\n\n      // Output:\n      // map[name:john score:100]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"decodeto",children:"DecodeTo"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"DecodeTo"})," \u5C06 ",(0,i.jsx)(e.code,{children:"JSON"})," \u683C\u5F0F\u7684\u6570\u636E ",(0,i.jsx)(e.code,{children:"data"})," \u89E3\u7801\u5230\u6307\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"interface"})," \u7C7B\u578B\u7684\u53D8\u91CF ",(0,i.jsx)(e.code,{children:"v"})," \u4E2D\u3002\u53C2\u6570 ",(0,i.jsx)(e.code,{children:"data"})," \u53EF\u4EE5\u662F ",(0,i.jsx)(e.code,{children:"[]byte"})," \u6216 ",(0,i.jsx)(e.code,{children:"string"}),"\u3002\u53C2\u6570 ",(0,i.jsx)(e.code,{children:"v"})," \u5E94\u8BE5\u662F\u6307\u9488\u7C7B\u578B\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func DecodeTo(data interface{}, v interface{}, options ...Options) (err error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleDecodeTo() {\n      type BaseInfo struct {\n          Name  string\n          Score int\n      }\n\n      var info BaseInfo\n\n      jsonContent := "{\\"name\\":\\"john\\",\\"score\\":100}"\n      gjson.DecodeTo([]byte(jsonContent), &info)\n      fmt.Printf("%+v", info)\n\n      // Output:\n      // {Name:john Score:100}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"decodetojson",children:(0,i.jsx)(e.code,{children:"DecodeToJson"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"DecodeToJson"})," \u5C06 ",(0,i.jsx)(e.code,{children:"JSON"})," \u683C\u5F0F\u7684\u6570\u636E ",(0,i.jsx)(e.code,{children:"data"})," \u7F16\u7801\u4E3A ",(0,i.jsx)(e.code,{children:"json"})," \u5BF9\u8C61\u3002\u53C2\u6570 ",(0,i.jsx)(e.code,{children:"data"})," \u53EF\u4EE5\u662F ",(0,i.jsx)(e.code,{children:"[]byte"})," \u6216 ",(0,i.jsx)(e.code,{children:"string"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func DecodeToJson(data interface{}, options ...Options) (*Json, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleDecodeToJson() {\n      jsonContent := `{"name":"john","score":100}"`\n      j, _ := gjson.DecodeToJson([]byte(jsonContent))\n      fmt.Println(j.Map())\n\n      // May Output:\n      // map[name:john score:100]\n}\n\n\n'})}),"\n",(0,i.jsx)(e.h3,{id:"setsplitchar",children:(0,i.jsx)(e.code,{children:"SetSplitChar"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"SetSplitChar"})," \u8BBE\u7F6E\u6570\u636E\u8BBF\u95EE\u7684\u5C42\u7EA7\u5206\u9694\u7B26\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) SetSplitChar(char byte)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_SetSplitChar() {\n      data :=\n          `{\n          "users" : {\n              "count" : 2,\n              "list"  : [\n                  {"name" : "Ming",  "score" : 60},\n                  {"name" : "John", "score" : 99.5}\n              ]\n          }\n      }`\n      if j, err := gjson.DecodeToJson(data); err != nil {\n          panic(err)\n      } else {\n          j.SetSplitChar(\'#\')\n          fmt.Println("John Score:", j.Get("users#list#1#score").Float32())\n      }\n      // Output:\n      // John Score: 99.5\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"setviolencecheck",children:(0,i.jsx)(e.code,{children:"SetViolenceCheck"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"SetViolenceCheck"})," \u542F\u7528/\u7981\u7528\u6570\u636E\u5C42\u7EA7\u8BBF\u95EE\u7684\u66B4\u529B\u68C0\u67E5\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) SetViolenceCheck(enabled bool)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_SetViolenceCheck() {\n      data :=\n          `{\n          "users" : {\n              "count" : 100\n          },\n          "users.count" : 101\n      }`\n      if j, err := gjson.DecodeToJson(data); err != nil {\n          fmt.Println(err)\n      } else {\n          j.SetViolenceCheck(true)\n          fmt.Println("Users Count:", j.Get("users.count"))\n      }\n      // Output:\n      // Users Count: 101\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"tojson",children:(0,i.jsx)(e.code,{children:"ToJson"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToJson"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToJson() ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToJson() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonBytes, _ := j.ToJson()\n      fmt.Println(string(jsonBytes))\n\n      // Output:\n      // {"Age":18,"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"tojsonstring",children:(0,i.jsx)(e.code,{children:"ToJsonString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToJsonString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToJsonString() (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToJsonString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonStr, _ := j.ToJsonString()\n      fmt.Println(jsonStr)\n\n      // Output:\n      // {"Age":18,"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"tojsonindent",children:"ToJsonIndent"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToJsonIndent"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u7684\u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToJsonIndent() ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToJsonIndent() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonBytes, _ := j.ToJsonIndent()\n      fmt.Println(string(jsonBytes))\n\n      // Output:\n      //{\n      //    "Age": 18,\n      //    "Name": "John"\n      //}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"tojsonindentstring",children:(0,i.jsx)(e.code,{children:"ToJsonIndentString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToJsonIndentString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u7684\u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToJsonIndentString() (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToJsonIndentString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonStr, _ := j.ToJsonIndentString()\n      fmt.Println(jsonStr)\n\n      // Output:\n      //{\n      //    "Age": 18,\n      //    "Name": "John"\n      //}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttojson",children:"MustToJson"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToJson"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\uFF0C\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToJson() []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToJson() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonBytes := j.MustToJson()\n      fmt.Println(string(jsonBytes))\n\n      // Output:\n      // {"Age":18,"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttojsonstring",children:(0,i.jsx)(e.code,{children:"MustToJsonString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToJsonString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\uFF0C\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToJsonString() string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToJsonString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonStr := j.MustToJsonString()\n      fmt.Println(jsonStr)\n\n      // Output:\n      // {"Age":18,"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttojsonindent",children:"MustToJsonIndent"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToJsonStringIndent"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u7684\u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\uFF0C\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToJsonIndent() []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToJsonIndent() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonBytes := j.MustToJsonIndent()\n      fmt.Println(string(jsonBytes))\n\n      // Output:\n      //{\n      //    "Age": 18,\n      //    "Name": "John"\n      //}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttojsonindentstring",children:(0,i.jsx)(e.code,{children:"MustToJsonIndentString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToJsonStringIndent"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u7684\u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"JSON"})," \u5185\u5BB9\uFF0C\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToJsonIndentString() string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToJsonIndentString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonStr := j.MustToJsonIndentString()\n      fmt.Println(jsonStr)\n\n      // Output:\n      //{\n      //    "Age": 18,\n      //    "Name": "John"\n      //}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toxml",children:"ToXml"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToXml"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"XML"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToXml(rootTag ...string) ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToXml() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlBytes, _ := j.ToXml()\n      fmt.Println(string(xmlBytes))\n\n      // Output:\n      // <doc><Age>18</Age><Name>John</Name></doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toxmlstring",children:(0,i.jsx)(e.code,{children:"ToXmlString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToXmlString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"XML"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToXmlString(rootTag ...string) (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToXmlString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlStr, _ := j.ToXmlString()\n      fmt.Println(string(xmlStr))\n\n      // Output:\n      // <doc><Age>18</Age><Name>John</Name></doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toxmlindent",children:"ToXmlIndent"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToXmlIndent"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u7684\u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"XML"})," \u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToXmlIndent(rootTag ...string) ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToXmlIndent() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlBytes, _ := j.ToXmlIndent()\n      fmt.Println(string(xmlBytes))\n\n      // Output:\n      //<doc>\n      //    <Age>18</Age>\n      //    <Name>John</Name>\n      //</doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toxmlindentstring",children:(0,i.jsx)(e.code,{children:"ToXmlIndentString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToXmlIndentString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u7684\u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"XML"})," \u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToXmlIndentString(rootTag ...string) (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToXmlIndentString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlStr, _ := j.ToXmlIndentString()\n      fmt.Println(string(xmlStr))\n\n      // Output:\n      //<doc>\n      //    <Age>18</Age>\n      //    <Name>John</Name>\n      //</doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoxml",children:"MustToXml"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToXml"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"XML"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToXml(rootTag ...string) []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToXml() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlBytes := j.MustToXml()\n      fmt.Println(string(xmlBytes))\n\n      // Output:\n      // <doc><Age>18</Age><Name>John</Name></doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoxmlstring",children:(0,i.jsx)(e.code,{children:"MustToXmlString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToXmlString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"XML"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToXmlString(rootTag ...string) string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToXmlString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlStr := j.MustToXmlString()\n      fmt.Println(string(xmlStr))\n\n      // Output:\n      // <doc><Age>18</Age><Name>John</Name></doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoxmlindent",children:"MustToXmlIndent"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToXmlStringIndent"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"XML"})," \u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToXmlIndent(rootTag ...string) []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToXmlIndent() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlBytes := j.MustToXmlIndent()\n      fmt.Println(string(xmlBytes))\n\n      // Output:\n      //<doc>\n      //    <Age>18</Age>\n      //    <Name>John</Name>\n      //</doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoxmlindentstring",children:(0,i.jsx)(e.code,{children:"MustToXmlIndentString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToXmlStringIndentString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"XML"})," \u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToXmlIndentString(rootTag ...string) string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToXmlIndentString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      xmlStr := j.MustToXmlIndentString()\n      fmt.Println(string(xmlStr))\n\n      // Output:\n      //<doc>\n      //    <Age>18</Age>\n      //    <Name>John</Name>\n      //</doc>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toyaml",children:"ToYaml"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToYaml"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"YAML"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToYaml() ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToYaml() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      YamlBytes, _ := j.ToYaml()\n      fmt.Println(string(YamlBytes))\n\n      // Output:\n      //Age: 18\n      //Name: John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toyamlindent",children:"ToYamlIndent"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToYamlIndent"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u5E26\u7F29\u8FDB\u683C\u5F0F\u7684 ",(0,i.jsx)(e.code,{children:"YAML"})," \u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToYamlIndent(indent string) ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToYamlIndent() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      YamlBytes, _ := j.ToYamlIndent("")\n      fmt.Println(string(YamlBytes))\n\n      // Output:\n      //Age: 18\n      //Name: John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toyamlstring",children:(0,i.jsx)(e.code,{children:"ToYamlString"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToYamlString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"YAML"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToYamlString() (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToYamlString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      YamlStr, _ := j.ToYamlString()\n      fmt.Println(string(YamlStr))\n\n      // Output:\n      //Age: 18\n      //Name: John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoyaml",children:(0,i.jsx)(e.code,{children:"MustToYaml"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToYaml"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"YAML"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToYaml() []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToYaml() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      YamlBytes := j.MustToYaml()\n      fmt.Println(string(YamlBytes))\n\n      // Output:\n      //Age: 18\n      //Name: John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoyamlstring",children:"MustToYamlString"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToYamlString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"YAML"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToYamlString() string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToYamlString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      YamlStr := j.MustToYamlString()\n      fmt.Println(string(YamlStr))\n\n      // Output:\n      //Age: 18\n      //Name: John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"totoml",children:(0,i.jsx)(e.code,{children:"ToToml"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToToml"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"TOML"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToToml() ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToToml() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      TomlBytes, _ := j.ToToml()\n      fmt.Println(string(TomlBytes))\n\n      // Output:\n      //Age = 18\n      //Name = "John"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"totomlstring",children:"ToTomlString"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToTomlString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"TOML"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToTomlString() (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToTomlString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      TomlStr, _ := j.ToTomlString()\n      fmt.Println(string(TomlStr))\n\n      // Output:\n      //Age = 18\n      //Name = "John"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttotoml",children:(0,i.jsx)(e.code,{children:"MustToToml"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToToml"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"TOML"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToToml() []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToToml() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      TomlBytes := j.MustToToml()\n      fmt.Println(string(TomlBytes))\n\n      // Output:\n      //Age = 18\n      //Name = "John"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttotomlstring",children:"MustToTomlString"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToTomlString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"TOML"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToTomlString() string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToTomlString() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      TomlStr := j.MustToTomlString()\n      fmt.Println(string(TomlStr))\n\n      // Output:\n      //Age = 18\n      //Name = "John"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toini",children:(0,i.jsx)(e.code,{children:"ToIni"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToIni"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"INI"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToIni() ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToIni() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      IniBytes, _ := j.ToIni()\n      fmt.Println(string(IniBytes))\n\n      // May Output:\n      //Name=John\n      //Age=18\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"toinistring",children:"ToIniString"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"ToIniString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"INI"})," \u7684\u5185\u5BB9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) ToIniString() (string, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_ToIniString() {\n      type BaseInfo struct {\n          Name string\n      }\n\n      info := BaseInfo{\n          Name: "John",\n      }\n\n      j := gjson.New(info)\n      IniStr, _ := j.ToIniString()\n      fmt.Println(string(IniStr))\n\n      // Output:\n      //Name=John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoini",children:(0,i.jsx)(e.code,{children:"MustToIni"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToIni"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"[]byte"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"INI"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToIni() []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToIni() {\n      type BaseInfo struct {\n          Name string\n      }\n\n      info := BaseInfo{\n          Name: "John",\n      }\n\n      j := gjson.New(info)\n      IniBytes := j.MustToIni()\n      fmt.Println(string(IniBytes))\n\n      // Output:\n      //Name=John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"musttoinistring",children:"MustToIniString"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MustToIniString"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"string"})," \u683C\u5F0F\u4E3A ",(0,i.jsx)(e.code,{children:"INI"})," \u7684\u5185\u5BB9\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustToIniString() string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustToIniString() {\n      type BaseInfo struct {\n          Name string\n      }\n\n      info := BaseInfo{\n          Name: "John",\n      }\n\n      j := gjson.New(info)\n      IniStr := j.MustToIniString()\n      fmt.Println(string(IniStr))\n\n      // Output:\n      //Name=John\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"marshaljson",children:"MarshalJSON"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"MarshalJSON"})," \u5B9E\u73B0\u4E86 ",(0,i.jsx)(e.code,{children:"json.Marshal"})," \u7684\u63A5\u53E3 ",(0,i.jsx)(e.code,{children:"MarshalJSON"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j Json) MarshalJSON() ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MarshalJSON() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      jsonBytes, _ := j.MarshalJSON()\n      fmt.Println(string(jsonBytes))\n\n      // Output:\n      // {"Age":18,"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"unmarshaljson",children:"UnmarshalJSON"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"UnmarshalJSON \u5B9E\u73B0\u4E86"})," ",(0,i.jsx)(e.code,{children:"json.Unmarshal \u7684\u63A5\u53E3"})," ",(0,i.jsx)(e.code,{children:"UnmarshalJSON"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) UnmarshalJSON(b []byte) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_UnmarshalJSON() {\n      jsonStr := `{"Age":18,"Name":"John"}`\n\n      j := gjson.New("")\n      j.UnmarshalJSON([]byte(jsonStr))\n      fmt.Println(j.Map())\n\n      // Output:\n      // map[Age:18 Name:John]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"unmarshalvalue",children:(0,i.jsx)(e.code,{children:"UnmarshalValue"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"UnmarshalValue"})," \u662F\u4E00\u4E2A\u4E3A ",(0,i.jsx)(e.code,{children:"Json"})," \u8BBE\u7F6E\u4EFB\u4F55\u7C7B\u578B\u7684\u503C\u7684\u63A5\u53E3\u5B9E\u73B0\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) UnmarshalValue(value interface{}) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_UnmarshalValue_Yaml() {\n      yamlContent :=\n          `base:\n    name: john\n    score: 100`\n\n      j := gjson.New("")\n      j.UnmarshalValue([]byte(yamlContent))\n      fmt.Println(j.Var().String())\n\n      // Output:\n      // {"base":{"name":"john","score":100}}\n}\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_UnmarshalValue_Xml() {\n      xmlStr := `<?xml version="1.0" encoding="UTF-8"?><doc><name>john</name><score>100</score></doc>`\n\n      j := gjson.New("")\n      j.UnmarshalValue([]byte(xmlStr))\n      fmt.Println(j.Var().String())\n\n      // Output:\n      // {"doc":{"name":"john","score":"100"}}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapstrany",children:(0,i.jsx)(e.code,{children:"MapStrAny"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"MapStrAny"})," \u5B9E\u73B0\u4E86\u63A5\u53E3\u65B9\u6CD5 ",(0,i.jsx)(e.code,{children:"MapStrAny()"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MapStrAny() map[string]interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MapStrAny() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      fmt.Println(j.MapStrAny())\n\n      // Output:\n      // map[Age:18 Name:John]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"interfaces",children:"Interfaces"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Interfaces"})," \u5B9E\u73B0\u4E86\u63A5\u53E3\u65B9\u6CD5 ",(0,i.jsx)(e.code,{children:"Interfaces()"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Interfaces() []interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Interfaces() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      infoList := []BaseInfo{\n          BaseInfo{\n              Name: "John",\n              Age:  18,\n          },\n          BaseInfo{\n              Name: "Tom",\n              Age:  20,\n          },\n      }\n\n      j := gjson.New(infoList)\n      fmt.Println(j.Interfaces())\n\n      // Output:\n      // [{John 18} {Tom 20}]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"interface",children:(0,i.jsx)(e.code,{children:"Interface"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Interface"})," \u8FD4\u56DE ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u7684\u503C\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Interface() interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Interface() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      fmt.Println(j.Interface())\n\n      var nilJ *gjson.Json = nil\n      fmt.Println(nilJ.Interface())\n\n      // Output:\n      // map[Age:18 Name:John]\n      // <nil>\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"var",children:(0,i.jsx)(e.code,{children:"Var"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Var"})," \u8FD4\u56DE\u7C7B\u578B\u4E3A ",(0,i.jsx)(e.code,{children:"*gvar.Var"})," \u7684 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u7684\u503C\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Var() *gvar.Var\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Var() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      fmt.Println(j.Var().String())\n      fmt.Println(j.Var().Map())\n\n      // Output:\n      // {"Age":18,"Name":"John"}\n      // map[Age:18 Name:John]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"isnil",children:"IsNil"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"IsNil"})," \u68C0\u67E5Json\u5BF9\u8C61\u503C\u662F\u5426\u4E3A ",(0,i.jsx)(e.code,{children:"nil"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) IsNil() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_IsNil() {\n      data1 := []byte(`{"n":123456789, "m":{"k":"v"}, "a":[1,2,3]}`)\n      data2 := []byte(`{"n":123456789, "m":{"k":"v"}, "a":[1,2,3]`)\n\n      j1, _ := gjson.LoadContent(data1)\n      fmt.Println(j1.IsNil())\n\n      j2, _ := gjson.LoadContent(data2)\n      fmt.Println(j2.IsNil())\n\n      // Output:\n      // false\n      // true\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"get",children:(0,i.jsx)(e.code,{children:"Get"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Get"})," \u6839\u636E\u6307\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"pattern"})," \u68C0\u7D22\u5E76\u8FD4\u56DE\u503C\u3002\u5982\u679C ",(0,i.jsx)(e.code,{children:"pattern"})," \u7ED9\u7684\u662F ",(0,i.jsx)(e.code,{children:'"."'}),"\uFF0C\u5C06\u8FD4\u56DE\u5F53\u524D ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u7684\u6240\u6709\u503C\u3002\u6CA1\u6709 ",(0,i.jsx)(e.code,{children:"pattern"})," \u6CA1\u6709\u627E\u5230\uFF0C\u5219\u8FD4\u56DE ",(0,i.jsx)(e.code,{children:"nil"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Get(pattern string, def ...interface{}) *gvar.Var\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Get() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "array" : ["John", "Ming"]\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n      fmt.Println(j.Get("."))\n      fmt.Println(j.Get("users"))\n      fmt.Println(j.Get("users.count"))\n      fmt.Println(j.Get("users.array"))\n\n      var nilJ *gjson.Json = nil\n      fmt.Println(nilJ.Get("."))\n\n      // Output:\n      // {"users":{"array":["John","Ming"],"count":1}}\n      // {"array":["John","Ming"],"count":1}\n      // 1\n      // ["John","Ming"]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"getjson",children:(0,i.jsx)(e.code,{children:"GetJson"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"GetJson"})," \u901A\u8FC7\u6307\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"pattern"})," \u83B7\u53D6\u503C\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A\u4E00\u4E2A\u975E\u5E76\u53D1\u5B89\u5168\u7684 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) GetJson(pattern string, def ...interface{}) *Json\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_GetJson() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "array" : ["John", "Ming"]\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      fmt.Println(j.GetJson("users.array").Array())\n\n      // Output:\n      // [John Ming]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"getjsons",children:"GetJsons"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"GetJsons"})," \u901A\u8FC7\u6307\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"pattern"})," \u83B7\u53D6\u503C\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A\u4E00\u4E2A\u975E\u5E76\u53D1\u5B89\u5168\u7684 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u5207\u7247\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) GetJsons(pattern string, def ...interface{}) []*Json\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_GetJsons() {\n      data :=\n          `{\n          "users" : {\n              "count" : 3,\n              "array" : [{"Age":18,"Name":"John"}, {"Age":20,"Name":"Tom"}]\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      jsons := j.GetJsons("users.array")\n      for _, json := range jsons {\n          fmt.Println(json.Interface())\n      }\n\n      // Output:\n      // map[Age:18 Name:John]\n      // map[Age:20 Name:Tom]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"getjsonmap",children:(0,i.jsx)(e.code,{children:"GetJsonMap"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"GetJsonMap"})," \u901A\u8FC7\u6307\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"pattern"})," \u83B7\u53D6\u503C\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A\u4E00\u4E2A\u975E\u5E76\u53D1\u5B89\u5168\u7684 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u7684 ",(0,i.jsx)(e.code,{children:"map"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) GetJsonMap(pattern string, def ...interface{}) map[string]*Json\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_GetJsonMap() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "array" : {\n                  "info" : {"Age":18,"Name":"John"},\n                  "addr" : {"City":"Chengdu","Company":"Tencent"}\n              }\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      jsonMap := j.GetJsonMap("users.array")\n\n      for _, json := range jsonMap {\n          fmt.Println(json.Interface())\n      }\n\n      // May Output:\n      // map[City:Chengdu Company:Tencent]\n      // map[Age:18 Name:John]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"set",children:(0,i.jsx)(e.code,{children:"Set"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Set"})," \u8BBE\u7F6E\u6307\u5B9A ",(0,i.jsx)(e.code,{children:"pattern"})," \u7684\u503C\u3002 \u5B83\u9ED8\u8BA4\u652F\u6301\u901A\u8FC7\u5B57\u7B26 ",(0,i.jsx)(e.code,{children:"'.'"})," \u8FDB\u884C\u6570\u636E\u5C42\u7EA7\u8BBF\u95EE\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Set(pattern string, value interface{}) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Set() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      j.Set("Addr", "ChengDu")\n      j.Set("Friends.0", "Tom")\n      fmt.Println(j.Var().String())\n\n      // Output:\n      // {"Addr":"ChengDu","Age":18,"Friends":["Tom"],"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mustset",children:(0,i.jsx)(e.code,{children:"MustSet"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"MustSet"})," \u6267\u884C ",(0,i.jsx)(e.code,{children:"Set"}),"\uFF0C\u4F46\u5982\u679C\u6709\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustSet(pattern string, value interface{})\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustSet() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      j.MustSet("Addr", "ChengDu")\n      fmt.Println(j.Var().String())\n\n      // Output:\n      // {"Addr":"ChengDu","Age":18,"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"remove",children:(0,i.jsx)(e.code,{children:"Remove"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Remove"})," \u5220\u9664\u6307\u5B9A ",(0,i.jsx)(e.code,{children:"pattern"})," \u7684\u503C\u3002 \u5B83\u9ED8\u8BA4\u652F\u6301\u901A\u8FC7\u5B57\u7B26 ",(0,i.jsx)(e.code,{children:"'.'"})," \u8FDB\u884C\u6570\u636E\u5C42\u7EA7\u8BBF\u95EE\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Remove(pattern string) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Remove() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      j.Remove("Age")\n      fmt.Println(j.Var().String())\n\n      // Output:\n      // {"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mustremove",children:"MustRemove"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"MustRemove"})," \u6267\u884C",(0,i.jsx)(e.code,{children:"Remove"}),"\uFF0C\u4F46\u5982\u679C\u6709\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustRemove(pattern string)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustRemove() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      j.MustRemove("Age")\n      fmt.Println(j.Var().String())\n\n      // Output:\n      // {"Name":"John"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"contains",children:(0,i.jsx)(e.code,{children:"Contains"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Contains"})," \u68C0\u67E5\u6307\u5B9A ",(0,i.jsx)(e.code,{children:"pattern"})," \u7684\u503C\u662F\u5426\u5B58\u5728\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Contains(pattern string) bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Contains() {\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{\n          Name: "John",\n          Age:  18,\n      }\n\n      j := gjson.New(info)\n      fmt.Println(j.Contains("Age"))\n      fmt.Println(j.Contains("Addr"))\n\n      // Output:\n      // true\n      // false\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"len",children:"Len"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Len"})," \u6839\u636E\u6307\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"pattern"})," \u8FD4\u56DE \u503C\u7684\u957F\u5EA6/\u5927\u5C0F\u3002 ",(0,i.jsx)(e.code,{children:"pattern"})," \u7684\u503C\u5E94\u8BE5\u662F ",(0,i.jsx)(e.code,{children:"slice"})," \u6216 ",(0,i.jsx)(e.code,{children:"map"})," \u7684\u7C7B\u578B\u3002 \u5982\u679C\u627E\u4E0D\u5230\u76EE\u6807\u503C\u6216\u7C7B\u578B\u65E0\u6548\uFF0C\u5219\u8FD4\u56DE ",(0,i.jsx)(e.code,{children:"-1"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Len(pattern string) int\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Len() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "nameArray" : ["Join", "Tom"],\n              "infoMap" : {\n                  "name" : "Join",\n                  "age" : 18,\n                  "addr" : "ChengDu"\n              }\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      fmt.Println(j.Len("users.nameArray"))\n      fmt.Println(j.Len("users.infoMap"))\n\n      // Output:\n      // 2\n      // 3\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"append",children:(0,i.jsx)(e.code,{children:"Append"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Append"})," \u901A\u8FC7\u6307\u5B9A\u7684 ",(0,i.jsx)(e.code,{children:"pattern"})," \u5C06\u503C\u8FFD\u52A0\u5230 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u4E2D\u3002 ",(0,i.jsx)(e.code,{children:"pattern"})," \u7684\u503C\u7684\u7C7B\u578B\u5E94\u8BE5\u662F ",(0,i.jsx)(e.code,{children:"slice"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Append(pattern string, value interface{}) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Append() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "array" : ["John", "Ming"]\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      j.Append("users.array", "Lily")\n\n      fmt.Println(j.Get("users.array").Array())\n\n      // Output:\n      // [John Ming Lily]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mustappend",children:"MustAppend"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"MustAppend"})," \u6267\u884C ",(0,i.jsx)(e.code,{children:"Append"}),"\uFF0C\u4F46\u5982\u679C\u6709\u4EFB\u4F55\u9519\u8BEF\uFF0C\u4F1A\u53D1\u751F ",(0,i.jsx)(e.code,{children:"panic"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) MustAppend(pattern string, value interface{})\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_MustAppend() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "array" : ["John", "Ming"]\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      j.MustAppend("users.array", "Lily")\n\n      fmt.Println(j.Get("users.array").Array())\n\n      // Output:\n      // [John Ming Lily]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"map",children:"Map"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Map"})," \u5C06\u5F53\u524D ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u8F6C\u6362\u4E3A ",(0,i.jsx)(e.code,{children:"map[string]interface{}"}),"\u3002 \u5982\u679C\u5931\u8D25\uFF0C\u5219\u8FD4\u56DE ",(0,i.jsx)(e.code,{children:"nil"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Map() map[string]interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Map() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "info" : {\n                  "name" : "John",\n                  "age" : 18,\n                  "addr" : "ChengDu"\n              }\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      fmt.Println(j.Get("users.info").Map())\n\n      // Output:\n      // map[addr:ChengDu age:18 name:John]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"array",children:"Array"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A",(0,i.jsx)(e.code,{children:"Array"})," \u5C06\u5F53\u524D ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u8F6C\u6362\u4E3A ",(0,i.jsx)(e.code,{children:"[]interface{}"}),"\u3002\xa0\u5982\u679C\u5931\u8D25\uFF0C\u5219\u8FD4\u56DE ",(0,i.jsx)(e.code,{children:"nil"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Array() []interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Array() {\n      data :=\n          `{\n          "users" : {\n              "count" : 1,\n              "array" : ["John", "Ming"]\n          }\n      }`\n\n      j, _ := gjson.LoadContent(data)\n\n      fmt.Println(j.Get("users.array"))\n\n      // Output:\n      // ["John","Ming"]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"scan",children:(0,i.jsx)(e.code,{children:"Scan"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Scan"})," \u81EA\u52A8\u8C03\u7528 ",(0,i.jsx)(e.code,{children:"Struct"})," \u6216 ",(0,i.jsx)(e.code,{children:"Structs"})," \u51FD\u6570\u6839\u636E\u53C2\u6570 ",(0,i.jsx)(e.code,{children:"pointer"})," \u7684\u7C7B\u578B\u6765\u8FDB\u884C\u8F6C\u6362\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Scan(pointer interface{}, mapping ...map[string]string) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Scan() {\n      data := `{"name":"john","age":"18"}`\n\n      type BaseInfo struct {\n          Name string\n          Age  int\n      }\n\n      info := BaseInfo{}\n\n      j, _ := gjson.LoadContent(data)\n      j.Scan(&info)\n\n      fmt.Println(info)\n\n      // May Output:\n      // {john 18}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"dump",children:"Dump"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u8BF4\u660E\uFF1A ",(0,i.jsx)(e.code,{children:"Dump"})," \u4EE5\u53EF\u8BFB\u6027\u66F4\u9AD8\u7684\u65B9\u5F0F\u6253\u5370 ",(0,i.jsx)(e.code,{children:"Json"})," \u5BF9\u8C61\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u683C\u5F0F\uFF1A"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (j *Json) Dump()\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleJson_Dump() {\n      data := `{"name":"john","age":"18"}`\n\n      j, _ := gjson.LoadContent(data)\n      j.Dump()\n\n      // May Output:\n      //{\n      //    "name": "john",\n      //    "age":  "18",\n      //}\n}\n'})})]})}function j(n={}){let{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return d},a:function(){return r}});var l=s(667294);let i={},c=l.createContext(i);function r(n){let e=l.useContext(c);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),l.createElement(c.Provider,{value:e},n.children)}}}]);