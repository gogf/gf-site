"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["72394"],{303505:function(e,t,r){r.r(t),r.d(t,{metadata:()=>n,contentTitle:()=>c,default:()=>l,assets:()=>m,toc:()=>u,frontMatter:()=>s});var n=JSON.parse('{"id":"docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u76D1\u63A7\u544A\u8B66/\u76D1\u63A7\u544A\u8B66-\u6307\u6807\u5C5E\u6027","title":"\u76D1\u63A7\u544A\u8B66-\u6307\u6807\u5C5E\u6027","description":"\u5728GoFrame\u6846\u67B6\u4E2D\u7684\u76D1\u63A7\u544A\u8B66\u7EC4\u4EF6\u4E2D\u4F7F\u7528\u6307\u6807\u5C5E\u6027\u8FDB\u884C\u8FC7\u6EE4\u3001\u6C47\u603B\u548C\u7EDF\u8BA1\u3002\u63D0\u4F9B\u4E86\u5E38\u91CF\u5C5E\u6027\u3001\u53D8\u91CF\u5C5E\u6027\u548C\u5168\u5C40\u5C5E\u6027\u4E09\u79CD\u5C5E\u6027\u6CE8\u5165\u65B9\u5F0F\uFF0C\u5E76\u901A\u8FC7\u5177\u4F53\u793A\u4F8B\u6F14\u793A\u4E86\u5982\u4F55\u5728\u4E0D\u540C\u573A\u666F\u4E0B\u5E94\u7528\u8FD9\u4E9B\u5C5E\u6027\u3002\u7ED3\u5408OpenTelemetry\u548CPrometheus\uFF0C\u5C55\u793A\u4E86\u5982\u4F55\u5B9A\u4E49\u548C\u5E94\u7528\u6307\u6807\u5C5E\u6027\uFF0C\u4EE5\u5B9E\u73B0\u7075\u6D3B\u9AD8\u6548\u7684\u6570\u636E\u76D1\u63A7\u548C\u5206\u6790\u3002","source":"@site/versioned_docs/version-2.7.x/docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u76D1\u63A7\u544A\u8B66/\u76D1\u63A7\u544A\u8B66-\u6307\u6807\u5C5E\u6027.md","sourceDirName":"docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u76D1\u63A7\u544A\u8B66","slug":"/docs/obs/metrics-attributes","permalink":"/2.7.x/docs/obs/metrics-attributes","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-2.7.x/docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u76D1\u63A7\u544A\u8B66/\u76D1\u63A7\u544A\u8B66-\u6307\u6807\u5C5E\u6027.md","tags":[],"version":"2.7.x","lastUpdatedBy":"John","lastUpdatedAt":1731511511000,"sidebarPosition":4,"frontMatter":{"slug":"/docs/obs/metrics-attributes","title":"\u76D1\u63A7\u544A\u8B66-\u6307\u6807\u5C5E\u6027","sidebar_position":4,"hide_title":true,"keywords":["\u76D1\u63A7\u544A\u8B66","\u6307\u6807\u5C5E\u6027","GoFrame","\u5E38\u91CF\u5C5E\u6027","\u53D8\u91CF\u5C5E\u6027","\u5168\u5C40\u5C5E\u6027","OpenTelemetry","Prometheus","Meter","\u6307\u6807\u6CE8\u5165"],"description":"\u5728GoFrame\u6846\u67B6\u4E2D\u7684\u76D1\u63A7\u544A\u8B66\u7EC4\u4EF6\u4E2D\u4F7F\u7528\u6307\u6807\u5C5E\u6027\u8FDB\u884C\u8FC7\u6EE4\u3001\u6C47\u603B\u548C\u7EDF\u8BA1\u3002\u63D0\u4F9B\u4E86\u5E38\u91CF\u5C5E\u6027\u3001\u53D8\u91CF\u5C5E\u6027\u548C\u5168\u5C40\u5C5E\u6027\u4E09\u79CD\u5C5E\u6027\u6CE8\u5165\u65B9\u5F0F\uFF0C\u5E76\u901A\u8FC7\u5177\u4F53\u793A\u4F8B\u6F14\u793A\u4E86\u5982\u4F55\u5728\u4E0D\u540C\u573A\u666F\u4E0B\u5E94\u7528\u8FD9\u4E9B\u5C5E\u6027\u3002\u7ED3\u5408OpenTelemetry\u548CPrometheus\uFF0C\u5C55\u793A\u4E86\u5982\u4F55\u5B9A\u4E49\u548C\u5E94\u7528\u6307\u6807\u5C5E\u6027\uFF0C\u4EE5\u5B9E\u73B0\u7075\u6D3B\u9AD8\u6548\u7684\u6570\u636E\u76D1\u63A7\u548C\u5206\u6790\u3002"},"sidebar":"mainSidebar","previous":{"title":"\u76D1\u63A7\u544A\u8B66-\u5F02\u6B65\u6307\u6807","permalink":"/2.7.x/docs/obs/metrics-async"},"next":{"title":"\u76D1\u63A7\u544A\u8B66-\u5185\u7F6E\u6307\u6807","permalink":"/2.7.x/docs/obs/metrics-builtin"}}'),i=r("785893"),o=r("250065");let s={slug:"/docs/obs/metrics-attributes",title:"\u76D1\u63A7\u544A\u8B66-\u6307\u6807\u5C5E\u6027",sidebar_position:4,hide_title:!0,keywords:["\u76D1\u63A7\u544A\u8B66","\u6307\u6807\u5C5E\u6027","GoFrame","\u5E38\u91CF\u5C5E\u6027","\u53D8\u91CF\u5C5E\u6027","\u5168\u5C40\u5C5E\u6027","OpenTelemetry","Prometheus","Meter","\u6307\u6807\u6CE8\u5165"],description:"\u5728GoFrame\u6846\u67B6\u4E2D\u7684\u76D1\u63A7\u544A\u8B66\u7EC4\u4EF6\u4E2D\u4F7F\u7528\u6307\u6807\u5C5E\u6027\u8FDB\u884C\u8FC7\u6EE4\u3001\u6C47\u603B\u548C\u7EDF\u8BA1\u3002\u63D0\u4F9B\u4E86\u5E38\u91CF\u5C5E\u6027\u3001\u53D8\u91CF\u5C5E\u6027\u548C\u5168\u5C40\u5C5E\u6027\u4E09\u79CD\u5C5E\u6027\u6CE8\u5165\u65B9\u5F0F\uFF0C\u5E76\u901A\u8FC7\u5177\u4F53\u793A\u4F8B\u6F14\u793A\u4E86\u5982\u4F55\u5728\u4E0D\u540C\u573A\u666F\u4E0B\u5E94\u7528\u8FD9\u4E9B\u5C5E\u6027\u3002\u7ED3\u5408OpenTelemetry\u548CPrometheus\uFF0C\u5C55\u793A\u4E86\u5982\u4F55\u5B9A\u4E49\u548C\u5E94\u7528\u6307\u6807\u5C5E\u6027\uFF0C\u4EE5\u5B9E\u73B0\u7075\u6D3B\u9AD8\u6548\u7684\u6570\u636E\u76D1\u63A7\u548C\u5206\u6790\u3002"},c=void 0,m={},u=[{value:"\u5E38\u91CF\u5C5E\u6027",id:"\u5E38\u91CF\u5C5E\u6027",level:2},{value:"\u53D8\u91CF\u5C5E\u6027",id:"\u53D8\u91CF\u5C5E\u6027",level:2},{value:"\u5168\u5C40\u5C5E\u6027",id:"\u5168\u5C40\u5C5E\u6027",level:2}];function a(e){let t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["\u6307\u6807\u5C5E\u6027\u7528\u4E8E\u5728\u66F4\u4E0A\u5C42\u7684\u6307\u6807\u4F7F\u7528\u4E2D\u8FDB\u884C\u8FC7\u6EE4\u3001\u6C47\u603B\u3001\u7EDF\u8BA1\u7B49\u9AD8\u7EAC\u5EA6\u64CD\u4F5C\u3002\u5728 ",(0,i.jsx)(t.code,{children:"GoFrame"})," \u6846\u67B6\u7684\u76D1\u63A7\u544A\u8B66\u7EC4\u4EF6\u4E2D\uFF0C\u63D0\u4F9B\u4E863\u79CD\u5C5E\u6027\u6CE8\u5165\u65B9\u5F0F\uFF1A ",(0,i.jsx)(t.strong,{children:"\u5E38\u91CF\u5C5E\u6027"}),"\u3001 ",(0,i.jsx)(t.strong,{children:"\u53D8\u91CF\u5C5E\u6027"})," \u548C ",(0,i.jsx)(t.strong,{children:"\u5168\u5C40\u5C5E\u6027"}),"\u3002"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["\u5728 ",(0,i.jsx)(t.code,{children:"OpenTelemetry"})," \u4E2D\u53EB\u505A\u6307\u6807\u5C5E\u6027\uFF08 ",(0,i.jsx)(t.code,{children:"attributes"}),"\uFF09\uFF0C\u4F46\u5728 ",(0,i.jsx)(t.code,{children:"Prometheus"})," \u4E2D\u53EB\u505A\u6307\u6807\u6807\u7B7E\uFF08 ",(0,i.jsx)(t.code,{children:"labels"}),"\uFF09\uFF0C\u4E24\u8005\u662F\u4E00\u4E2A\u542B\u4E49\u3002"]})}),"\n",(0,i.jsx)(t.h2,{id:"\u5E38\u91CF\u5C5E\u6027",children:"\u5E38\u91CF\u5C5E\u6027"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"\u5E38\u91CF\u5C5E\u6027"})," \u662F\u56FA\u5B9A\u7684\u4E00\u7CFB\u5217\u5C5E\u6027\u952E\u503C\u5BF9\uFF0C\u53EF\u4EE5\u7ED1\u5B9A\u5230 ",(0,i.jsx)(t.code,{children:"Meter"})," \u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u76F4\u63A5\u7ED1\u5B9A\u5230\u6307\u6807\u5BF9\u8C61\u4E0A\u3002\u5982\u679C\u7ED1\u5B9A\u5230 ",(0,i.jsx)(t.code,{children:"Meter"})," \u4E0A\uFF0C\u90A3\u4E48 ",(0,i.jsx)(t.code,{children:"Meter"})," \u4E0B\u6240\u6709\u521B\u5EFA\u7684\u6307\u6807\u5BF9\u8C61\u5747\u5E26\u6709\u8BE5\u5C5E\u6027\u952E\u503C\u5BF9\uFF0C\u5982\u679C\u7ED1\u5B9A\u5230\u6307\u6807\u5BF9\u8C61\u4E0A\uFF0C\u90A3\u4E48\u4EC5\u4F1A\u5728\u5F53\u524D\u6307\u6807\u4E0A\u751F\u6548\u3002\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u793A\u4F8B\uFF1A"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "go.opentelemetry.io/otel/exporters/prometheus"\n\n    "github.com/gogf/gf/contrib/metric/otelmetric/v2"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n    "github.com/gogf/gf/v2/os/gmetric"\n)\n\nconst (\n    instrument        = "github.com/gogf/gf/example/metric/basic"\n    instrumentVersion = "v1.0"\n)\n\nvar (\n    meter = gmetric.GetGlobalProvider().Meter(gmetric.MeterOption{\n        Instrument:        instrument,\n        InstrumentVersion: instrumentVersion,\n        Attributes: gmetric.Attributes{\n            gmetric.NewAttribute("meter_const_attr_1", 1),\n        },\n    })\n    counter = meter.MustCounter(\n        "goframe.metric.demo.counter",\n        gmetric.MetricOption{\n            Help: "This is a simple demo for Counter usage",\n            Unit: "bytes",\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("metric_const_attr_1", 1),\n            },\n        },\n    )\n    observableCounter = meter.MustObservableCounter(\n        "goframe.metric.demo.observable_counter",\n        gmetric.MetricOption{\n            Help: "This is a simple demo for ObservableCounter usage",\n            Unit: "%",\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("metric_const_attr_2", 2),\n            },\n        },\n    )\n)\n\nfunc main() {\n    var ctx = gctx.New()\n    // Callback for observable metrics.\n    meter.MustRegisterCallback(func(ctx context.Context, obs gmetric.Observer) error {\n        obs.Observe(observableCounter, 10)\n        return nil\n    }, observableCounter)\n\n    // Prometheus exporter to export metrics as Prometheus format.\n    exporter, err := prometheus.New(\n        prometheus.WithoutCounterSuffixes(),\n        prometheus.WithoutUnits(),\n    )\n    if err != nil {\n        g.Log().Fatal(ctx, err)\n    }\n\n    // OpenTelemetry provider.\n    provider := otelmetric.MustProvider(\n        otelmetric.WithReader(exporter),\n    )\n    provider.SetAsGlobal()\n    defer provider.Shutdown(ctx)\n\n    // Counter.\n    counter.Inc(ctx)\n    counter.Add(ctx, 10)\n\n    // HTTP Server for metrics exporting.\n    otelmetric.StartPrometheusMetricsServer(8000, "/metrics")\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["\u53EF\u4EE5\u770B\u5230\uFF0C\u6211\u4EEC\u901A\u8FC7\u521B\u5EFA ",(0,i.jsx)(t.code,{children:"Meter"})," \u5BF9\u8C61\u6216\u8005 ",(0,i.jsx)(t.code,{children:"Metric"})," \u5BF9\u8C61\u65F6\u7684 ",(0,i.jsx)(t.code,{children:"MeterOption"})," \u6216 ",(0,i.jsx)(t.code,{children:"MetricOption"})," \u53C2\u6570\u4E2D\u7684 ",(0,i.jsx)(t.code,{children:"Attributes"})," \u5C5E\u6027\u5B57\u6BB5\u6765\u6307\u5B9A\u5E38\u91CF\u5C5E\u6027\u3002"]}),"\n",(0,i.jsxs)(t.p,{children:["\u6267\u884C\u540E\uFF0C\u6211\u4EEC\u8BBF\u95EE\xa0",(0,i.jsx)(t.a,{href:"http://127.0.0.1:8000/metrics",children:"http://127.0.0.1:8000/metrics"})," \u770B\u770B\u7ED3\u679C\u3002\u53EF\u4EE5\u770B\u5230\u7ED1\u5B9A\u5230 ",(0,i.jsx)(t.code,{children:"Meter"})," \u4E0A\u7684\u5E38\u91CF\u5C5E\u6027\u5728\u4E24\u4E2A\u6307\u6807\u4E0A\u751F\u6548\u4E86\uFF0C\u4F46\u662F\u5728\u5404\u4E2A\u6307\u6807\u4E0A\u7ED1\u5B9A\u7684\u5E38\u91CF\u5C5E\u6027\u4EC5\u5728\u5BF9\u5E94\u7684\u6307\u6807\u4E0A\u751F\u6548\u4E86\u3002"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:r(394468).Z+"",width:"2966",height:"2014"})}),"\n",(0,i.jsx)(t.h2,{id:"\u53D8\u91CF\u5C5E\u6027",children:"\u53D8\u91CF\u5C5E\u6027"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"\u53D8\u91CF\u5C5E\u6027"})," \u662F\u5728\u6307\u6807\u8FD0\u884C\u65F6\u6307\u5B9A\u7684\u5C5E\u6027\u952E\u503C\u5BF9\uFF0C\u901A\u5E38\u53EA\u80FD\u5728\u8FD0\u884C\u65F6\u624D\u80FD\u786E\u5B9A\u5C5E\u6027\u7684\u952E\u503C\u5BF9\u4FE1\u606F\uFF0C\u5E76\u4E14\u952E\u503C\u5BF9\u53EF\u80FD\u6839\u636E\u4E0D\u540C\u7684\u6267\u884C\u573A\u666F\u800C\u53D1\u751F\u53D8\u5316\uFF0C\u56E0\u6B64\u53EB\u505A\u53D8\u91CF\u5C5E\u6027\u3002"]}),"\n",(0,i.jsx)(t.p,{children:"\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u793A\u4F8B\uFF1A"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "go.opentelemetry.io/otel/exporters/prometheus"\n\n    "github.com/gogf/gf/contrib/metric/otelmetric/v2"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n    "github.com/gogf/gf/v2/os/gmetric"\n)\n\nconst (\n    instrument        = "github.com/gogf/gf/example/metric/basic"\n    instrumentVersion = "v1.0"\n)\n\nvar (\n    meter = gmetric.GetGlobalProvider().Meter(gmetric.MeterOption{\n        Instrument:        instrument,\n        InstrumentVersion: instrumentVersion,\n        Attributes: gmetric.Attributes{\n            gmetric.NewAttribute("meter_const_attr_1", 1),\n        },\n    })\n    counter = meter.MustCounter(\n        "goframe.metric.demo.counter",\n        gmetric.MetricOption{\n            Help: "This is a simple demo for Counter usage",\n            Unit: "bytes",\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("metric_const_attr_1", 1),\n            },\n        },\n    )\n    observableCounter = meter.MustObservableCounter(\n        "goframe.metric.demo.observable_counter",\n        gmetric.MetricOption{\n            Help: "This is a simple demo for ObservableCounter usage",\n            Unit: "%",\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("metric_const_attr_2", 2),\n            },\n        },\n    )\n)\n\nfunc main() {\n    var ctx = gctx.New()\n    // Callback for observable metrics.\n    meter.MustRegisterCallback(func(ctx context.Context, obs gmetric.Observer) error {\n        obs.Observe(observableCounter, 10, gmetric.Option{\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("dynamic_attr_1", 1),\n            },\n        })\n        return nil\n    }, observableCounter)\n\n    // Prometheus exporter to export metrics as Prometheus format.\n    exporter, err := prometheus.New(\n        prometheus.WithoutCounterSuffixes(),\n        prometheus.WithoutUnits(),\n    )\n    if err != nil {\n        g.Log().Fatal(ctx, err)\n    }\n\n    // OpenTelemetry provider.\n    provider := otelmetric.MustProvider(\n        otelmetric.WithReader(exporter),\n    )\n    provider.SetAsGlobal()\n    defer provider.Shutdown(ctx)\n\n    // Counter.\n    counter.Inc(ctx, gmetric.Option{\n        Attributes: gmetric.Attributes{\n            gmetric.NewAttribute("dynamic_attr_2", 2),\n        },\n    })\n    counter.Add(ctx, 10, gmetric.Option{\n        Attributes: gmetric.Attributes{\n            gmetric.NewAttribute("dynamic_attr_3", 3),\n        },\n    })\n\n    // HTTP Server for metrics exporting.\n    otelmetric.StartPrometheusMetricsServer(8000, "/metrics")\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["\u53EF\u4EE5\u770B\u5230\uFF0C\u6211\u4EEC\u5728\u8FD0\u884C\u901A\u8FC7 ",(0,i.jsx)(t.code,{children:"Option"})," \u53C2\u6570\u4E2D\u7684 ",(0,i.jsx)(t.code,{children:"Attributes"})," \u5C5E\u6027\u5B57\u6BB5\u6765\u6307\u5B9A\u6307\u6807\u53D8\u91CF\u5C5E\u6027\uFF0C\u53D8\u91CF\u5C5E\u6027\u6BD4\u8F83\u7075\u6D3B\uFF0C\u76F8\u540C\u7684\u6307\u6807\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E0D\u540C\u7684\u53D8\u91CF\u5C5E\u6027\u3002"]}),"\n",(0,i.jsxs)(t.p,{children:["\u540C\u6837\u7684\uFF0C\u6267\u884C\u540E\uFF0C\u6211\u4EEC\u8BBF\u95EE\xa0",(0,i.jsx)(t.a,{href:"http://127.0.0.1:8000/metrics",children:"http://127.0.0.1:8000/metrics"})," \u770B\u770B\u7ED3\u679C\u3002"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:r(41266).Z+"",width:"2966",height:"2014"})}),"\n",(0,i.jsx)(t.h2,{id:"\u5168\u5C40\u5C5E\u6027",children:"\u5168\u5C40\u5C5E\u6027"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"\u5168\u5C40\u5C5E\u6027"})," \u662F\u4E00\u79CD\u66F4\u52A0\u7075\u6D3B\u7684\u6307\u6807\u5C5E\u6027\u6CE8\u5165\u65B9\u5F0F\uFF0C\u53EF\u4EE5\u6839\u636E ",(0,i.jsx)(t.code,{children:"Instrument"})," \u4FE1\u606F\u8FDB\u884C\u5C5E\u6027\u81EA\u52A8\u6CE8\u5165\uFF0C\u5E76\u4E14\u53EF\u4EE5\u6839\u636E ",(0,i.jsx)(t.code,{children:"Instrument"})," \u540D\u79F0\u7684\u6B63\u5219\u5339\u914D\u6765\u5224\u65AD\u662F\u5426\u5F80\u8BE5 ",(0,i.jsx)(t.code,{children:"Instrument"})," \u4E0B\u6240\u6709\u7684\u6307\u6807\u6CE8\u5165\u6307\u6807\u5C5E\u6027\u4FE1\u606F\u3002"]}),"\n",(0,i.jsx)(t.p,{children:"\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u793A\u4F8B\uFF1A"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "go.opentelemetry.io/otel/exporters/prometheus"\n\n    "github.com/gogf/gf/contrib/metric/otelmetric/v2"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n    "github.com/gogf/gf/v2/os/gmetric"\n)\n\nconst (\n    instrument        = "github.com/gogf/gf/example/metric/basic"\n    instrumentVersion = "v1.0"\n)\n\nvar (\n    meter = gmetric.GetGlobalProvider().Meter(gmetric.MeterOption{\n        Instrument:        instrument,\n        InstrumentVersion: instrumentVersion,\n        Attributes: gmetric.Attributes{\n            gmetric.NewAttribute("meter_const_attr_1", 1),\n        },\n    })\n    counter = meter.MustCounter(\n        "goframe.metric.demo.counter",\n        gmetric.MetricOption{\n            Help: "This is a simple demo for Counter usage",\n            Unit: "bytes",\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("metric_const_attr_1", 1),\n            },\n        },\n    )\n    observableCounter = meter.MustObservableCounter(\n        "goframe.metric.demo.observable_counter",\n        gmetric.MetricOption{\n            Help: "This is a simple demo for ObservableCounter usage",\n            Unit: "%",\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("metric_const_attr_2", 2),\n            },\n        },\n    )\n)\n\nfunc main() {\n    var ctx = gctx.New()\n\n    gmetric.SetGlobalAttributes(gmetric.Attributes{\n        gmetric.NewAttribute("global_attr_1", 1),\n    }, gmetric.SetGlobalAttributesOption{\n        Instrument:        instrument,\n        InstrumentVersion: instrumentVersion,\n        InstrumentPattern: "",\n    })\n\n    // Callback for observable metrics.\n    meter.MustRegisterCallback(func(ctx context.Context, obs gmetric.Observer) error {\n        obs.Observe(observableCounter, 10, gmetric.Option{\n            Attributes: gmetric.Attributes{\n                gmetric.NewAttribute("dynamic_attr_1", 1),\n            },\n        })\n        return nil\n    }, observableCounter)\n\n    // Prometheus exporter to export metrics as Prometheus format.\n    exporter, err := prometheus.New(\n        prometheus.WithoutCounterSuffixes(),\n        prometheus.WithoutUnits(),\n    )\n    if err != nil {\n        g.Log().Fatal(ctx, err)\n    }\n\n    // OpenTelemetry provider.\n    provider := otelmetric.MustProvider(\n        otelmetric.WithReader(exporter),\n    )\n    provider.SetAsGlobal()\n    defer provider.Shutdown(ctx)\n\n    // Counter.\n    counter.Inc(ctx, gmetric.Option{\n        Attributes: gmetric.Attributes{\n            gmetric.NewAttribute("dynamic_attr_2", 2),\n        },\n    })\n    counter.Add(ctx, 10, gmetric.Option{\n        Attributes: gmetric.Attributes{\n            gmetric.NewAttribute("dynamic_attr_3", 3),\n        },\n    })\n\n    // HTTP Server for metrics exporting.\n    otelmetric.StartPrometheusMetricsServer(8000, "/metrics")\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["\u901A\u8FC7 ",(0,i.jsx)(t.code,{children:"gmetric.SetGlobalAttributes"})," \u65B9\u6CD5\u8BBE\u7F6E\u5168\u5C40\u5C5E\u6027\uFF0C\u5E76\u4E14\u6839\u636E\u53C2\u6570 ",(0,i.jsx)(t.code,{children:"gmetric.SetGlobalAttributesOption"})," \u9650\u5236\u5F71\u54CD\u7684\u6307\u6807\u8303\u56F4\u3002"]}),"\n",(0,i.jsxs)(t.p,{children:["\u540C\u6837\u7684\uFF0C\u6267\u884C\u540E\uFF0C\u6211\u4EEC\u8BBF\u95EE\xa0",(0,i.jsx)(t.a,{href:"http://127.0.0.1:8000/metrics",children:"http://127.0.0.1:8000/metrics"})," \u770B\u770B\u7ED3\u679C\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u5168\u5C40\u5C5E\u6027\u5DF2\u7ECF\u81EA\u52A8\u6DFB\u52A0\u5230\u4E86\u6307\u6807\u4E2D\u3002"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:r(26819).Z+"",width:"2966",height:"2014"})})]})}function l(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},41266:function(e,t,r){r.d(t,{Z:function(){return n}});let n=r.p+"assets/images/17cd106aa40f6ca397486301bdaf16cd-d911aa6a01e4505632cce93328ce1cef.png"},394468:function(e,t,r){r.d(t,{Z:function(){return n}});let n=r.p+"assets/images/7604946c482b5592bf13db15e99486f5-75d69059171e18ddcc8037c4a6bf053a.png"},26819:function(e,t,r){r.d(t,{Z:function(){return n}});let n=r.p+"assets/images/dfc79773cb999c35208fe27c98e1ab48-4dc78437e183e52ebba5275526a76aa1.png"},250065:function(e,t,r){r.d(t,{Z:function(){return c},a:function(){return s}});var n=r(667294);let i={},o=n.createContext(i);function s(e){let t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);