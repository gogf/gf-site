name: Build and Deploy

on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy:
    name: Build And Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check documentation consistency
        run: |
          bash .github/workflows/consistency-check.sh

      - name: Install image optimization tools
        run: |
          apt-get update
          apt-get install -y jpegoptim optipng gifsicle webp
          npm install -g svgo

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn

      - name: Install dependencies
        run: |
          yarn

      - name: Generate contributors
        run: |
          bash .github/workflows/generate-contributors.sh

      - name: Generate docs changelog
        run: |
          bash .github/workflows/generate-changelog.sh

      - name: Build website
        run: |
          make build

      # https://github.com/appleboy/scp-action
      # - name: Deploy to main domain server
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     password: ${{ secrets.SSH_PASSWORD }}
      #     port: ${{ secrets.SSH_PORT }}
      #     source: './build/*'
      #     target: '/home/www/goframe.org'
      #     strip_components: 1
      #     rm: true

      - name: Optimize images
        working-directory: build
        run: |
          find . \( -name "*.jpg" -o -name "*.jpeg" \) -exec jpegoptim --max=80 {} \;
          find . -type f -name "*.png" -exec optipng -o2 {} \;
          find . -type f -name "*.gif" -exec gifsicle -O3 --batch {} \;
          find . -type f -name "*.webp" -exec cwebp -q 80 {} -o {}.webp \; -exec mv {}.webp {} \;
          find . -type f -name "*.svg" -exec svgo {} \;

      - name: Deploy to github pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          cname: pages.goframe.org
