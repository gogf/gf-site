"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["59770"],{983213:function(e,n,o){o.r(n),o.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>g,assets:()=>d,toc:()=>l,frontMatter:()=>s});var r=JSON.parse('{"id":"docs/\u5FAE\u670D\u52A1\u5F00\u53D1/\u670D\u52A1\u8D1F\u8F7D\u5747\u8861","title":"Service Load Balancing","description":"The load balancing component in the GoFrame framework, the gsel component, provides multiple built-in load balancing strategies including LeastConnection, Random, RoundRobin, and Weight. Developers can choose the appropriate strategy based on their needs or implement a custom one, with practical application examples of load balancing strategies shown through HTTP and GRPC.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u5FAE\u670D\u52A1\u5F00\u53D1/\u670D\u52A1\u8D1F\u8F7D\u5747\u8861.md","sourceDirName":"docs/\u5FAE\u670D\u52A1\u5F00\u53D1","slug":"/docs/micro-service/load-balance","permalink":"/en/docs/micro-service/load-balance","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u5FAE\u670D\u52A1\u5F00\u53D1/\u670D\u52A1\u8D1F\u8F7D\u5747\u8861.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732440306000,"sidebarPosition":6,"frontMatter":{"slug":"/docs/micro-service/load-balance","title":"Service Load Balancing","sidebar_position":6,"hide_title":true,"keywords":["load balancing","GoFrame","gsel component","LeastConnection","Random","RoundRobin","Weight","HTTP service","GRPC service","custom strategy"],"description":"The load balancing component in the GoFrame framework, the gsel component, provides multiple built-in load balancing strategies including LeastConnection, Random, RoundRobin, and Weight. Developers can choose the appropriate strategy based on their needs or implement a custom one, with practical application examples of load balancing strategies shown through HTTP and GRPC."},"sidebar":"mainSidebar","previous":{"title":"Service Registry and Discovery","permalink":"/en/docs/micro-service/registry-discovery"},"next":{"title":"Service Configuration","permalink":"/en/docs/micro-service/config-service"}}'),t=o("785893"),c=o("250065");let s={slug:"/docs/micro-service/load-balance",title:"Service Load Balancing",sidebar_position:6,hide_title:!0,keywords:["load balancing","GoFrame","gsel component","LeastConnection","Random","RoundRobin","Weight","HTTP service","GRPC service","custom strategy"],description:"The load balancing component in the GoFrame framework, the gsel component, provides multiple built-in load balancing strategies including LeastConnection, Random, RoundRobin, and Weight. Developers can choose the appropriate strategy based on their needs or implement a custom one, with practical application examples of load balancing strategies shown through HTTP and GRPC."},a=void 0,d={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Strategy List",id:"strategy-list",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"<code>HTTP</code>",id:"http",level:3},{value:"<code>GRPC</code>",id:"grpc",level:3}];function i(e){let n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["The load balancing component is used on the client side. The ",(0,t.jsx)(n.code,{children:"GoFrame"})," framework provides a decoupled design with high flexibility and strong extensibility for the load balancing component, which is managed by the ",(0,t.jsx)(n.code,{children:"gsel"})," component. This component defines the interface for load balancing and provides multiple built-in load balancing strategy implementations. Developers can also implement custom load balancing strategies based on the interface."]}),"\n",(0,t.jsx)(n.h2,{id:"strategy-list",children:"Strategy List"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"gsel"})," component provides several commonly used load balancing strategies for developers to choose from:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Strategy Name"}),(0,t.jsx)(n.th,{children:"Strategy Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LeastConnection"})}),(0,t.jsx)(n.td,{children:"Least number of connections."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Random"})}),(0,t.jsx)(n.td,{children:"Random access."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"RoundRobin"})}),(0,t.jsx)(n.td,{children:"Round-robin access."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Weight"})}),(0,t.jsxs)(n.td,{children:["Weighted access. The ",(0,t.jsx)(n.code,{children:"Weight"})," parameter needs to be set during service registration."]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.h3,{id:"http",children:(0,t.jsx)(n.code,{children:"HTTP"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"server.go"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/contrib/registry/etcd/v2"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/net/gsvc"\n)\n\nfunc main() {\n    gsvc.SetRegistry(etcd.New(`127.0.0.1:2379`))\n\n    s := g.Server(`hello.svc`)\n    s.BindHandler("/", func(r *ghttp.Request) {\n        g.Log().Info(r.Context(), `request received`)\n        r.Response.Write(`Hello world`)\n    })\n    s.Run()\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"client.go"})}),"\n",(0,t.jsxs)(n.p,{children:["Here, ",(0,t.jsx)(n.code,{children:"gsel.SetBuilder(gsel.NewBuilderRoundRobin())"})," is used to set the global load balancing strategy to round-robin access."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/contrib/registry/etcd/v2"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/gsel"\n    "github.com/gogf/gf/v2/net/gsvc"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    gsvc.SetRegistry(etcd.New(`127.0.0.1:2379`))\n    gsel.SetBuilder(gsel.NewBuilderRoundRobin())\n\n    for i := 0; i < 10; i++ {\n        ctx := gctx.New()\n        res := g.Client().GetContent(ctx, `http://hello.svc/`)\n        g.Log().Info(ctx, res)\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Start two servers separately and run the client."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"server1"})," terminal output:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ go run server.go\n2023-03-15 21:24:08.413 [INFO] pid[10219]: http server started listening on [:63956]\n2023-03-15 21:24:08.413 [INFO] openapi specification is disabled\n2023-03-15 21:24:08.413 [DEBU] service register: &{Head: Deployment: Namespace: Name:hello.svc Version: Endpoints:10.35.12.81:63956 Metadata:map[insecure:true protocol:http]}\n2023-03-15 21:24:08.455 [DEBU] etcd put success with key "/service/default/default/hello.svc/latest/10.35.12.81:63956", value "{"insecure":true,"protocol":"http"}", lease "7587869265945813020"\n\n   SERVER   | DOMAIN  | ADDRESS | METHOD | ROUTE |                             HANDLER                             |    MIDDLEWARE\n------------|---------|---------|--------|-------|-----------------------------------------------------------------|--------------------\n  hello.svc | default | :63956  | ALL    | /     | main.main.func1                                                 |\n------------|---------|---------|--------|-------|-----------------------------------------------------------------|--------------------\n  hello.svc | default | :63956  | ALL    | /*    | github.com/gogf/gf/v2/net/ghttp.internalMiddlewareServerTracing | GLOBAL MIDDLEWARE\n------------|---------|---------|--------|-------|-----------------------------------------------------------------|--------------------\n\n2023-03-15 21:24:18.357 [INFO] {e05b6049859a4c17d1de5d62eafa5a5f} request received\n2023-03-15 21:24:18.358 [INFO] {785e9349859a4c17d3de5d62049e5b51} request received\n2023-03-15 21:24:18.360 [INFO] {7076ab49859a4c17d5de5d62aaa64c85} request received\n2023-03-15 21:24:18.360 [INFO] {205fb849859a4c17d7de5d62cb2590f4} request received\n2023-03-15 21:24:18.361 [INFO] {885fc349859a4c17d9de5d6235937e31} request received\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"server2"})," terminal output:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ go run server.go\n2023-03-15 21:24:10.769 [INFO] pid[10242]: http server started listening on [:63964]\n2023-03-15 21:24:10.770 [INFO] openapi specification is disabled\n2023-03-15 21:24:10.770 [DEBU] service register: &{Head: Deployment: Namespace: Name:hello.svc Version: Endpoints:10.35.12.81:63964 Metadata:map[insecure:true protocol:http]}\n2023-03-15 21:24:10.812 [DEBU] etcd put success with key "/service/default/default/hello.svc/latest/10.35.12.81:63964", value "{"insecure":true,"protocol":"http"}", lease "7587869265945813023"\n\n   SERVER   | DOMAIN  | ADDRESS | METHOD | ROUTE |                             HANDLER                             |    MIDDLEWARE\n------------|---------|---------|--------|-------|-----------------------------------------------------------------|--------------------\n  hello.svc | default | :63964  | ALL    | /     | main.main.func1                                                 |\n------------|---------|---------|--------|-------|-----------------------------------------------------------------|--------------------\n  hello.svc | default | :63964  | ALL    | /*    | github.com/gogf/gf/v2/net/ghttp.internalMiddlewareServerTracing | GLOBAL MIDDLEWARE\n------------|---------|---------|--------|-------|-----------------------------------------------------------------|--------------------\n\n2023-03-15 21:24:18.357 [INFO] {602d8749859a4c17d2de5d62d515e464} request received\n2023-03-15 21:24:18.359 [INFO] {e0ed9b49859a4c17d4de5d628284ae62} request received\n2023-03-15 21:24:18.360 [INFO] {e0e0b249859a4c17d6de5d62beda3001} request received\n2023-03-15 21:24:18.361 [INFO] {7087bd49859a4c17d8de5d62f892e8aa} request received\n2023-03-15 21:24:18.361 [INFO] {e8aec849859a4c17dade5d6247101836} request received\n'})}),"\n",(0,t.jsx)(n.p,{children:"Client terminal output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ go run client.go\n2023-03-15 21:24:18.357 [INFO] {e05b6049859a4c17d1de5d62eafa5a5f} Hello world\n2023-03-15 21:24:18.358 [INFO] {602d8749859a4c17d2de5d62d515e464} Hello world\n2023-03-15 21:24:18.358 [INFO] {785e9349859a4c17d3de5d62049e5b51} Hello world\n2023-03-15 21:24:18.359 [INFO] {e0ed9b49859a4c17d4de5d628284ae62} Hello world\n2023-03-15 21:24:18.360 [INFO] {7076ab49859a4c17d5de5d62aaa64c85} Hello world\n2023-03-15 21:24:18.360 [INFO] {e0e0b249859a4c17d6de5d62beda3001} Hello world\n2023-03-15 21:24:18.360 [INFO] {205fb849859a4c17d7de5d62cb2590f4} Hello world\n2023-03-15 21:24:18.361 [INFO] {7087bd49859a4c17d8de5d62f892e8aa} Hello world\n2023-03-15 21:24:18.361 [INFO] {885fc349859a4c17d9de5d6235937e31} Hello world\n2023-03-15 21:24:18.361 [INFO] {e8aec849859a4c17dade5d6247101836} Hello world\n"})}),"\n",(0,t.jsx)(n.h3,{id:"grpc",children:(0,t.jsx)(n.code,{children:"GRPC"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"server.go"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/contrib/rpc/grpcx/v2"\n    "github.com/gogf/gf/example/rpc/grpcx/balancer/controller"\n)\n\nfunc main() {\n    s := grpcx.Server.New()\n    controller.Register(s)\n    s.Run()\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"client.go"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "github.com/gogf/gf/contrib/rpc/grpcx/v2"\n    "github.com/gogf/gf/example/rpc/grpcx/balancer/protobuf"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    var (\n        ctx    context.Context\n        conn   = grpcx.Client.MustNewGrpcClientConn("demo", grpcx.Balancer.WithRandom())\n        client = protobuf.NewGreeterClient(conn)\n    )\n    for i := 0; i < 10; i++ {\n        ctx = gctx.New()\n        res, err := client.SayHello(ctx, &protobuf.HelloRequest{Name: "World"})\n        if err != nil {\n            g.Log().Error(ctx, err)\n            return\n        }\n        g.Log().Debug(ctx, "Response:", res.Message)\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"grpcx.Balancer.WithRandom()"})," indicates using a random request strategy. Start two ",(0,t.jsx)(n.code,{children:"server.go"})," servers and then run the ",(0,t.jsx)(n.code,{children:"client.go"})," client to check the server request logs:"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"server1"})," terminal output:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ go run server.go\n2023-03-15 19:50:44.801 [DEBU] set default registry using file registry as no custom registry set\n2023-03-15 19:50:44.802 [DEBU] service register: &{Head: Deployment: Namespace: Name:demo Version: Endpoints:10.35.12.81:53962 Metadata:map[protocol:grpc]}\n2023-03-15 19:50:44.802 [INFO] pid[89290]: grpc server started listening on [:53962]\n2023-03-15 19:50:57.282 {7025612f6d954c17c5f335051bf10899} /protobuf.Greeter/SayHello, 0.003ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.283 {60567c2f6d954c17c7f335052ce05185} /protobuf.Greeter/SayHello, 0.002ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.285 {f8d09b2f6d954c17ccf33505dff1a4ea} /protobuf.Greeter/SayHello, 0.002ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.287 {f0fab02f6d954c17cdf33505438b2c80} /protobuf.Greeter/SayHello, 0.001ms, name:"World", message:"Hello World"\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"server2"})," terminal output:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ go run server.go\n2023-03-15 19:50:51.720 [DEBU] set default registry using file registry as no custom registry set\n2023-03-15 19:50:51.721 [DEBU] service register: &{Head: Deployment: Namespace: Name:demo Version: Endpoints:10.35.12.81:53973 Metadata:map[protocol:grpc]}\n2023-03-15 19:50:51.722 [INFO] pid[89351]: grpc server started listening on [:53973]\n2023-03-15 19:50:57.280 {b89a0d2f6d954c17c4f33505a046817c} /protobuf.Greeter/SayHello, 0.002ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.282 {28bf732f6d954c17c6f33505adedff5f} /protobuf.Greeter/SayHello, 0.002ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.283 {9876832f6d954c17c8f3350580ed535b} /protobuf.Greeter/SayHello, 0.002ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.284 {684e8b2f6d954c17c9f33505d56e4b05} /protobuf.Greeter/SayHello, 0.001ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.284 {c045912f6d954c17caf3350599006197} /protobuf.Greeter/SayHello, 0.001ms, name:"World", message:"Hello World"\n2023-03-15 19:50:57.284 {500a972f6d954c17cbf33505252b0e01} /protobuf.Greeter/SayHello, 0.001ms, name:"World", message:"Hello World"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Client terminal output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ go run client.go\n2023-03-15 19:50:57.278 [DEBU] client conn updated with addresses [{"Addr":"10.35.12.81:53962","ServerName":"demo","Attributes":{},"BalancerAttributes":null,"Type":0,"Metadata":null},{"Addr":"10.35.12.81:53973","ServerName":"demo","Attributes":{},"BalancerAttributes":null,"Type":0,"Metadata":null}]\n2023-03-15 19:50:57.281 [DEBU] {b89a0d2f6d954c17c4f33505a046817c} Response: Hello World\n2023-03-15 19:50:57.282 [DEBU] {7025612f6d954c17c5f335051bf10899} Response: Hello World\n2023-03-15 19:50:57.282 [DEBU] {28bf732f6d954c17c6f33505adedff5f} Response: Hello World\n2023-03-15 19:50:57.283 [DEBU] {60567c2f6d954c17c7f335052ce05185} Response: Hello World\n2023-03-15 19:50:57.283 [DEBU] {9876832f6d954c17c8f3350580ed535b} Response: Hello World\n2023-03-15 19:50:57.284 [DEBU] {684e8b2f6d954c17c9f33505d56e4b05} Response: Hello World\n2023-03-15 19:50:57.284 [DEBU] {c045912f6d954c17caf3350599006197} Response: Hello World\n2023-03-15 19:50:57.285 [DEBU] {500a972f6d954c17cbf33505252b0e01} Response: Hello World\n2023-03-15 19:50:57.286 [DEBU] {f8d09b2f6d954c17ccf33505dff1a4ea} Response: Hello World\n2023-03-15 19:50:57.287 [DEBU] {f0fab02f6d954c17cdf33505438b2c80} Response: Hello World\n'})})]})}function g(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},250065:function(e,n,o){o.d(n,{Z:function(){return a},a:function(){return s}});var r=o(667294);let t={},c=r.createContext(t);function s(e){let n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);