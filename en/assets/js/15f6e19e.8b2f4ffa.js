"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["97257"],{864275:function(n,e,r){r.r(e),r.d(e,{metadata:()=>i,contentTitle:()=>o,default:()=>l,assets:()=>a,toc:()=>d,frontMatter:()=>s});var i=JSON.parse('{"id":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis/Redis-\u57FA\u672C\u4F7F\u7528","title":"Redis-\u57FA\u672C\u4F7F\u7528","description":"Do \u65B9\u6CD5","source":"@site/versioned_docs/version-2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis/Redis-\u57FA\u672C\u4F7F\u7528.md","sourceDirName":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis","slug":"/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis/Redis-\u57FA\u672C\u4F7F\u7528","permalink":"/en/2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis/Redis-\u57FA\u672C\u4F7F\u7528","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis/Redis-\u57FA\u672C\u4F7F\u7528.md","tags":[],"version":"2.1.x","lastUpdatedBy":"John","lastUpdatedAt":1730365530000,"sidebarPosition":1,"frontMatter":{"title":"Redis-\u57FA\u672C\u4F7F\u7528","sidebar_position":1,"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Redis-\u914D\u7F6E\u7BA1\u7406","permalink":"/en/2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis/Redis-\u914D\u7F6E\u7BA1\u7406"},"next":{"title":"Redis-Conn\u5BF9\u8C61","permalink":"/en/2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/NoSQL Redis/Redis-Conn\u5BF9\u8C61"}}'),t=r("785893"),c=r("250065");let s={title:"Redis-\u57FA\u672C\u4F7F\u7528",sidebar_position:1,hide_title:!0},o=void 0,a={},d=[{value:"<code>Do</code> \u65B9\u6CD5",id:"do-\u65B9\u6CD5",level:2},{value:"\u57FA\u672C\u4F7F\u7528",id:"\u57FA\u672C\u4F7F\u7528",level:3},{value:"<code>HSET/HGETALL</code> \u64CD\u4F5C",id:"hsethgetall-\u64CD\u4F5C",level:3},{value:"<code>HMSET/HMGET</code> \u64CD\u4F5C",id:"hmsethmget-\u64CD\u4F5C",level:3},{value:"\u81EA\u52A8\u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316",id:"\u81EA\u52A8\u5E8F\u5217\u5316\u53CD\u5E8F\u5217\u5316",level:2},{value:"<code>map</code> \u5B58\u53D6",id:"map-\u5B58\u53D6",level:3},{value:"<code>struct</code> \u5B58\u53D6",id:"struct-\u5B58\u53D6",level:3}];function g(n){let e={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,c.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:"do-\u65B9\u6CD5",children:[(0,t.jsx)(e.code,{children:"Do"})," \u65B9\u6CD5"]}),"\n",(0,t.jsxs)(e.p,{children:["\u6211\u4EEC\u6700\u5E38\u7528\u7684\u662F ",(0,t.jsx)(e.code,{children:"Do"})," \u65B9\u6CD5\uFF0C\u6267\u884C\u540C\u6B65\u6307\u4EE4\uFF0C\u901A\u8FC7\u5411 ",(0,t.jsx)(e.code,{children:"Redis Server"})," \u53D1\u9001\u5BF9\u5E94\u7684 ",(0,t.jsx)(e.code,{children:"Redis API"})," \u547D\u4EE4\uFF0C\u6765\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"Redis Server"})," \u7684\u670D\u52A1\u3002 ",(0,t.jsx)(e.code,{children:"Do"})," \u65B9\u6CD5\u6700\u5927\u7684\u7279\u70B9\u662F\u5185\u90E8\u81EA\u884C\u4ECE\u8FDE\u63A5\u6C60\u4E2D\u83B7\u53D6\u8FDE\u63A5\u5BF9\u8C61\uFF0C\u4F7F\u7528\u5B8C\u6BD5\u540E\u81EA\u52A8\u4E22\u56DE\u8FDE\u63A5\u6C60\u4E2D\uFF0C\u5F00\u53D1\u8005\u65E0\u9700\u624B\u52A8\u8C03\u7528 ",(0,t.jsx)(e.code,{children:"Close"})," \u65B9\u6CD5\uFF0C\u65B9\u4FBF\u4F7F\u7528\u3002"]}),"\n",(0,t.jsx)(e.h3,{id:"\u57FA\u672C\u4F7F\u7528",children:"\u57FA\u672C\u4F7F\u7528"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    var (\n        ctx = gctx.New()\n    )\n    v, _ := g.Redis().Do(ctx, "SET", "k", "v")\n    fmt.Println(v.String())\n}\n'})}),"\n",(0,t.jsxs)(e.h3,{id:"hsethgetall-\u64CD\u4F5C",children:[(0,t.jsx)(e.code,{children:"HSET/HGETALL"})," \u64CD\u4F5C"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gvar"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    var (\n        err    error\n        result *gvar.Var\n        key    = "user"\n        ctx = gctx.New()\n    )\n    _, err = g.Redis().Do(ctx, "HSET", key, "id", 10000)\n    if err != nil {\n        panic(err)\n    }\n    _, err = g.Redis().Do(ctx,"HSET", key, "name", "john")\n    if err != nil {\n        panic(err)\n    }\n    result, err = g.Redis().Do(ctx,"HGETALL", key)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(result.Map())\n\n    // May Output:\n    // map[id:10000 name:john]\n}\n'})}),"\n",(0,t.jsxs)(e.h3,{id:"hmsethmget-\u64CD\u4F5C",children:[(0,t.jsx)(e.code,{children:"HMSET/HMGET"})," \u64CD\u4F5C"]}),"\n",(0,t.jsxs)(e.p,{children:["\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 ",(0,t.jsx)(e.code,{children:"map"})," \u53C2\u6570\u6267\u884C ",(0,t.jsx)(e.code,{children:"HMSET"})," \u64CD\u4F5C\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n    "github.com/gogf/gf/v2/util/gutil"\n)\n\nfunc main() {\n    var (\n        ctx = gctx.New()\n        key  = "user_100"\n        data = g.Map{\n            "name":  "gf",\n            "sex":   0,\n            "score": 100,\n        }\n    )\n    _, err := g.Redis().Do(ctx, "HMSET", append(g.Slice{key}, gutil.MapToSlice(data)...)...)\n    if err != nil {\n        g.Log().Fatal(ctx, err)\n    }\n    v, err := g.Redis().Do(ctx, "HMGET", key, "name")\n    if err != nil {\n        g.Log().Fatal(ctx, err)\n    }\n    fmt.Println(v.Slice())\n\n    // May Output:\n    // [gf]\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 `"}),"\n",(0,t.jsx)(e.p,{children:"struct"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"\u53C2\u6570\u6267\u884C"}),"HMSET` \u64CD\u4F5C\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n    "github.com/gogf/gf/v2/util/gutil"\n)\n\nfunc main() {\n    type User struct {\n        Name  string `json:"name"`\n        Sex   int    `json:"sex"`\n        Score int    `json:"score"`\n    }\n    var (\n        ctx = gctx.New()\n        key  = "user_100"\n        data = &User{\n            Name:  "gf",\n            Sex:   0,\n            Score: 100,\n        }\n    )\n    _, err := g.Redis().Do(ctx,"HMSET", append(g.Slice{key}, gutil.StructToSlice(data)...)...)\n    if err != nil {\n        g.Log().Fatal(ctx, err)\n    }\n    v, err := g.Redis().Do(ctx,"HMGET", key, "name")\n    if err != nil {\n        g.Log().Fatal(ctx, err)\n    }\n    fmt.Println(v.Slice())\n\n    // May Output:\n    // [gf]\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u81EA\u52A8\u5E8F\u5217\u5316\u53CD\u5E8F\u5217\u5316",children:"\u81EA\u52A8\u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316"}),"\n",(0,t.jsxs)(e.p,{children:["\u5F53\u7ED9\u5B9A\u7684\u53C2\u6570\u4E3A ",(0,t.jsx)(e.code,{children:"map"}),", ",(0,t.jsx)(e.code,{children:"slice"}),", ",(0,t.jsx)(e.code,{children:"struct"})," \u65F6\uFF0C ",(0,t.jsx)(e.code,{children:"gredis"})," \u5185\u90E8\u652F\u6301\u81EA\u52A8\u5BF9\u5176\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"json"})," \u5E8F\u5217\u5316\uFF0C\u5E76\u4E14\u8BFB\u53D6\u6570\u636E\u65F6\u53EF\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"gvar.Var"})," \u7684\u8F6C\u6362\u529F\u80FD\u5B9E\u73B0\u53CD\u5E8F\u5217\u5316\u3002"]}),"\n",(0,t.jsxs)(e.h3,{id:"map-\u5B58\u53D6",children:[(0,t.jsx)(e.code,{children:"map"})," \u5B58\u53D6"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gvar"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    var (\n        ctx = gctx.New()\n        err    error\n        result *gvar.Var\n        key    = "user"\n        data   = g.Map{\n            "id":   10000,\n            "name": "john",\n        }\n    )\n    _, err = g.Redis().Do(ctx, "SET", key, data)\n    if err != nil {\n        panic(err)\n    }\n    result, err = g.Redis().Do(ctx,"GET", key)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(result.Map())\n}\n'})}),"\n",(0,t.jsxs)(e.h3,{id:"struct-\u5B58\u53D6",children:[(0,t.jsx)(e.code,{children:"struct"})," \u5B58\u53D6"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gvar"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    type User struct {\n        Id   int\n        Name string\n    }\n\n    var (\n        ctx = gctx.New()\n        err    error\n        result *gvar.Var\n        key    = "user"\n        user   = g.Map{\n            "id":   10000,\n            "name": "john",\n        }\n    )\n\n    _, err = g.Redis().Do(ctx, "SET", key, user)\n    if err != nil {\n        panic(err)\n    }\n    result, err = g.Redis().Do(ctx, "GET", key)\n    if err != nil {\n        panic(err)\n    }\n\n    var user2 *User\n    if err = result.Struct(&user2); err != nil {\n        panic(err)\n    }\n    fmt.Println(user2.Id, user2.Name)\n}\n'})})]})}function l(n={}){let{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(g,{...n})}):g(n)}},250065:function(n,e,r){r.d(e,{Z:function(){return o},a:function(){return s}});var i=r(667294);let t={},c=i.createContext(t);function s(n){let e=i.useContext(c);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);