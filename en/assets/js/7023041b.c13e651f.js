"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["44993"],{423156:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>o,default:()=>d,assets:()=>l,toc:()=>c,frontMatter:()=>a});var r=JSON.parse('{"id":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u8DEF\u7531\u7BA1\u7406/\u8DEF\u7531\u7BA1\u7406-\u8DEF\u7531\u89C4\u5219","title":"Router - Route Patterns","description":"Powerful routing functionality and optimization features in the GoFrame framework, including various routing rules such as named matching, fuzzy matching, and field matching. Demonstrates through example code how to manage and match different URLs using these rules. Additionally, it elaborates on how to efficiently control route priorities by combining exact matching rules with dynamic matching rules.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/WEB\u670D\u52A1\u5F00\u53D1/\u8DEF\u7531\u7BA1\u7406/\u8DEF\u7531\u7BA1\u7406-\u8DEF\u7531\u89C4\u5219.md","sourceDirName":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u8DEF\u7531\u7BA1\u7406","slug":"/docs/web/router-pattern","permalink":"/en/docs/web/router-pattern","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/WEB\u670D\u52A1\u5F00\u53D1/\u8DEF\u7531\u7BA1\u7406/\u8DEF\u7531\u7BA1\u7406-\u8DEF\u7531\u89C4\u5219.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732541616000,"sidebarPosition":0,"frontMatter":{"slug":"/docs/web/router-pattern","title":"Router - Route Patterns","sidebar_position":0,"hide_title":true,"keywords":["GoFrame","GoFrame framework","route management","route patterns","named matching rules","fuzzy matching rules","field matching rules","route priority","dynamic routing","routing features"],"description":"Powerful routing functionality and optimization features in the GoFrame framework, including various routing rules such as named matching, fuzzy matching, and field matching. Demonstrates through example code how to manage and match different URLs using these rules. Additionally, it elaborates on how to efficiently control route priorities by combining exact matching rules with dynamic matching rules."},"sidebar":"mainSidebar","previous":{"title":"Router \uD83D\uDD25","permalink":"/en/docs/web/router"},"next":{"title":"Router - Registration","permalink":"/en/docs/web/router-registering"}}'),i=t("785893"),s=t("250065");let a={slug:"/docs/web/router-pattern",title:"Router - Route Patterns",sidebar_position:0,hide_title:!0,keywords:["GoFrame","GoFrame framework","route management","route patterns","named matching rules","fuzzy matching rules","field matching rules","route priority","dynamic routing","routing features"],description:"Powerful routing functionality and optimization features in the GoFrame framework, including various routing rules such as named matching, fuzzy matching, and field matching. Demonstrates through example code how to manage and match different URLs using these rules. Additionally, it elaborates on how to efficiently control route priorities by combining exact matching rules with dynamic matching rules."},o=void 0,l={},c=[{value:"An Example",id:"an-example",level:2},{value:"Registration Rules",id:"registration-rules",level:2},{value:"Route Registration Parameters",id:"route-registration-parameters",level:3},{value:"<code>pattern</code> Parameter",id:"pattern-parameter",level:4},{value:"<code>handler</code> Parameter",id:"handler-parameter",level:4},{value:"Exact Matching Rules",id:"exact-matching-rules",level:3},{value:"Dynamic Routing Rules",id:"dynamic-routing-rules",level:3},{value:"Named Matching Rules",id:"named-matching-rules",level:4},{value:"Fuzzy Matching Rules",id:"fuzzy-matching-rules",level:4},{value:"Field Matching Rules",id:"field-matching-rules",level:4},{value:"Dynamic Route Example",id:"dynamic-route-example",level:3},{value:"Priority Control",id:"priority-control",level:2}];function h(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"GoFrame"})," framework has built-in powerful routing capabilities and offers superior routing features compared to similar frameworks. It supports popular named matching rules, fuzzy matching rules, and field matching rules, along with an excellent priority management mechanism."]}),"\n",(0,i.jsx)(n.h2,{id:"an-example",children:"An Example"}),"\n",(0,i.jsx)(n.p,{children:"Before diving into the core content of this chapter, let's look at a simple example of using dynamic routing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    s := g.Server()\n    s.BindHandler("/:name", func(r *ghttp.Request){\n       r.Response.Writeln(r.Router.Uri)\n    })\n    s.BindHandler("/:name/update", func(r *ghttp.Request){\n        r.Response.Writeln(r.Router.Uri)\n    })\n    s.BindHandler("/:name/:action", func(r *ghttp.Request){\n        r.Response.Writeln(r.Router.Uri)\n    })\n    s.BindHandler("/:name/*any", func(r *ghttp.Request){\n       r.Response.Writeln(r.Router.Uri)\n    })\n    s.BindHandler("/user/list/{field}.html", func(r *ghttp.Request){\n        r.Response.Writeln(r.Router.Uri)\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The example above demonstrates the three types of fuzzy matching routing rules supported by the ",(0,i.jsx)(n.code,{children:"goframe"})," framework: ",(0,i.jsx)(n.code,{children:":name"}),", ",(0,i.jsx)(n.code,{children:"*any"}),", ",(0,i.jsx)(n.code,{children:"{field}"}),", representing ",(0,i.jsx)(n.strong,{children:"named matching rules"}),", ",(0,i.jsx)(n.strong,{children:"fuzzy matching rules"}),", and ",(0,i.jsx)(n.strong,{children:"field matching rules"})," respectively. Different rules use the ",(0,i.jsx)(n.code,{children:"/"})," symbol to separate levels, and the routing lookup uses a ",(0,i.jsx)(n.strong,{children:"depth-first algorithm"}),", where rules with deeper levels have higher priority. Let's run the example and see the effect by accessing some URLs:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"URL                                         Result\nhttp://127.0.0.1:8199/user/list/2.html      /user/list/{field}.html\nhttp://127.0.0.1:8199/user/update           /:name/update\nhttp://127.0.0.1:8199/user/info             /:name/:action\nhttp://127.0.0.1:8199/user                  /:name/*any\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In this example, we can also see that due to priority restrictions, the route rule ",(0,i.jsx)(n.code,{children:"/:name"})," will be overridden by the ",(0,i.jsx)(n.code,{children:"/:name/*any"})," rule, so it will not be matched. Therefore, when assigning route rules, unified planning and management are needed to avoid such situations."]}),"\n",(0,i.jsx)(n.h2,{id:"registration-rules",children:"Registration Rules"}),"\n",(0,i.jsx)(n.h3,{id:"route-registration-parameters",children:"Route Registration Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"most basic"})," method for binding routes is the ",(0,i.jsx)(n.code,{children:"BindHandler"})," method. Let's take a look at the prototype of the ",(0,i.jsx)(n.code,{children:"BindHandler"})," method we've been using:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"func (s *Server) BindHandler(pattern string, handler interface{})\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"pattern-parameter",children:[(0,i.jsx)(n.code,{children:"pattern"})," Parameter"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"pattern"})," is a route registration rule string, used in other route registration methods as well. The parameter format is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"[HTTPMethod:]RoutePattern[@Domain]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In which ",(0,i.jsx)(n.code,{children:"HTTPMethod"})," (",(0,i.jsx)(n.code,{children:"GET/PUT/POST/DELETE/PATCH/HEAD/CONNECT/OPTIONS/TRACE"}),") and ",(0,i.jsx)(n.code,{children:"@Domain"})," are ",(0,i.jsx)(n.strong,{children:"optional parameters"}),". In most scenarios, you can directly provide the route rule parameter, and ",(0,i.jsx)(n.code,{children:"BindHandler"})," will automatically bind ",(0,i.jsx)(n.strong,{children:"all"})," request methods. If ",(0,i.jsx)(n.code,{children:"HTTPMethod"})," is specified, the route rule will only be valid for that request method. By specifying ",(0,i.jsx)(n.code,{children:"@Domain"}),", the rule will only be valid under that domain."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"BindHandler"})," is the most native method for registering routes. In most scenarios, we usually use ",(0,i.jsx)(n.strong,{children:"group routing"})," to manage reasons, which will be introduced in later chapters: ",(0,i.jsx)(n.a,{href:"/en/docs/web/router-registering-group",children:"Registration - Group Routing"}),"."]})}),"\n",(0,i.jsxs)(n.h4,{id:"handler-parameter",children:[(0,i.jsx)(n.code,{children:"handler"})," Parameter"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"handler"})," parameter is usually used to specify the route function. Our most basic examples use a function to register routes; a route function needs to meet the following definition, meaning it only needs to be able to receive the request object ",(0,i.jsx)(n.code,{children:"ghttp.Request"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"func(r *ghttp.Request) {\n    // ...\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Let's look at an example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    s := g.Server()\n    // This route rule will only be valid under GET requests\n    s.BindHandler("GET:/{table}/list/{page}.html", func(r *ghttp.Request){\n        r.Response.WriteJson(r.Router)\n    })\n    // This route rule will only be valid under GET requests and the localhost domain\n    s.BindHandler("GET:/order/info/{order_id}@localhost", func(r *ghttp.Request){\n        r.Response.WriteJson(r.Router)\n    })\n    // This route rule will only be valid under DELETE requests\n    s.BindHandler("DELETE:/comment/{id}", func(r *ghttp.Request){\n        r.Response.WriteJson(r.Router)\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The returned parameter ",(0,i.jsx)(n.code,{children:"r.Router"})," provides information on the current matched route rule. When accessing this method, the server will output information on the current matched route rule. After execution, we can test using the ",(0,i.jsx)(n.code,{children:"curl"})," command in the terminal:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ curl -XGET http://127.0.0.1:8199/order/list/1.html\n{"Domain":"default","Method":"GET","Priority":3,"Uri":"/{table}/list/{page}.html"}\n\n$ curl -XGET http://127.0.0.1:8199/order/info/1\nNot Found\n\n$ curl -XGET http://localhost:8199/order/info/1\n{"Domain":"localhost","Method":"GET","Priority":3,"Uri":"/order/info/{order_id}"}\n\n$ curl -XDELETE http://127.0.0.1:8199/comment/1000\n{"Domain":"default","Method":"DELETE","Priority":2,"Uri":"/comment/{id}"}\n\n$ curl -XGET http://127.0.0.1:8199/comment/1000\nNot Found\n'})}),"\n",(0,i.jsx)(n.h3,{id:"exact-matching-rules",children:"Exact Matching Rules"}),"\n",(0,i.jsxs)(n.p,{children:["Exact matching rules are the rules ",(0,i.jsx)(n.strong,{children:"without any dynamic rules"}),", such as ",(0,i.jsx)(n.code,{children:"user"}),", ",(0,i.jsx)(n.code,{children:"order"}),", ",(0,i.jsx)(n.code,{children:"info"}),", etc., which are rules with a ",(0,i.jsx)(n.strong,{children:"determined name"}),". In most scenarios, exact matching rules are used together with dynamic rules for route registration (e.g., ",(0,i.jsx)(n.code,{children:"/:name/list"}),", where level 1 ",(0,i.jsx)(n.code,{children:":name"})," is a named matching rule, and level 2 ",(0,i.jsx)(n.code,{children:"list"})," is an exact matching rule)."]}),"\n",(0,i.jsx)(n.h3,{id:"dynamic-routing-rules",children:"Dynamic Routing Rules"}),"\n",(0,i.jsxs)(n.p,{children:["Dynamic routing rules are divided into three types: ",(0,i.jsx)(n.strong,{children:"named matching rules"}),", ",(0,i.jsx)(n.strong,{children:"fuzzy matching rules"}),", and ",(0,i.jsx)(n.strong,{children:"field matching rules"}),". The underlying data structure of dynamic routing is a ",(0,i.jsx)(n.code,{children:"routing tree"})," constructed by ",(0,i.jsx)(n.code,{children:"hash tables"})," by levels and ",(0,i.jsx)(n.code,{children:"double-linked lists"}),". The hash tables assist in efficiently matching the levels of the ",(0,i.jsx)(n.code,{children:"URI"}),", and the data linked list is used for priority control; rules of the same level are sorted by priority, with higher-priority rules placed at the head of the list. The underlying routing rule matching calculation with the request ",(0,i.jsx)(n.code,{children:"URI"})," uses regular expressions and optimally utilizes caching mechanisms for highly efficient execution."]}),"\n",(0,i.jsxs)(n.p,{children:["All matched parameters will be passed to the business layer as ",(0,i.jsx)(n.code,{children:"Router"})," parameters, which can be retrieved using the following method of the ",(0,i.jsx)(n.code,{children:"ghttp.Request"})," object:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"func (r *Request) GetRouter(key string, def ...interface{}) *gvar.Var\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can also use the ",(0,i.jsx)(n.code,{children:"ghttp.Request.Get"})," method to retrieve matched routing parameters."]}),"\n",(0,i.jsx)(n.h4,{id:"named-matching-rules",children:"Named Matching Rules"}),"\n",(0,i.jsxs)(n.p,{children:["Uses the ",(0,i.jsx)(n.code,{children:":name"})," method for matching (",(0,i.jsx)(n.code,{children:"name"})," is a custom match name) and performs a named match for parameters at a specified level of the ",(0,i.jsx)(n.code,{children:"URI"})," (similar to regular ",(0,i.jsx)(n.code,{children:"([^/]+)"}),", this ",(0,i.jsx)(n.code,{children:"URI"})," level must have a value). The corresponding matched parameters will be parsed into ",(0,i.jsx)(n.code,{children:"Router"})," parameters and passed to the registered service API for use."]}),"\n",(0,i.jsx)(n.p,{children:"Matching example 1:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /user/:user\n\n/user/john                match\n/user/you                 match\n/user/john/profile        no match\n/user/                    no match\n"})}),"\n",(0,i.jsx)(n.p,{children:"Matching example 2:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /:name/action\n\n/john/name                no match\n/john/action              match\n/smith/info               no match\n/smith/info/age           no match\n/smith/action             match\n"})}),"\n",(0,i.jsx)(n.p,{children:"Matching example 3:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /:name/:action\n\n/john/name                match\n/john/info                match\n/smith/info               match\n/smith/info/age           no match\n/smith/action/del         no match\n"})}),"\n",(0,i.jsx)(n.h4,{id:"fuzzy-matching-rules",children:"Fuzzy Matching Rules"}),"\n",(0,i.jsxs)(n.p,{children:["Uses the ",(0,i.jsx)(n.code,{children:"*any"})," method for matching (",(0,i.jsx)(n.code,{children:"any"})," is a custom match name) for fuzzy matching of parameters after the specified position of the ",(0,i.jsx)(n.code,{children:"URI"})," (similar to regular ",(0,i.jsx)(n.code,{children:"(.*)"}),", this ",(0,i.jsx)(n.code,{children:"URI"})," level can be empty), and parses matched parameters into ",(0,i.jsx)(n.code,{children:"Router"})," parameters to be passed to the registered service API for use."]}),"\n",(0,i.jsx)(n.p,{children:"Matching example 1:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /src/*path\n\n/src/                     match\n/src/somefile.go          match\n/src/subdir/somefile.go   match\n/user/                    no match\n/user/john                no match\n"})}),"\n",(0,i.jsx)(n.p,{children:"Matching example 2:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /src/*path/:action\n\n/src/                     no match\n/src/somefile.go          match\n/src/somefile.go/del      match\n/src/subdir/file.go/del   match\n"})}),"\n",(0,i.jsx)(n.p,{children:"Matching example 3:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /src/*path/show\n\n/src/                     no match\n/src/somefile.go          no match\n/src/somefile.go/del      no match\n/src/somefile.go/show     match\n/src/subdir/file.go/show  match\n/src/show                 match\n"})}),"\n",(0,i.jsx)(n.h4,{id:"field-matching-rules",children:"Field Matching Rules"}),"\n",(0,i.jsxs)(n.p,{children:["Uses the ",(0,i.jsx)(n.code,{children:"{field}"})," method for matching (",(0,i.jsx)(n.code,{children:"field"})," is a custom match name), which can perform segment matches of parameters at ",(0,i.jsx)(n.strong,{children:"any position"})," in the ",(0,i.jsx)(n.code,{children:"URI"})," (similar to regular ",(0,i.jsx)(n.code,{children:"([\\w\\.\\-]+)"}),", this ",(0,i.jsx)(n.code,{children:"URI"})," level must have a value and multiple field matches can occur at the same level), and parses matched parameters into ",(0,i.jsx)(n.code,{children:"Router"})," parameters to be passed to the registered service API for use."]}),"\n",(0,i.jsx)(n.p,{children:"Matching example 1:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /order/list/{page}.php\n\n/order/list/1.php          match\n/order/list/666.php        match\n/order/list/2.php5         no match\n/order/list/1              no match\n/order/list                no match\n"})}),"\n",(0,i.jsx)(n.p,{children:"Matching example 2:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /db-{table}/{id}\n\n/db-user/1                     match\n/db-user/2                     match\n/db/user/1                     no match\n/db-order/100                  match\n/database-order/100            no match\n"})}),"\n",(0,i.jsx)(n.p,{children:"Matching example 3:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"rule: /{obj}-{act}/*param\n\n/user-delete/10                match\n/order-update/20               match\n/log-list                      match\n/log/list/1                    no match\n/comment/delete/10             no match\n"})}),"\n",(0,i.jsx)(n.h3,{id:"dynamic-route-example",children:"Dynamic Route Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    s := g.Server()\n    // A simple paging route example\n    s.BindHandler("/user/list/{page}.html", func(r *ghttp.Request){\n        r.Response.Writeln(r.Get("page"))\n    })\n    // Mixing {xxx} rule with :xxx rule\n    s.BindHandler("/{object}/:attr/{act}.php", func(r *ghttp.Request){\n        r.Response.Writeln(r.Get("object"))\n        r.Response.Writeln(r.Get("attr"))\n        r.Response.Writeln(r.Get("act"))\n    })\n    // Mixing multiple fuzzy matching rules\n    s.BindHandler("/{class}-{course}/:name/*act", func(r *ghttp.Request){\n        r.Response.Writeln(r.Get("class"))\n        r.Response.Writeln(r.Get("course"))\n        r.Response.Writeln(r.Get("name"))\n        r.Response.Writeln(r.Get("act"))\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["After execution, we can test it using the ",(0,i.jsx)(n.code,{children:"curl"})," command or a browser access method. Below are the test results:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ curl -XGET http://127.0.0.1:8199/user/list/1.html\n1\n\n$ curl -XGET http://127.0.0.1:8199/user/info/save.php\nuser\ninfo\nsave\n\n$ curl -XGET http://127.0.0.1:8199/class3-math/john/score\nclass3\nmath\njohn\nscore\n"})}),"\n",(0,i.jsx)(n.h2,{id:"priority-control",children:"Priority Control"}),"\n",(0,i.jsxs)(n.p,{children:["Priority control follows a ",(0,i.jsx)(n.strong,{children:"depth-first strategy"}),". Here's a brief strategy calculation:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rules with deeper levels have higher priority"}),";"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"At the same level, exact matching has higher priority than fuzzy matching"}),";"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Within the same level, fuzzy matching priority is: field matching > named matching > fuzzy matching"}),";"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Let's see examples (the rule on the left has a higher priority than the one on the right):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"/:name                   >            /*any\n/user/name               >            /user/:action\n/:name/info              >            /:name/:action\n/:name/:action           >            /:name/*action\n/:name/{action}          >            /:name/:action\n/src/path/del            >            /src/path\n/src/path/del            >            /src/path/:action\n/src/path/*any           >            /src/path\n"})})]})}function d(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return a}});var r=t(667294);let i={},s=r.createContext(i);function a(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);