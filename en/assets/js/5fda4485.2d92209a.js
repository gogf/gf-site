"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["30470"],{977322:function(e,n,t){t.r(n),t.d(n,{metadata:()=>o,contentTitle:()=>s,default:()=>c,assets:()=>d,toc:()=>l,frontMatter:()=>r});var o=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u8C03\u8BD5\u6A21\u5F0F","title":"Debug Mode","description":"Debug mode of the GoFrame framework, available to all users starting from version v1.10.0. In this mode, key functional nodes output debug information at the [INTE] log level. Developers can open debug mode through command line arguments or environment variables, but debug information is only output to terminal standard output and not supported in log files. In GoFrame v1.14.0, the debug mode can be manually controlled using the g.SetDebug method.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u8C03\u8BD5\u6A21\u5F0F.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6","slug":"/docs/core/debugging","permalink":"/en/docs/core/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u8C03\u8BD5\u6A21\u5F0F.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732440306000,"sidebarPosition":1,"frontMatter":{"slug":"/docs/core/debugging","title":"Debug Mode","sidebar_position":1,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","Debug Mode","Log Output","Environment Variables","Command Line Arguments","Terminal Standard Output","v1.10.0","v1.14.0","Performance Optimization"],"description":"Debug mode of the GoFrame framework, available to all users starting from version v1.10.0. In this mode, key functional nodes output debug information at the [INTE] log level. Developers can open debug mode through command line arguments or environment variables, but debug information is only output to terminal standard output and not supported in log files. In GoFrame v1.14.0, the debug mode can be manually controlled using the g.SetDebug method."},"sidebar":"mainSidebar","previous":{"title":"Objects","permalink":"/en/docs/core/g"},"next":{"title":"Command","permalink":"/en/docs/core/gcmd"}}'),a=t("785893"),i=t("250065");let r={slug:"/docs/core/debugging",title:"Debug Mode",sidebar_position:1,hide_title:!0,keywords:["GoFrame","GoFrame Framework","Debug Mode","Log Output","Environment Variables","Command Line Arguments","Terminal Standard Output","v1.10.0","v1.14.0","Performance Optimization"],description:"Debug mode of the GoFrame framework, available to all users starting from version v1.10.0. In this mode, key functional nodes output debug information at the [INTE] log level. Developers can open debug mode through command line arguments or environment variables, but debug information is only output to terminal standard output and not supported in log files. In GoFrame v1.14.0, the debug mode can be manually controlled using the g.SetDebug method."},s=void 0,d={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Features Enabling",id:"features-enabling",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Enable Debug Mode via Environment Variables",id:"enable-debug-mode-via-environment-variables",level:3},{value:"Enable Debug Mode via Command Line Parameters",id:"enable-debug-mode-via-command-line-parameters",level:3}];function u(e){let n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(n.p,{children:["The various components of the ",(0,a.jsx)(n.code,{children:"goframe"})," framework print out some debug information at key functional nodes, originally only for internal developers to use during the development phase. Due to its powerful capabilities, starting from version ",(0,a.jsx)(n.code,{children:"v1.10.0"})," of the ",(0,a.jsx)(n.code,{children:"goframe"})," framework, it is fully open to all framework users."]}),"\n",(0,a.jsxs)(n.p,{children:["In debug mode, the debug information printed by the framework will be prefixed with ",(0,a.jsx)(n.code,{children:"[INTE]"})," log level and output to the terminal standard output, and it will print the name of the source file and the line number of the code, for example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'2021-04-14 15:24:52.954 [INTE] gdb_driver_mysql.go:49 Open: root:12345678@tcp(127.0.0.1:3306)/test\n2021-04-14 15:24:52.954 [INTE] gdb.go:492 open new connection success, master:false, config:&gdb.ConfigNode{Host:"", Port:"", User:"", Pass:"", Name:"", Type:"mysql", Role:"", Debug:false, Prefix:"", DryRun:false, Weight:0, Charset:"", LinkInfo:"root:12345678@tcp(127.0.0.1:3306)/test", MaxIdleConnCount:0, MaxOpenConnCount:0, MaxConnLifeTime:0, QueryTimeout:0, ExecTimeout:0, TranTimeout:0, PrepareTimeout:0, CreatedAt:"", UpdatedAt:"", DeletedAt:"", TimeMaintainDisabled:false}, node:&gdb.ConfigNode{Host:"", Port:"", User:"", Pass:"", Name:"", Type:"mysql", Role:"", Debug:false, Prefix:"", DryRun:false, Weight:0, Charset:"utf8", LinkInfo:"root:12345678@tcp(127.0.0.1:3306)/test", MaxIdleConnCount:0, MaxOpenConnCount:0, MaxConnLifeTime:0, QueryTimeout:0, ExecTimeout:0, TranTimeout:0, PrepareTimeout:0, CreatedAt:"", UpdatedAt:"", DeletedAt:"", TimeMaintainDisabled:false}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"features-enabling",children:"Features Enabling"}),"\n",(0,a.jsx)(n.p,{children:"By default, this debug information is turned off and does not affect the framework's performance. Framework developers and users can enable it through the following methods:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Command line startup parameter - ",(0,a.jsx)(n.code,{children:"gf.debug=true"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Specified environment variable - ",(0,a.jsx)(n.code,{children:"GF_DEBUG=true"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["After ",(0,a.jsx)(n.code,{children:"GoFrame v1.14.0"}),", use the ",(0,a.jsx)(n.code,{children:"g.SetDebug"})," method in the program startup ",(0,a.jsx)(n.code,{children:"boot"})," package to manually toggle on/off. This method is not thread-safe, which means you cannot call this method dynamically in asynchronous multi-coroutines at runtime to set the debug mode."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["You can find that many functional modules of the ",(0,a.jsx)(n.code,{children:"goframe"})," framework are also configured in the form of ",(0,a.jsx)(n.strong,{children:"command line startup parameters + environment variables"})," according to certain rules \uD83D\uDC38."]})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["It is important to note that key debug information of each module of the framework will only output to the ",(0,a.jsx)(n.strong,{children:"terminal standard output"})," and is not supported for output to log files."]})}),"\n",(0,a.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,a.jsx)(n.h3,{id:"enable-debug-mode-via-environment-variables",children:"Enable Debug Mode via Environment Variables"}),"\n",(0,a.jsxs)(n.p,{children:["Take ",(0,a.jsx)(n.code,{children:"Goland IDE"})," as an example, just add the ",(0,a.jsx)(n.code,{children:"GF_DEBUG"})," environment variable in the running template."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(893891).Z+"",width:"1434",height:"1090"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(940976).Z+"",width:"2830",height:"1382"})}),"\n",(0,a.jsx)(n.h3,{id:"enable-debug-mode-via-command-line-parameters",children:"Enable Debug Mode via Command Line Parameters"}),"\n",(0,a.jsxs)(n.p,{children:["Simply start the program with ",(0,a.jsx)(n.code,{children:"--gf.debug=true"}),", for example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./app --gf.debug=true\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./app --gf.debug true\n"})}),"\n",(0,a.jsx)(n.p,{children:"Alternatively,"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./app --gf.debug=1\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./app --gf.debug 1\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(413959).Z+"",width:"2858",height:"1454"})})]})}function c(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},413959:function(e,n,t){t.d(n,{Z:function(){return o}});let o=t.p+"assets/images/38ed97756a955abfab1df56acaea5b07-a22f54bc93543ca964df4ca5a85f06d8.png"},940976:function(e,n,t){t.d(n,{Z:function(){return o}});let o=t.p+"assets/images/a4c6819caeacadf867d8ca621372cb8f-c1f9184b059f0c61245544e00f11b278.png"},893891:function(e,n,t){t.d(n,{Z:function(){return o}});let o=t.p+"assets/images/ea1f4c4aa8ca8da50174f8240c34912a-f68db19b5fe294c28f8514355ab61d16.png"},250065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return r}});var o=t(667294);let a={},i=o.createContext(a);function r(e){let n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);