"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["13488"],{627566:function(e,t,n){n.r(t),n.d(t,{metadata:()=>o,contentTitle:()=>s,default:()=>p,assets:()=>c,toc:()=>d,frontMatter:()=>r});var o=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u5E93ORM/ORM\u4F7F\u7528\u914D\u7F6E/ORM\u4F7F\u7528\u914D\u7F6E-\u5E38\u89C1\u95EE\u9898","title":"ORM Configuration - FAQ","description":"Implement database account password encryption in configuration files within the GoFrame framework to prevent the leakage of sensitive information. Users can decrypt the encrypted fields when connecting to the database by customizing a Driver. Using mysql as an example, the code examples demonstrate how to wrap the mysql driver and override its Open method to ensure the security and flexibility of database connections.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u5E93ORM/ORM\u4F7F\u7528\u914D\u7F6E/ORM\u4F7F\u7528\u914D\u7F6E-\u5E38\u89C1\u95EE\u9898.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u5E93ORM/ORM\u4F7F\u7528\u914D\u7F6E","slug":"/docs/core/gdb-config-faq","permalink":"/en/docs/core/gdb-config-faq","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u5E93ORM/ORM\u4F7F\u7528\u914D\u7F6E/ORM\u4F7F\u7528\u914D\u7F6E-\u5E38\u89C1\u95EE\u9898.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1749123875000,"sidebarPosition":2,"frontMatter":{"slug":"/docs/core/gdb-config-faq","title":"ORM Configuration - FAQ","sidebar_position":2,"hide_title":true,"keywords":["GoFrame","GoFrame framework","database encryption","custom Driver","mysql","password decryption","configuration file encryption","ORM interface development","database account protection","database connection"],"description":"Implement database account password encryption in configuration files within the GoFrame framework to prevent the leakage of sensitive information. Users can decrypt the encrypted fields when connecting to the database by customizing a Driver. Using mysql as an example, the code examples demonstrate how to wrap the mysql driver and override its Open method to ensure the security and flexibility of database connections."},"sidebar":"mainSidebar","previous":{"title":"ORM Configuration - Methods","permalink":"/en/docs/core/gdb-config-funcs"},"next":{"title":"ORM - Model \uD83D\uDD25","permalink":"/en/docs/core/gdb-chaining"}}'),i=n("785893"),a=n("250065");let r={slug:"/docs/core/gdb-config-faq",title:"ORM Configuration - FAQ",sidebar_position:2,hide_title:!0,keywords:["GoFrame","GoFrame framework","database encryption","custom Driver","mysql","password decryption","configuration file encryption","ORM interface development","database account protection","database connection"],description:"Implement database account password encryption in configuration files within the GoFrame framework to prevent the leakage of sensitive information. Users can decrypt the encrypted fields when connecting to the database by customizing a Driver. Using mysql as an example, the code examples demonstrate how to wrap the mysql driver and override its Open method to ensure the security and flexibility of database connections."},s=void 0,c={},d=[{value:"How to Implement Database Account Password Encryption in Configuration Files",id:"how-to-implement-database-account-password-encryption-in-configuration-files",level:2}];function l(e){let t={a:"a",code:"code",h2:"h2",p:"p",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"how-to-implement-database-account-password-encryption-in-configuration-files",children:"How to Implement Database Account Password Encryption in Configuration Files"}),"\n",(0,i.jsxs)(t.p,{children:["In certain scenarios, database account passwords cannot be configured in plaintext within configuration files and must be encrypted. During the database connection, the encrypted fields in the configuration file need to be decrypted. This requirement can be achieved by customizing a ",(0,i.jsx)(t.code,{children:"Driver"})," (for detailed information about ",(0,i.jsx)(t.code,{children:"Driver"}),", please refer to the chapter: ",(0,i.jsx)(t.a,{href:"/en/docs/core/gdb-interface",children:"ORM - Interface"}),"). Taking ",(0,i.jsx)(t.code,{children:"mysql"})," as an example, we can write our own ",(0,i.jsx)(t.code,{children:"Driver"}),", wrap the ",(0,i.jsx)(t.code,{children:"mysql driver"})," from the framework community components, and override its ",(0,i.jsx)(t.code,{children:"Open"})," method. Code example:"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://goframe.org/en/examples/database/encoded-pass",children:"https://goframe.org/en/examples/database/encoded-pass"})})]})}function p(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return r}});var o=n(667294);let i={},a=o.createContext(i);function r(e){let t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);