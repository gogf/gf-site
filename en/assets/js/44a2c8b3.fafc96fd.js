"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["85979"],{326717:function(e,t,n){n.r(t),n.d(t,{metadata:()=>i,contentTitle:()=>r,default:()=>l,assets:()=>m,toc:()=>d,frontMatter:()=>o});var i=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u65F6\u95F4\u5BF9\u8C61","title":"Time - Object","description":"Create and manage time objects with GoFrame, including methods to create gtime.Time objects using standard library time.Time objects, Unix timestamps, and time strings. It also explains how to format time using custom and standard library formats, and demonstrates examples of chained operations with time objects to help developers process time data more efficiently.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u65F6\u95F4\u5BF9\u8C61.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime","slug":"/docs/components/os-gtime-time","permalink":"/en/docs/components/os-gtime-time","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u65F6\u95F4\u5BF9\u8C61.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":1,"frontMatter":{"slug":"/docs/components/os-gtime-time","title":"Time - Object","sidebar_position":1,"hide_title":true,"keywords":["time management","time object","GoFrame","timestamp","formatting","standard library","custom time","time string","chained operations","gtime"],"description":"Create and manage time objects with GoFrame, including methods to create gtime.Time objects using standard library time.Time objects, Unix timestamps, and time strings. It also explains how to format time using custom and standard library formats, and demonstrates examples of chained operations with time objects to help developers process time data more efficiently."},"sidebar":"mainSidebar","previous":{"title":"Time - Format","permalink":"/en/docs/components/os-gtime-format"},"next":{"title":"Time - Examples","permalink":"/en/docs/components/os-gtime-common-funcs"}}'),s=n("785893"),a=n("250065");let o={slug:"/docs/components/os-gtime-time",title:"Time - Object",sidebar_position:1,hide_title:!0,keywords:["time management","time object","GoFrame","timestamp","formatting","standard library","custom time","time string","chained operations","gtime"],description:"Create and manage time objects with GoFrame, including methods to create gtime.Time objects using standard library time.Time objects, Unix timestamps, and time strings. It also explains how to format time using custom and standard library formats, and demonstrates examples of chained operations with time objects to help developers process time data more efficiently."},r=void 0,m={},d=[{value:"Time Object",id:"time-object",level:2},{value:"Creating Objects",id:"creating-objects",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Custom Formatting Syntax",id:"example-1-custom-formatting-syntax",level:3},{value:"Example 2: Standard Library Formatting Syntax",id:"example-2-standard-library-formatting-syntax",level:3},{value:"Example 3: Chained Operations on Time Objects",id:"example-3-chained-operations-on-time-objects",level:3}];function c(e){let t={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"time-object",children:"Time Object"}),"\n",(0,s.jsxs)(t.p,{children:["You can create a ",(0,s.jsx)(t.code,{children:"gtime.Time"})," object through a standard library ",(0,s.jsx)(t.code,{children:"time.Time"})," object, Unix timestamp, time string (e.g., ",(0,s.jsx)(t.code,{children:"2018-07-18 12:01:00"}),"), or custom time string (requires a given format, supports custom formats and standard library formats)."]}),"\n",(0,s.jsx)(t.h2,{id:"creating-objects",children:"Creating Objects"}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.code,{children:"gtime.Time"})," object can be created using the ",(0,s.jsx)(t.code,{children:"gtime.New"})," method, which supports creating objects from ",(0,s.jsx)(t.code,{children:"time.Time"}),", timestamps, and time strings. Timestamps support time lengths in nanoseconds. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'// Create from a time string\ngtime.New("2020-10-24 12:00:00")\n// Create from a time.Time object\ngtime.New(time.Now())\n// Create from a timestamp in seconds\ngtime.New(1603710586)\n// Create from a timestamp in nanoseconds\ngtime.New(1603710586660409000)\n'})}),"\n",(0,s.jsx)(t.p,{children:"Additionally, time strings support common types such as:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:"2017-12-14 04:51:34 +0805 LMT\n2017-12-14 04:51:34 +0805 LMT\n2006-01-02T15:04:05Z07:00\n2014-01-17T01:19:15+08:00\n2018-02-09T20:46:17.897Z\n2018-02-09 20:46:17.897\n2018-02-09T20:46:17Z\n2018-02-09 20:46:17\n2018/10/31 - 16:38:46\n2018-02-09\n2018.02.09\n\n01-Nov-2018 11:50:28\n01/Nov/2018 11:50:28\n01.Nov.2018 11:50:28\n01.Nov.2018:11:50:28\nDate separators support '-', '/', '.'\n"})}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.h3,{id:"example-1-custom-formatting-syntax",children:"Example 1: Custom Formatting Syntax"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/os/gtime"\n)\n\nfunc main() {\n    formats := []string{\n        "Y-m-d H:i:s.u",\n        "D M d H:i:s T O Y",\n        "\\\\T\\\\i\\\\m\\\\e \\\\i\\\\s: h:i:s a",\n        "2006-01-02T15:04:05.000000000Z07:00",\n    }\n    t := gtime.Now()\n    for _, f := range formats {\n        fmt.Println(t.Format(f))\n    }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["In this example, we specified four ",(0,s.jsx)(t.code,{children:"format"})," styles and converted the current time to these styles for printing. The output is as follows:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:"2018-07-22 11:17:13.797\nSun Jul 22 11:17:13 CST +0800 2018\nTime is: 11:17:13 am\n2006-01-02CST15:04:05.000000000Z07:00\n"})}),"\n",(0,s.jsx)(t.p,{children:"Noteworthy points in this example:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["When letters conflict with formatting characters, you can escape the character with ",(0,s.jsx)(t.code,{children:"\\"})," to indicate to the parser it's a regular letter, not a format character. Hence, the third string outputs as: ",(0,s.jsx)(t.code,{children:"Time is: 11:17:13 am"})]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"Format"})," method accepts custom formatting syntax (e.g., ",(0,s.jsx)(t.code,{children:"Y-m-d H:i:s"}),"), not the standard library syntax (e.g., ",(0,s.jsx)(t.code,{children:"2006-01-02 15:04:05"}),"), leading to the fourth string being output as-is."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-2-standard-library-formatting-syntax",children:"Example 2: Standard Library Formatting Syntax"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/os/gtime"\n)\n\nfunc main() {\n    formats := []string{\n        "2006-01-02 15:04:05.000",\n        "Mon Jan _2 15:04:05 MST 2006",\n        "Time is: 03:04:05 PM",\n        "2006-01-02T15:04:05.000000000Z07:00 MST",\n    }\n    t := gtime.Now()\n    for _, f := range formats {\n        fmt.Println(t.Layout(f))\n    }\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"In this example, we use four standard library time formatting syntaxes to format the current time and output the result to the terminal. The output is:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:"2018-07-22 11:28:13.945\nSun Jul 22 11:28:13 CST 2018\nTime is: 11:28:13 AM\n2018-07-22T11:28:13.945153275+08:00 CST\n"})}),"\n",(0,s.jsx)(t.p,{children:"Key points:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Custom formatting syntax and standard library formatting syntax are not conflicting. They use ",(0,s.jsx)(t.code,{children:"Format"})," and ",(0,s.jsx)(t.code,{children:"Layout"})," methods respectively and are independent and non-interchangeable."]}),"\n",(0,s.jsx)(t.li,{children:"The standard library's formatting syntax has its unique complexities."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-3-chained-operations-on-time-objects",children:"Example 3: Chained Operations on Time Objects"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/os/gtime"\n    "time"\n)\n\nfunc main() {\n    // This time last year, system time\n    fmt.Println(gtime.Now().AddDate(-1, 0, 0).Format("Y-m-d"))\n\n    // This time last year, UTC time\n    fmt.Println(gtime.Now().AddDate(-1, 0, 0).Format("Y-m-d H:i:s T"))\n    fmt.Println(gtime.Now().AddDate(-1, 0, 0).UTC().Format("Y-m-d H:i:s T"))\n\n    // Midnight on the 1st of next month\n    fmt.Println(gtime.Now().AddDate(0, 1, 0).Format("Y-m-01 00:00:00"))\n\n    // 1 hour ago\n    fmt.Println(gtime.Now().Add(-time.Hour).Format("Y-m-d H:i:s"))\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"The output is:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"2020-09-19\n2020-09-19 15:51:48 CST\n2020-09-19 07:51:48 UTC\n2021-10-01 00:00:00\n2021-09-19 14:51:48\n"})}),"\n",(0,s.jsx)(t.p,{children:"This example is straightforward and needs no further elaboration."})]})}function l(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return r},a:function(){return o}});var i=n(667294);let s={},a=i.createContext(s);function o(e){let t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);