"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["21630"],{864916:function(e,t,n){n.r(t),n.d(t,{metadata:()=>r,contentTitle:()=>d,default:()=>u,assets:()=>l,toc:()=>a,frontMatter:()=>s});var r=JSON.parse('{"id":"course/starbook/\u7B2C\u56DB\u7AE0-\u5355\u8BCD\u7BA1\u7406/4.7.\u5220\u9664\u5355\u8BCD","title":"4.7 Delete Word","description":"Implement word deletion functionality through API using DELETE method to request the deletion of a word with a specified ID. The Logic layer performs database deletion operations based on user ID and word ID, while the Controller layer handles the request and calls the logic to delete the word. Detailed interface testing steps are provided to verify the functionality implementation.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/course/starbook/\u7B2C\u56DB\u7AE0-\u5355\u8BCD\u7BA1\u7406/4.7.\u5220\u9664\u5355\u8BCD.md","sourceDirName":"course/starbook/\u7B2C\u56DB\u7AE0-\u5355\u8BCD\u7BA1\u7406","slug":"/course/starbook/word-delete","permalink":"/en/course/starbook/word-delete","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/course/starbook/\u7B2C\u56DB\u7AE0-\u5355\u8BCD\u7BA1\u7406/4.7.\u5220\u9664\u5355\u8BCD.md","tags":[],"version":"current","lastUpdatedBy":"oldme","lastUpdatedAt":1735822233000,"frontMatter":{"title":"4.7 Delete Word","hide_title":true,"slug":"/course/starbook/word-delete","keywords":["GoFrame Framework","DELETE Method","API Delete Word","Logic Layer Implementation","Interface Development","Controller Invocation","Request-Response","Context Management","Path Parameter","Database Operation"],"description":"Implement word deletion functionality through API using DELETE method to request the deletion of a word with a specified ID. The Logic layer performs database deletion operations based on user ID and word ID, while the Controller layer handles the request and calls the logic to delete the word. Detailed interface testing steps are provided to verify the functionality implementation."},"sidebar":"courseStarBookSidebar","previous":{"title":"4.6 Word Detail","permalink":"/en/course/starbook/word-detail"},"next":{"title":"4.8 Summary","permalink":"/en/course/starbook/word-summary"}}'),o=n("785893"),i=n("250065");let s={title:"4.7 Delete Word",hide_title:!0,slug:"/course/starbook/word-delete",keywords:["GoFrame Framework","DELETE Method","API Delete Word","Logic Layer Implementation","Interface Development","Controller Invocation","Request-Response","Context Management","Path Parameter","Database Operation"],description:"Implement word deletion functionality through API using DELETE method to request the deletion of a word with a specified ID. The Logic layer performs database deletion operations based on user ID and word ID, while the Controller layer handles the request and calls the logic to delete the word. Detailed interface testing steps are provided to verify the functionality implementation."},d=void 0,l={},a=[{value:"Add Api",id:"add-api",level:2},{value:"Write Logic",id:"write-logic",level:2},{value:"Controller Invokes Logic",id:"controller-invokes-logic",level:2},{value:"Interface Testing",id:"interface-testing",level:2}];function c(e){let t={code:"code",em:"em",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Delete word using ",(0,o.jsx)(t.code,{children:"DELETE"})," method."]}),"\n",(0,o.jsx)(t.h2,{id:"add-api",children:"Add Api"}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"api/words/v1/words.go"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'...\ntype DeleteReq struct {  \n    g.Meta `path:"words/{id}" method:"delete" sm:"Delete" tags:"Word"`  \n    Id     uint `json:"id" v:"required"`  \n}  \n  \ntype DeleteRes struct {  \n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"write-logic",children:"Write Logic"}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"internal/logic/words/words.go"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'...\nfunc (w *Words) Delete(ctx context.Context, uid, id uint) (err error) {  \n    db := dao.Words.Ctx(ctx).Where("id", id)  \n    if uid > 0 {  \n       db = db.Where("uid", uid)  \n    }  \n    _, err = db.Delete()  \n    return  \n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"controller-invokes-logic",children:"Controller Invokes Logic"}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"internal/controller/words/words_v1_delete.go"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'package words  \n  \nimport (  \n    "context"  \n  \n    "star/api/words/v1"\n)  \n  \nfunc (c *ControllerV1) Delete(ctx context.Context, req *v1.DeleteReq) (res *v1.DeleteRes, err error) {  \n    uid, err := c.users.GetUid(ctx)  \n    if err != nil {  \n       return nil, err  \n    }  \n  \n    err = c.words.Delete(ctx, uid, req.Id)  \n    return  \n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"interface-testing",children:"Interface Testing"}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'$ curl -X DELETE http://127.0.0.1:8000/v1/words/1 \\\n     -H "Authorization: eyJhbGci...5U" \\\n     -H "Content-Type: application/json" \\\n\n{\n\xa0 \xa0 "code": 0,\n\xa0 \xa0 "message": "",\n\xa0 \xa0 "data": null\n}\n'})})]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return d},a:function(){return s}});var r=n(667294);let o={},i=r.createContext(o);function s(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);