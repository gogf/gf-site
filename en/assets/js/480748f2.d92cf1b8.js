"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["27071"],{848061:function(e,n,r){r.r(n),r.d(n,{metadata:()=>o,contentTitle:()=>c,default:()=>M,assets:()=>i,toc:()=>u,frontMatter:()=>d});var o=JSON.parse('{"id":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9","title":"ORM\u94FE\u5F0F\u64CD\u4F5C(\u91CD\u70B9)","description":"gdb \u94FE\u5F0F\u64CD\u4F5C\u4F7F\u7528\u65B9\u5F0F\u7B80\u5355\u7075\u6D3B\uFF0C\u662F GoFrame \u6846\u67B6\u5B98\u65B9\u63A8\u8350\u7684\u6570\u636E\u5E93\u64CD\u4F5C\u65B9\u5F0F\u3002\u94FE\u5F0F\u64CD\u4F5C\u53EF\u4EE5\u901A\u8FC7\u6570\u636E\u5E93\u5BF9\u8C61\u7684 db.Table/ db.Model \u65B9\u6CD5\u6216\u8005\u4E8B\u52A1\u5BF9\u8C61\u7684 tx.Table/ tx.Model \u65B9\u6CD5\uFF0C\u57FA\u4E8E\u6307\u5B9A\u7684\u6570\u636E\u8868\u8FD4\u56DE\u4E00\u4E2A\u94FE\u5F0F\u64CD\u4F5C\u5BF9\u8C61 *Model\uFF0C\u8BE5\u5BF9\u8C61\u53EF\u4EE5\u6267\u884C\u4EE5\u4E0B\u65B9\u6CD5\u3002\u5F53\u524D\u65B9\u6CD5\u5217\u8868\u53EF\u80FD\u6EDE\u540E\u4E8E\u6E90\u4EE3\u7801\uFF0C\u8BE6\u7EC6\u7684\u65B9\u6CD5\u5217\u8868\u8BF7\u53C2\u8003\u63A5\u53E3\u6587\u6863\uFF1A https://godoc.org/github.com/gogf/gf/database/gdb#Model","source":"@site/versioned_docs/version-1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9.md","sourceDirName":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9","slug":"/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9/","permalink":"/en/1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9/","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9.md","tags":[],"version":"1.16.x","lastUpdatedBy":"John","lastUpdatedAt":1730365530000,"sidebarPosition":1,"frontMatter":{"title":"ORM\u94FE\u5F0F\u64CD\u4F5C(\u91CD\u70B9)","sidebar_position":1,"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"ORM\u4F7F\u7528\u914D\u7F6E","permalink":"/en/1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u4F7F\u7528\u914D\u7F6E"},"next":{"title":"ORM\u94FE\u5F0F\u64CD\u4F5C-\u6A21\u578B\u521B\u5EFA","permalink":"/en/1.16.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u94FE\u5F0F\u64CD\u4F5C-\u91CD\u70B9/ORM\u94FE\u5F0F\u64CD\u4F5C-\u6A21\u578B\u521B\u5EFA"}}'),l=r("785893"),t=r("250065");let d={title:"ORM\u94FE\u5F0F\u64CD\u4F5C(\u91CD\u70B9)",sidebar_position:1,hide_title:!0},c=void 0,i={},u=[];function f(e){let n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"gdb"})," \u94FE\u5F0F\u64CD\u4F5C\u4F7F\u7528\u65B9\u5F0F\u7B80\u5355\u7075\u6D3B\uFF0C\u662F ",(0,l.jsx)(n.code,{children:"GoFrame"})," \u6846\u67B6\u5B98\u65B9\u63A8\u8350\u7684\u6570\u636E\u5E93\u64CD\u4F5C\u65B9\u5F0F\u3002\u94FE\u5F0F\u64CD\u4F5C\u53EF\u4EE5\u901A\u8FC7\u6570\u636E\u5E93\u5BF9\u8C61\u7684 ",(0,l.jsx)(n.code,{children:"db.Table"}),"/ ",(0,l.jsx)(n.code,{children:"db.Model"})," \u65B9\u6CD5\u6216\u8005\u4E8B\u52A1\u5BF9\u8C61\u7684 ",(0,l.jsx)(n.code,{children:"tx.Table"}),"/ ",(0,l.jsx)(n.code,{children:"tx.Model"})," \u65B9\u6CD5\uFF0C\u57FA\u4E8E\u6307\u5B9A\u7684\u6570\u636E\u8868\u8FD4\u56DE\u4E00\u4E2A\u94FE\u5F0F\u64CD\u4F5C\u5BF9\u8C61 ",(0,l.jsx)(n.code,{children:"*Model"}),"\uFF0C\u8BE5\u5BF9\u8C61\u53EF\u4EE5\u6267\u884C\u4EE5\u4E0B\u65B9\u6CD5\u3002\u5F53\u524D\u65B9\u6CD5\u5217\u8868\u53EF\u80FD\u6EDE\u540E\u4E8E\u6E90\u4EE3\u7801\uFF0C\u8BE6\u7EC6\u7684\u65B9\u6CD5\u5217\u8868\u8BF7\u53C2\u8003\u63A5\u53E3\u6587\u6863\uFF1A ",(0,l.jsx)(n.a,{href:"https://godoc.org/github.com/gogf/gf/database/gdb#Model",children:"https://godoc.org/github.com/gogf/gf/database/gdb#Model"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"// \u5199\u5165/\u66F4\u65B0/\u5220\u9664\u57FA\u672C\u64CD\u4F5C\nfunc (m *Model) Insert(data ...interface{}) (result sql.Result, err error)\nfunc (m *Model) InsertAndGetId(data ...interface{}) (lastInsertId int64, err error)\nfunc (m *Model) InsertIgnore(data ...interface{}) (result sql.Result, err error)\nfunc (m *Model) Replace(data ...interface{}) (result sql.Result, err error)\nfunc (m *Model) Save(data ...interface{}) (result sql.Result, err error)\nfunc (m *Model) Update(dataAndWhere ...interface{}) (result sql.Result, err error)\nfunc (m *Model) Delete(where ...interface{}) (result sql.Result, err error)\n\n// \u57FA\u672C\u67E5\u8BE2\u64CD\u4F5C\nfunc (m *Model) All(where ...interface{} (Result, error)\nfunc (m *Model) One(where ...interface{}) (Record, error)\nfunc (m *Model) Array(fieldsAndWhere ...interface{}) ([]Value, error)\nfunc (m *Model) Value(fieldsAndWhere ...interface{}) (Value, error)\nfunc (m *Model) Count(where ...interface{}) (int, error)\nfunc (m *Model) CountColumn(column string) (int, error)\n\n// \u5E38\u7528\u57FA\u672C\u7EDF\u8BA1\nfunc (m *Model) Min(column string) (float64, error)\nfunc (m *Model) Max(column string) (float64, error)\nfunc (m *Model) Avg(column string) (float64, error)\nfunc (m *Model) Sum(column string) (float64, error)\n\n// \u5B57\u6BB5\u81EA\u589E/\u81EA\u51CF\nfunc (m *Model) Increment(column string, amount float64) (sql.Result, error)\nfunc (m *Model) Decrement(column string, amount float64) (sql.Result, error)\n\n// \u4E3B\u952E\u67E5\u8BE2\u64CD\u4F5C\nfunc (m *Model) FindAll(where ...interface{}) (Result, error)\nfunc (m *Model) FindOne(where ...interface{}) (Record, error)\nfunc (m *Model) FindArray(fieldsAndWhere ...interface{}) (Value, error)\nfunc (m *Model) FindValue(fieldsAndWhere ...interface{}) (Value, error)\nfunc (m *Model) FindCount(where ...interface{}) (int, error)\nfunc (m *Model) FindScan(pointer interface{}, where ...interface{}) error\n\n// \u67E5\u8BE2\u8F6C\u6362\u64CD\u4F5C\nfunc (m *Model) Struct(pointer interface{}) error\nfunc (m *Model) Structs(pointer interface{}) error\nfunc (m *Model) Scan(pointer interface{}) error\nfunc (m *Model) ScanList(listPointer interface{}, attributeName string, relation ...string) (err error)\n\n// \u8054\u8868\u67E5\u8BE2\u65B9\u6CD5\nfunc (m *Model) LeftJoin(table ...string) *Model\nfunc (m *Model) RightJoin(table ...string) *Model\nfunc (m *Model) InnerJoin(table ...string) *Model\n\n// \u8054\u5408\u67E5\u8BE2\nfunc (m *Model) Union(unions ...*Model) *Model\nfunc (m *Model) UnionAll(unions ...*Model) *Model\n\n// With\u5173\u8054\u67E5\u8BE2\nfunc (m *Model) With(object interface{}) *Model\nfunc (m *Model) WithAll() *Model\n\n// \u6761\u4EF6\u67E5\u8BE2\u65B9\u6CD5\nfunc (m *Model) Where(where interface{}, args...interface{}) *Model\nfunc (m *Model) WherePri(where interface{}, args ...interface{}) *Model\nfunc (m *Model) WhereBetween(column string, min, max interface{}) *Model\nfunc (m *Model) WhereLike(column string, like interface{}) *Model\nfunc (m *Model) WhereIn(column string, in interface{}) *Model\nfunc (m *Model) WhereNull(columns ...string) *Model\nfunc (m *Model) WhereLT(column string, value interface{}) *Model\nfunc (m *Model) WhereLTE(column string, value interface{}) *Model\nfunc (m *Model) WhereGT(column string, value interface{}) *Model\nfunc (m *Model) WhereGTE(column string, value interface{}) *Model\n\nfunc (m *Model) WhereNotBetween(column string, min, max interface{}) *Model\nfunc (m *Model) WhereNotLike(column string, like interface{}) *Model\nfunc (m *Model) WhereNotIn(column string, in interface{}) *Model\nfunc (m *Model) WhereNotNull(columns ...string) *Model\n\nfunc (m *Model) WhereOr(where interface{}, args ...interface{}) *Model\nfunc (m *Model) WhereOrBetween(column string, min, max interface{}) *Model\nfunc (m *Model) WhereOrLike(column string, like interface{}) *Model\nfunc (m *Model) WhereOrIn(column string, in interface{}) *Model\nfunc (m *Model) WhereOrNull(columns ...string) *Model\nfunc (m *Model) WhereOrLT(column string, value interface{}) *Model\nfunc (m *Model) WhereOrLTE(column string, value interface{}) *Model\nfunc (m *Model) WhereOrGT(column string, value interface{}) *Model\nfunc (m *Model) WhereOrGTE(column string, value interface{}) *Model\n\nfunc (m *Model) WhereOrNotBetween(column string, min, max interface{}) *Model\nfunc (m *Model) WhereOrNotLike(column string, like interface{}) *Model\nfunc (m *Model) WhereOrNotIn(column string, in interface{}) *Model\nfunc (m *Model) WhereOrNotNull(columns ...string) *Model\n\n// \u5206\u7EC4\u6392\u5E8F\u65B9\u6CD5\nfunc (m *Model) Group(group string) *Model\nfunc (m *Model) Order(order string) *Model\nfunc (m *Model) OrderAsc(column string) *Model\nfunc (m *Model) OrderDesc(column string) *Model\nfunc (m *Model) OrderRandom() *Model\n\n// \u6761\u4EF6\u8FC7\u6EE4\u65B9\u6CD5\nfunc (m *Model) Fields(fields string) *Model\nfunc (m *Model) FieldsEx(fields string) *Model\nfunc (m *Model) Data(data...interface{}) *Model\nfunc (m *Model) Batch(batch int) *Model\nfunc (m *Model) Filter() *Model\nfunc (m *Model) Safe(safe...bool) *Model\nfunc (m *Model) Having(having interface{}, args ...interface{}) *Model\nfunc (m *Model) Offset(offset int) *Model\nfunc (m *Model) Limit(start int, limit int) *Model\nfunc (m *Model) OmitEmpty() *Model\nfunc (m *Model) Page(page, limit int) (*Model)\nfunc (m *Model) Distinct() *Model\n\n// \u6570\u636E\u5E93/\u4E8B\u52A1\u5207\u6362\nfunc (m *Model) DB(db DB) *Model\nfunc (m *Model) TX(tx *TX) *Model\n\n// \u4E3B\u4ECE\u81EA\u5B9A\u4E49\u5207\u6362\nfunc (m *Model) Master() *Model\nfunc (m *Model) Slave() *Model\n\n// \u6570\u636E\u4E92\u65A5\u9501\u64CD\u4F5C\nfunc (m *Model) LockUpdate() *Model\nfunc (m *Model) LockShared() *Model\n\n// \u5E38\u7528\u5DE5\u5177\u65B9\u6CD5\nfunc (m *Model) Ctx(ctx context.Context) *Model\nfunc (m *Model) Clone() *Model\nfunc (m *Model) Cache(duration time.Duration, name ...string) *Model\nfunc (m *Model) As(as string) *Model\nfunc (m *Model) Chunk(limit int, callback func(result Result, err error) bool)\nfunc (m *Model) Schema(schema string) *Model\nfunc (m *Model) Option(option int) *Model\nfunc (m *Model) Args(args ...interface{}) *Model\nfunc (m *Model) Unscoped() *Model\nfunc (m *Model) HasField(field string) (bool, error)\nfunc (m *Model) GetFieldsStr(prefix ...string) string\nfunc (m *Model) GetFieldsExStr(fields string, prefix ...string) string\n"})})]})}function M(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(f,{...e})}):f(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return d}});var o=r(667294);let l={},t=o.createContext(l);function d(e){let n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);