"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["81249"],{311725:function(e,n,r){r.r(n),r.d(n,{metadata:()=>s,contentTitle:()=>c,default:()=>u,assets:()=>a,toc:()=>l,frontMatter:()=>t});var s=JSON.parse('{"id":"course/proxima-book/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u670D\u52A1/2.3.\u534F\u8BAE\u6587\u4EF6","title":"2.3 Protocol Files","description":"Introduction to Protocol Buffers protocol file definitions in the user service, including protocol design for user registration, login interfaces, and gRPC service definition best practices.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/course/proxima-book/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u670D\u52A1/2.3.\u534F\u8BAE\u6587\u4EF6.md","sourceDirName":"course/proxima-book/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u670D\u52A1","slug":"/course/proxima-book/user-protocol","permalink":"/en/course/proxima-book/user-protocol","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/course/proxima-book/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u670D\u52A1/2.3.\u534F\u8BAE\u6587\u4EF6.md","tags":[],"version":"current","lastUpdatedBy":"oldme","lastUpdatedAt":1734398801000,"frontMatter":{"title":"2.3 Protocol Files","hide_title":true,"slug":"/course/proxima-book/user-protocol","keywords":["GoFrame","Protocol Buffers","gRPC","API definition","microservices communication","proto files","user service protocol"],"description":"Introduction to Protocol Buffers protocol file definitions in the user service, including protocol design for user registration, login interfaces, and gRPC service definition best practices."},"sidebar":"courseProximaBookSidebar","previous":{"title":"2.2 Business Logic","permalink":"/en/course/proxima-book/user-logic"},"next":{"title":"2.4 Controllers","permalink":"/en/course/proxima-book/user-controller"}}'),i=r("785893"),o=r("250065");let t={title:"2.3 Protocol Files",hide_title:!0,slug:"/course/proxima-book/user-protocol",keywords:["GoFrame","Protocol Buffers","gRPC","API definition","microservices communication","proto files","user service protocol"],description:"Introduction to Protocol Buffers protocol file definitions in the user service, including protocol design for user registration, login interfaces, and gRPC service definition best practices."},c=void 0,a={},l=[{value:"User Registration",id:"user-registration",level:2},{value:"User Login/Query",id:"user-loginquery",level:2}];function d(e){let n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Protocol files refer to ",(0,i.jsx)(n.code,{children:"*.proto"}),' files. Proto is the standard communication protocol for gRPC, similar to how JSON relates to HTTP. However, it\'s essential to note that proto and JSON have distinct differences: proto defines both "interface" information and response/request parameters, while JSON simply stores data.']}),"\n",(0,i.jsxs)(n.p,{children:["Proto files are stored uniformly under ",(0,i.jsx)(n.code,{children:"manifest/protobuf"}),", and like regular HTTP services, interface versions are managed through directory hierarchies."]}),"\n",(0,i.jsx)(n.h2,{id:"user-registration",children:"User Registration"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Create a directory named ",(0,i.jsx)(n.code,{children:"account"})," to manage user account-related business logic."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"app/user/manifest/protobuf/account/v1/account.proto"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-proto",children:'syntax = "proto3";  \n  \npackage account.v1;  \n  \noption go_package = "proxima/app/user/api/account/v1";  \n\nservice Account{  \n  rpc UserRegister(UserRegisterReq) returns (UserRegisterRes) {}  \n}  \n  \nmessage UserRegisterReq {  \n  string username = 1; // v:required|min-length:2  \n  string password = 2; // v:required|min-length:6  \n  string email = 3; // v:required|email  \n}  \n  \nmessage UserRegisterRes {  \n  int32 id = 1;  \n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Let's briefly explain the proto syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"syntax"}),": Specifies the file's syntax version"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"package"}),": Defines the service namespace, similar to a package name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"option"}),": Sets compilation options; ",(0,i.jsx)(n.code,{children:"go_package"})," specifies the package name for generated Go code. ",(0,i.jsxs)(n.em,{children:["In GoFrame, the fixed format is ",(0,i.jsx)(n.code,{children:"project_name + app + microservice_name + api + module_name + v1"})]})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"service"}),": Defines remote call methods, typically RPC, specifying request and response parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"message"}),": Defines data structures, where ",(0,i.jsx)(n.code,{children:"string"})," is the data type, ",(0,i.jsx)(n.code,{children:"username"})," is the field name, and the incremental numbers after the equals sign are field numbers. ",(0,i.jsx)(n.em,{children:"The trailing comments are framework-provided parameter validations, used similarly to regular HTTP interfaces"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Our file defines:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses proto3 syntax version"}),"\n",(0,i.jsxs)(n.li,{children:["Defines package name as ",(0,i.jsx)(n.code,{children:"account.v1"})]}),"\n",(0,i.jsxs)(n.li,{children:["Sets the Go code generation package path option ",(0,i.jsx)(n.code,{children:"go_package"})," to ",(0,i.jsx)(n.code,{children:"proxima/app/user/api/account/v1"})]}),"\n",(0,i.jsxs)(n.li,{children:["Defines an ",(0,i.jsx)(n.code,{children:"Account"})," service with one RPC method ",(0,i.jsx)(n.code,{children:"UserRegister"})," that accepts ",(0,i.jsx)(n.code,{children:"UserRegisterReq"})," message and returns ",(0,i.jsx)(n.code,{children:"UserRegisterRes"})," message"]}),"\n",(0,i.jsxs)(n.li,{children:["Defines a message type ",(0,i.jsx)(n.code,{children:"UserRegisterReq"})," with three fields:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"username"})," (string type, number 1)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"password"})," (string type, number 2)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"email"})," (string type, number 3)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Defines a message type ",(0,i.jsx)(n.code,{children:"UserRegisterRes"})," with one field:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (integer type, number 1)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"user-loginquery",children:"User Login/Query"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Following the same pattern, let's define the user login and query interfaces. Here's the complete file content:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"app/user/manifest/protobuf/account/v1/account.proto"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-proto",children:'syntax = "proto3";  \n  \npackage account.v1;  \n  \noption go_package = "proxima/app/user/api/account/v1";  \n  \nimport "pbentity/users.proto";  \n  \nservice Account{  \n  rpc UserRegister(UserRegisterReq) returns (UserRegisterRes) {}  \n  rpc UserLogin(UserLoginReq) returns (UserLoginRes) {}  \n  rpc UserInfo(UserInfoReq) returns (UserInfoRes) {}  \n}  \n  \nmessage UserRegisterReq {  \n  string username = 1; // v:required|min-length:2  \n  string password = 2; // v:required|min-length:6  \n  string email = 3; // v:required|email  \n}  \n  \nmessage UserRegisterRes {  \n  int32 id = 1;  \n}  \n  \nmessage UserLoginReq {  \n  string username = 1; // v:required|min-length:2  \n  string password = 2; // v:required|min-length:6  \n}  \n  \nmessage UserLoginRes {  \n  string token = 1;  \n}  \n  \nmessage UserInfoReq {  \n  string token = 1; // v:required  \n}\n  \nmessage UserInfoRes {  \n  pbentity.Users user = 1;  \n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"This introduces two new syntax elements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'import "pbentity/users.proto"'}),": Imports another proto file. This file was generated by ",(0,i.jsx)(n.code,{children:"gf gen pbentity"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pbentity.Users user"}),": Uses the imported data model, which is almost identical to Go structs"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return t}});var s=r(667294);let i={},o=s.createContext(i);function t(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);