"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["71720"],{453599:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>p,assets:()=>a,toc:()=>d,frontMatter:()=>c});var r=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F51\u7EDC\u7EC4\u4EF6/UDP\u7EC4\u4EF6/UDP\u7EC4\u4EF6","title":"UDP","description":"UDP component in the GoFrame framework, implementing a simple unreliable information delivery service using gudp.Server and gudp.Conn for the UDP protocol. Provides example code on creating and running a UDP server, along with related API documentation links for reference.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7F51\u7EDC\u7EC4\u4EF6/UDP\u7EC4\u4EF6/UDP\u7EC4\u4EF6.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F51\u7EDC\u7EC4\u4EF6/UDP\u7EC4\u4EF6","slug":"/docs/components/network-gudp","permalink":"/en/docs/components/network-gudp","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7F51\u7EDC\u7EC4\u4EF6/UDP\u7EC4\u4EF6/UDP\u7EC4\u4EF6.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732716970000,"sidebarPosition":1,"frontMatter":{"slug":"/docs/components/network-gudp","title":"UDP","sidebar_position":1,"hide_title":true,"keywords":["GoFrame","UDP Component","UDP Protocol","Connectionless Protocol","gudp.Server","gudp.Conn","API Documentation","gudp Usage","NewServer","SetAddress"],"description":"UDP component in the GoFrame framework, implementing a simple unreliable information delivery service using gudp.Server and gudp.Conn for the UDP protocol. Provides example code on creating and running a UDP server, along with related API documentation links for reference."},"sidebar":"mainSidebar","previous":{"title":"TCP - Connection Pool","permalink":"/en/docs/components/network-gtcp-connection-pool"},"next":{"title":"UDP - Object","permalink":"/en/docs/components/network-gudp-conn"}}'),o=t("785893"),i=t("250065"),s=t("203105");let c={slug:"/docs/components/network-gudp",title:"UDP",sidebar_position:1,hide_title:!0,keywords:["GoFrame","UDP Component","UDP Protocol","Connectionless Protocol","gudp.Server","gudp.Conn","API Documentation","gudp Usage","NewServer","SetAddress"],description:"UDP component in the GoFrame framework, implementing a simple unreliable information delivery service using gudp.Server and gudp.Conn for the UDP protocol. Provides example code on creating and running a UDP server, along with related API documentation links for reference."},l=void 0,a={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Documentation",id:"documentation",level:2}];function u(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"UDP (User Datagram Protocol)"})," is a connectionless transport layer protocol that provides a simple unreliable information delivery service oriented towards transactions. The ",(0,o.jsx)(n.code,{children:"UDP"})," server is implemented through ",(0,o.jsx)(n.code,{children:"gudp.Server"}),", while the client is implemented using the ",(0,o.jsx)(n.code,{children:"gudp.ClientConn"})," object or utility methods."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Usage"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'import "github.com/gogf/gf/v2/net/gudp"\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"API Documentation"}),": ",(0,o.jsx)(n.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/net/gudp",children:"https://pkg.go.dev/github.com/gogf/gf/v2/net/gudp"})]}),"\n",(0,o.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n\n    "github.com/gogf/gf/v2/net/gudp"\n)\n\nfunc main() {\n    handler := func(conn *gudp.ServerConn) {\n        defer conn.Close()\n        for {\n            if data, addr, _ := conn.Recv(-1); len(data) > 0 {\n                fmt.Println(string(data), addr.String())\n            }\n        }\n    }\n    err := gudp.NewServer("127.0.0.1:8999", handler).Run()\n    if err != nil {\n        fmt.Println(err)\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"UDPServer"})," runs in a blocking manner. Users can perform concurrent processing in the custom callback function based on the read content."]}),"\n",(0,o.jsxs)(n.p,{children:["On ",(0,o.jsx)(n.code,{children:"Linux"}),", you can use the following command to send ",(0,o.jsx)(n.code,{children:"UDP"})," data to the server for testing, and then check whether there is output on the server side:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'echo "hello" > /dev/udp/127.0.0.1/8999\n'})}),"\n",(0,o.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n","\n",(0,o.jsx)(s.Z,{})]})}function p(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},203105:function(e,n,t){t.d(n,{Z:()=>v});var r=t("785893");t("667294");var o=t("467026"),i=t("96693"),s=t("531183"),c=t("633876"),l=t("266026"),a=t("434751"),d=t("58608");let u={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function p(e){let{href:n,children:t}=e;return(0,r.jsx)(s.Z,{href:n,className:(0,o.Z)("card padding--lg",u.cardContainer),children:t})}function m(e){let{href:n,icon:t,title:i,description:s}=e;return(0,r.jsxs)(p,{href:n,children:[(0,r.jsxs)(d.Z,{as:"h2",className:(0,o.Z)("text--truncate",u.cardTitle),title:i,children:[t," ",i]}),s&&(0,r.jsx)("p",{className:(0,o.Z)("text--truncate",u.cardDescription),title:s,children:s})]})}function g(e){let{item:n}=e,t=(0,i.LM)(n),o=function(){let{selectMessage:e}=(0,c.c)();return n=>e(n,(0,a.I)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return t?(0,r.jsx)(m,{href:t,icon:"\uD83D\uDDC3\uFE0F",title:n.label,description:n.description??o(n.items.length)}):null}function h(e){let{item:n}=e,t=(0,l.Z)(n.href)?"\uD83D\uDCC4\uFE0F":"\uD83D\uDD17",o=(0,i.xz)(n.docId??void 0);return(0,r.jsx)(m,{href:n.href,icon:t,title:n.label,description:n.description??o?.description})}function f(e){let{item:n}=e;switch(n.type){case"link":return(0,r.jsx)(h,{item:n});case"category":return(0,r.jsx)(g,{item:n});default:throw Error(`unknown item type ${JSON.stringify(n)}`)}}function x(e){let{className:n}=e,t=(0,i.jA)();return(0,r.jsx)(v,{items:t.items,className:n})}function v(e){let{items:n,className:t}=e;if(!n)return(0,r.jsx)(x,{...e});let s=(0,i.MN)(n);return(0,r.jsx)("section",{className:(0,o.Z)("row",t),children:s.map((e,n)=>(0,r.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,r.jsx)(f,{item:e})},n))})}},633876:function(e,n,t){t.d(n,{c:function(){return l}});var r=t(667294),o=t(49931);let i=["zero","one","two","few","many","other"];function s(e){return i.filter(n=>e.includes(n))}let c={locale:"en",pluralForms:s(["one","other"]),select:e=>1===e?"one":"other"};function l(){let e=function(){let{i18n:{currentLocale:e}}=(0,o.Z)();return(0,r.useMemo)(()=>{try{return function(e){let n=new Intl.PluralRules(e);return{locale:e,pluralForms:s(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".
Docusaurus will fallback to the default (English) implementation.
Error: ${n.message}
`),c}},[e])}();return{selectMessage:(n,t)=>(function(e,n,t){let r=e.split("|");if(1===r.length)return r[0];r.length>t.pluralForms.length&&console.error(`For locale=${t.locale}, a maximum of ${t.pluralForms.length} plural forms are expected (${t.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);let o=t.select(n);return r[Math.min(t.pluralForms.indexOf(o),r.length-1)]})(t,n,e)}}},250065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return s}});var r=t(667294);let o={},i=r.createContext(o);function s(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);