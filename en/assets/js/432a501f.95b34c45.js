"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["45143"],{270001:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>c,default:()=>g,assets:()=>a,toc:()=>l,frontMatter:()=>o});var t=JSON.parse('{"id":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1/ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406","title":"ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406","description":"\u81EA\u5B9A\u4E49\u56DE\u8C03\u5904\u7406\u662F\u6700\u5E38\u89C1\u7684\u63A5\u53E3\u5F00\u53D1\u5B9E\u73B0\uFF0C\u5F00\u53D1\u4E2D\u53EA\u9700\u8981\u5BF9\u63A5\u53E3\u4E2D\u7684\u90E8\u5206\u65B9\u6CD5\u8FDB\u884C\u66FF\u6362\u4E0E\u4FEE\u6539\uFF0C\u5728\u9A71\u52A8\u9ED8\u8BA4\u5B9E\u73B0\u903B\u8F91\u4E2D\u6CE8\u5165\u81EA\u5B9A\u4E49\u903B\u8F91\u3002\u6240\u6709\u7684 SQL \u8BED\u53E5\u6267\u884C\u5FC5\u5B9A\u4F1A\u901A\u8FC7 DoQuery \u6216\u8005 DoExec \u6216\u8005 DoFilter \u63A5\u53E3\uFF0C\u6839\u636E\u9700\u6C42\u5728\u81EA\u5B9A\u4E49\u7684\u9A71\u52A8\u4E2D\u5B9E\u73B0\u5E76\u8986\u76D6\u76F8\u5173\u63A5\u53E3\u65B9\u6CD5\u5B9E\u73B0\u6240\u9700\u529F\u80FD\u5373\u53EF\u3002","source":"@site/versioned_docs/version-2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1/ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406.md","sourceDirName":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1","slug":"/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1/ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406","permalink":"/en/2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1/ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1/ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406.md","tags":[],"version":"2.1.x","lastUpdatedBy":"John","lastUpdatedAt":1730365530000,"sidebarPosition":0,"frontMatter":{"title":"ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406","sidebar_position":0,"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"ORM\u63A5\u53E3\u5F00\u53D1","permalink":"/en/2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1/"},"next":{"title":"ORM\u63A5\u53E3\u5F00\u53D1-\u9A71\u52A8\u5F00\u53D1","permalink":"/en/2.1.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u5E93ORM/ORM\u63A5\u53E3\u5F00\u53D1/ORM\u63A5\u53E3\u5F00\u53D1-\u9A71\u52A8\u5F00\u53D1"}}'),i=r("785893"),s=r("250065");let o={title:"ORM\u63A5\u53E3\u5F00\u53D1-\u56DE\u8C03\u5904\u7406",sidebar_position:0,hide_title:!0},c=void 0,a={},l=[];function d(e){let n={a:"a",code:"code",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["\u81EA\u5B9A\u4E49\u56DE\u8C03\u5904\u7406\u662F\u6700\u5E38\u89C1\u7684\u63A5\u53E3\u5F00\u53D1\u5B9E\u73B0\uFF0C\u5F00\u53D1\u4E2D\u53EA\u9700\u8981\u5BF9\u63A5\u53E3\u4E2D\u7684\u90E8\u5206\u65B9\u6CD5\u8FDB\u884C\u66FF\u6362\u4E0E\u4FEE\u6539\uFF0C\u5728\u9A71\u52A8\u9ED8\u8BA4\u5B9E\u73B0\u903B\u8F91\u4E2D\u6CE8\u5165\u81EA\u5B9A\u4E49\u903B\u8F91\u3002\u6240\u6709\u7684 ",(0,i.jsx)(n.code,{children:"SQL"})," \u8BED\u53E5\u6267\u884C\u5FC5\u5B9A\u4F1A\u901A\u8FC7 ",(0,i.jsx)(n.code,{children:"DoQuery"})," \u6216\u8005 ",(0,i.jsx)(n.code,{children:"DoExec"})," \u6216\u8005 ",(0,i.jsx)(n.code,{children:"DoFilter"})," \u63A5\u53E3\uFF0C\u6839\u636E\u9700\u6C42\u5728\u81EA\u5B9A\u4E49\u7684\u9A71\u52A8\u4E2D\u5B9E\u73B0\u5E76\u8986\u76D6\u76F8\u5173\u63A5\u53E3\u65B9\u6CD5\u5B9E\u73B0\u6240\u9700\u529F\u80FD\u5373\u53EF\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u81EA\u5B9A\u4E49\u56DE\u8C03\u5904\u7406\u7684\u793A\u4F8B\uFF0C\u73B0\u9700\u8981\u5C06\u6240\u6709\u6267\u884C\u7684 ",(0,i.jsx)(n.code,{children:"SQL"})," \u8BED\u53E5\u8BB0\u5F55\u5230 ",(0,i.jsx)(n.code,{children:"monitor"})," \u8868\u4E2D\uFF0C\u4EE5\u65B9\u4FBF\u4E8E\u8FDB\u884C ",(0,i.jsx)(n.code,{children:"SQL"})," \u5BA1\u8BA1\u3002\u4E3A\u7B80\u5316\u793A\u4F8B\u7F16\u5199\uFF0C\u4EE5\u4E0B\u4EE3\u7801\u5B9E\u73B0\u4E86\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684 ",(0,i.jsx)(n.code,{children:"MySQL"})," \u9A71\u52A8\uFF0C\u8BE5\u9A71\u52A8\u7EE7\u627F\u4E8E ",(0,i.jsx)(n.code,{children:"drivers"})," \u4E0B ",(0,i.jsx)(n.code,{children:"mysql"})," \u6A21\u5757\u5185\u5DF2\u7ECF\u5B9E\u73B0\u7684 ",(0,i.jsx)(n.code,{children:"DriverMysql"}),"\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u81EA2.1.0\u7248\u672C\u4E4B\u540E,ORM\u9A71\u52A8\u6A21\u5757\u72EC\u7ACB\uFF0C\u9700\u8981\u5F00\u53D1\u8005\u624B\u52A8\u5F15\u5165\u81F3\u9879\u76EE\u5185\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u4EE5mysql\u4E3A\u4F8B\uFF0C\u9700\u5F15\u5165 ",(0,i.jsx)(n.a,{href:"http://github.com/gogf/gf/contrib/drivers/mysql/v2",children:"github.com/gogf/gf/contrib/drivers/mysql/v2"})," \u81F3go.mod\uFF0C\u5E76\u5BFC\u5165\u5230\u9879\u76EE\u4E2D\u4F7F\u7528\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5176\u5B83\u9A71\u52A8\u8BE6\u7EC6\u8BF7\u81F3\xa0",(0,i.jsx)(n.a,{href:"https://github.com/gogf/gf/tree/master/contrib/drivers",children:"https://github.com/gogf/gf/tree/master/contrib/drivers"})," \u67E5\u770B\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package driver\n\nimport (\n    "context"\n    "database/sql"\n    "github.com/gogf/gf/contrib/drivers/mysql/v2"\n    "github.com/gogf/gf/v2/database/gdb"\n    "github.com/gogf/gf/v2/os/gtime"\n    "github.com/gogf/gf/v2/text/gstr"\n    "github.com/gogf/gf/v2/util/gconv"\n    "strconv"\n)\n\n// MyDriver is a custom database driver, which is used for testing only.\n// For simplifying the unit testing case purpose, MyDriver struct inherits the mysql driver\n// gdb.DriverMysql and overwrites its functions DoQuery and DoExec.\n// So if there\'s any sql execution, it goes through MyDriver.DoQuery/MyDriver.DoExec firstly\n// and then gdb.DriverMysql.DoQuery/gdb.DriverMysql.DoExec.\n// You can call it sql "HOOK" or "HiJack" as your will.\ntype MyDriver struct {\n    *mysql.DriverMysql\n}\n\nvar (\n    // customDriverName is my driver name, which is used for registering.\n    customDriverName = "MyDriver"\n)\n\nfunc init() {\n    // It here registers my custom driver in package initialization function "init".\n    // You can later use this type in the database configuration.\n    if err := gdb.Register(customDriverName, &MyDriver{}); err != nil {\n        panic(err)\n    }\n}\n\n// New creates and returns a database object for mysql.\n// It implements the interface of gdb.Driver for extra database driver installation.\nfunc (d *MyDriver) New(core *gdb.Core, node *gdb.ConfigNode) (gdb.DB, error) {\n    return &MyDriver{\n        &mysql.DriverMysql{\n            Core: core,\n        },\n    }, nil\n}\n\n// DoQuery commits the sql string and its arguments to underlying driver\n// through given link object and returns the execution result.\nfunc (d *MyDriver) DoQuery(ctx context.Context, link gdb.Link, sql string, args ...interface{}) (rows gdb.Result, err error) {\n    tsMilli := gtime.TimestampMilli()\n    rows, err = d.DriverMysql.DoQuery(ctx, link, sql, args...)\n    _, _ = link.ExecContext(ctx,\n        "INSERT INTO `monitor`(`sql`,`cost`,`time`,`error`) VALUES(?,?,?,?)",\n        gdb.FormatSqlWithArgs(sql, args),\n        gtime.TimestampMilli()-tsMilli,\n        gtime.Now(),\n        err,\n    )\n    return\n}\n\n// DoExec commits the query string and its arguments to underlying driver\n// through given link object and returns the execution result.\nfunc (d *MyDriver) DoExec(ctx context.Context, link gdb.Link, sql string, args ...interface{}) (result sql.Result, err error) {\n    tsMilli := gtime.TimestampMilli()\n    result, err = d.DriverMysql.DoExec(ctx, link, sql, args...)\n    _, _ = link.ExecContext(ctx,\n        "INSERT INTO `monitor`(`sql`,`cost`,`time`,`error`) VALUES(?,?,?,?)",\n        gdb.FormatSqlWithArgs(sql, args),\n        gtime.TimestampMilli()-tsMilli,\n        gtime.Now(),\n        err,\n    )\n    return\n}\n\n// DoFilter is a hook function, which filters the sql and its arguments before it\'s committed to underlying driver.\n// The parameter `link` specifies the current database connection operation object. You can modify the sql\n// string `sql` and its arguments `args` as you wish before they\'re committed to driver.\nfunc (d *MyDriver) DoFilter(ctx context.Context, link gdb.Link, sql string, args []interface{}) (newSql string, newArgs []interface{}, err error) {\n    //Filter sql Step1\n    sql_new := gstr.Replace(sql, "\\n", "")\n\n    //Filter sql Step2\n    sql_new = gstr.Replace(sql_new, "\\t", "")\n    //... Filter what you want ...\n\n    //Filter args Step1\n    for _, v := range args {\n        switch v.(type) {\n        case gdb.Map:\n            //Do it what you wan\n        case string:\n            //Do it what you wan\n        }\n    }\n    return sql_new, args, nil\n}\n\n// ConvertDataForRecord is a very important function, which does converting for any data that\n// will be inserted into table/collection as a record.\n//\n// The parameter `value` should be type of *map/map/*struct/struct.\n// It supports embedded struct definition for struct.\nfunc (d *MyDriver) ConvertDataForRecord(ctx context.Context, data interface{}) (map[string]interface{}, error) {\n    //this hook is convert data to map[string]interface{}\n    result := make(map[string]interface{}, 0)\n\n    //like this\n    switch data.(type) {\n    case gdb.Map:\n        result = gconv.Map(data)\n    case gdb.List:\n        for k, v := range data.(gdb.List) {\n            result[strconv.Itoa(k)] = gconv.Map(v)\n        }\n        //case other type,do it what you want\n    }\n    return result, nil\n}\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u6211\u4EEC\u770B\u5230\uFF0C\u8FD9\u91CC\u5728\u5305\u521D\u59CB\u5316\u65B9\u6CD5 ",(0,i.jsx)(n.code,{children:"init"})," \u4E2D\u4F7F\u7528\u4E86 ",(0,i.jsx)(n.code,{children:'gdb.Register("MyDriver", &MyDriver{})'})," \u6765\u6CE8\u518C\u4E86\u4E86\u4E00\u4E2A\u81EA\u5B9A\u4E49\u540D\u79F0\u7684\u9A71\u52A8\u3002\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7 ",(0,i.jsx)(n.code,{children:'gdb.Register("mysql", &MyDriver{})'})," \u6765\u8986\u76D6\u5DF2\u6709\u7684\u6846\u67B6 ",(0,i.jsx)(n.code,{children:"mysql"})," \u9A71\u52A8\u4E3A\u81EA\u5DF1\u7684\u9A71\u52A8\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u9A71\u52A8\u540D\u79F0 ",(0,i.jsx)(n.code,{children:"mysql"})," \u4E3A\u6846\u67B6\u9ED8\u8BA4\u7684 ",(0,i.jsx)(n.code,{children:"DriverMysql"})," \u9A71\u52A8\u7684\u540D\u79F0\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u7531\u4E8E\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528\u4E86\u4E00\u4E2A\u65B0\u7684\u9A71\u52A8\u540D\u79F0 ",(0,i.jsx)(n.code,{children:"MyDriver"}),"\uFF0C\u56E0\u6B64\u5728 ",(0,i.jsx)(n.code,{children:"gdb"})," \u914D\u7F6E\u4E2D\u7684 ",(0,i.jsx)(n.code,{children:"type"})," \u6570\u636E\u5E93\u7C7B\u578B\u65F6\uFF0C\u9700\u8981\u586B\u5199\u8BE5\u9A71\u52A8\u540D\u79F0\u3002\u4EE5\u4E0B\u662F\u4E00\u4E2A\u4F7F\u7528\u914D\u7F6E\u7684\u793A\u4F8B\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'database:\n  default:\n  - link: "MyDriver:root:12345678@tcp(127.0.0.1:3306)/user"\n'})})]})}function g(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return o}});var t=r(667294);let i={},s=t.createContext(i);function o(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);