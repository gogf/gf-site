"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["89005"],{90131:function(e,n,t){t.r(n),t.d(n,{metadata:()=>o,contentTitle:()=>l,default:()=>u,assets:()=>s,toc:()=>g,frontMatter:()=>a});var o=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6-Flags\u7279\u6027","title":"Logging - Flags","description":"Flags feature of the log component in the GoFrame framework, explaining how to control additional log output features through different constant combinations, including asynchronous output, call line number information printing, and various time format selections. These features enable developers to achieve more flexible logging and debugging.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6-Flags\u7279\u6027.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6","slug":"/docs/core/glog-flags","permalink":"/en/docs/core/glog-flags","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6-Flags\u7279\u6027.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732440306000,"sidebarPosition":12,"frontMatter":{"slug":"/docs/core/glog-flags","title":"Logging - Flags","sidebar_position":12,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","glog","Log Component","Flags Feature","Asynchronous Log Output","Line Number Information","Time Format","Date and Time","Milliseconds"],"description":"Flags feature of the log component in the GoFrame framework, explaining how to control additional log output features through different constant combinations, including asynchronous output, call line number information printing, and various time format selections. These features enable developers to achieve more flexible logging and debugging."},"sidebar":"mainSidebar","previous":{"title":"Logging - Writer Interface","permalink":"/en/docs/core/glog-writer"},"next":{"title":"Logging - Rotatation","permalink":"/en/docs/core/glog-rotate"}}'),i=t("785893"),r=t("250065");let a={slug:"/docs/core/glog-flags",title:"Logging - Flags",sidebar_position:12,hide_title:!0,keywords:["GoFrame","GoFrame Framework","glog","Log Component","Flags Feature","Asynchronous Log Output","Line Number Information","Time Format","Date and Time","Milliseconds"],description:"Flags feature of the log component in the GoFrame framework, explaining how to control additional log output features through different constant combinations, including asynchronous output, call line number information printing, and various time format selections. These features enable developers to achieve more flexible logging and debugging."},l=void 0,s={},g=[];function c(e){let n={code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"flags"})," are used to control the additional feature switches of the log component. These properties are controlled by combining constants, including:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"F_ASYNC      = 1 << iota // Enable asynchronous log output\nF_FILE_LONG              // Print call line number information with a full absolute path, e.g., /a/b/c/d.go:23\nF_FILE_SHORT             // Print call line number information, only the file name, e.g., d.go:23, overrides F_FILE_LONG.\nF_TIME_DATE              // Print the current date, e.g., 2009-01-23\nF_TIME_TIME              // Print the current time, e.g., 01:23:23\nF_TIME_MILLI             // Print the current time + milliseconds, e.g., 01:23:23.675\nF_TIME_STD = F_TIME_DATE | F_TIME_MILLI // (Default) Print the current date + time + milliseconds, e.g., 2009-01-23 01:23:23.675\n"})}),"\n",(0,i.jsx)(n.p,{children:"Usage example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "github.com/gogf/gf/v2/os/glog"\n)\n\nfunc main() {\n    ctx := context.TODO()\n    l := glog.New()\n    l.SetFlags(glog.F_TIME_TIME | glog.F_FILE_SHORT)\n    l.Print(ctx, "time and short line number")\n    l.SetFlags(glog.F_TIME_MILLI | glog.F_FILE_LONG)\n    l.Print(ctx, "time with millisecond and long line number")\n    l.SetFlags(glog.F_TIME_STD | glog.F_FILE_LONG)\n    l.Print(ctx, "standard time format and long line number")\n}\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"After execution, the terminal output is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"PS C:\\hailaz\\test> go run .\\main.go\n16:05:35 main.go:13: time and short line number\n16:05:35.108 C:/hailaz/test/main.go:15: time with millisecond and long line number\n2022-01-05 16:05:35.109 C:/hailaz/test/main.go:17: standard time format and long line number\n\n"})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return a}});var o=t(667294);let i={},r=o.createContext(i);function a(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);