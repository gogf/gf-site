"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["3220"],{660883:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>a,default:()=>l,assets:()=>u,toc:()=>d,frontMatter:()=>i});var t=JSON.parse('{"id":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u6570\u636E\u8FD4\u56DE/\u6570\u636E\u8FD4\u56DE-\u7F13\u51B2\u63A7\u5236","title":"Response - Buffering","description":"How to achieve data response buffering control in the GoFrame framework. Using a buffer can improve execution efficiency and provide more flexible output control. Example code demonstrates how to handle return data uniformly through middleware, avoiding direct exposure of error messages to clients, and providing customized error message prompts.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/WEB\u670D\u52A1\u5F00\u53D1/\u6570\u636E\u8FD4\u56DE/\u6570\u636E\u8FD4\u56DE-\u7F13\u51B2\u63A7\u5236.md","sourceDirName":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u6570\u636E\u8FD4\u56DE","slug":"/docs/web/response-buffering","permalink":"/en/docs/web/response-buffering","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/WEB\u670D\u52A1\u5F00\u53D1/\u6570\u636E\u8FD4\u56DE/\u6570\u636E\u8FD4\u56DE-\u7F13\u51B2\u63A7\u5236.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732451468000,"sidebarPosition":0,"frontMatter":{"slug":"/docs/web/response-buffering","title":"Response - Buffering","sidebar_position":0,"hide_title":true,"keywords":["GoFrame Framework","Response Buffering","Go Language","Service Efficiency","Output Control","Buffer","Error Handling","Middleware","Data Processing","Response Output"],"description":"How to achieve data response buffering control in the GoFrame framework. Using a buffer can improve execution efficiency and provide more flexible output control. Example code demonstrates how to handle return data uniformly through middleware, avoiding direct exposure of error messages to clients, and providing customized error message prompts."},"sidebar":"mainSidebar","previous":{"title":"Response","permalink":"/en/docs/web/response"},"next":{"title":"Response - JSON/XML","permalink":"/en/docs/web/response-json-xml"}}'),o=r("785893"),s=r("250065");let i={slug:"/docs/web/response-buffering",title:"Response - Buffering",sidebar_position:0,hide_title:!0,keywords:["GoFrame Framework","Response Buffering","Go Language","Service Efficiency","Output Control","Buffer","Error Handling","Middleware","Data Processing","Response Output"],description:"How to achieve data response buffering control in the GoFrame framework. Using a buffer can improve execution efficiency and provide more flexible output control. Example code demonstrates how to handle return data uniformly through middleware, avoiding direct exposure of error messages to clients, and providing customized error message prompts."},a=void 0,u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Usage Example",id:"usage-example",level:2}];function c(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Response"})," output employs buffer control, where the output content is pre-written to a buffer and only truly outputted to the client after the service method execution is completed. This feature not only improves execution efficiency but also provides greater flexibility in controlling output content."]}),"\n",(0,o.jsx)(n.p,{children:"Relevant methods:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"func (r *Response) Buffer() []byte\nfunc (r *Response) BufferLength() int\nfunc (r *Response) BufferString() string\nfunc (r *Response) Flush()\nfunc (r *Response) SetBuffer(data []byte)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,o.jsx)(n.p,{children:"We handle the returned data uniformly through a post middleware. If a service method generates an exception, sensitive error information should not be pushed to the client; instead, a standard error message should be set."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n    "net/http"\n)\n\nfunc MiddlewareErrorHandler(r *ghttp.Request) {\n    r.Middleware.Next()\n    if r.Response.Status >= http.StatusInternalServerError {\n        r.Response.ClearBuffer()\n        r.Response.Writeln("The server is currently experiencing issues, please try again later!")\n    }\n}\n\nfunc main() {\n    s := g.Server()\n    s.Group("/api.v2", func(group *ghttp.RouterGroup) {\n        group.Middleware(MiddlewareErrorHandler)\n        group.ALL("/user/list", func(r *ghttp.Request) {\n            panic("db error: sql is xxxxxxx")\n        })\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Visiting ",(0,o.jsx)(n.a,{href:"http://127.0.0.1:8199/api.v2/user/list",children:"http://127.0.0.1:8199/api.v2/user/list"}),", you will see the page outputs:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"The server is currently experiencing issues, please try again later!\n"})})]})}function l(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return a},a:function(){return i}});var t=r(667294);let o={},s=t.createContext(o);function i(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);