"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["42378"],{838518:function(e,n,o){o.r(n),o.d(n,{metadata:()=>t,contentTitle:()=>a,default:()=>u,assets:()=>c,toc:()=>d,frontMatter:()=>i});var t=JSON.parse('{"id":"course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406/3.1.\u524D\u7F6E\u8BF4\u660E","title":"3.1 Preface","description":"We need to implement user session management functions, including login and user information retrieval. JWT is a modern solution for user authentication, transmitted through HTTP headers, not relying on Cookies and supporting cross-domain. JWT consists of Header, Payload, and Signature and is widely used in frontend-backend separation projects.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406/3.1.\u524D\u7F6E\u8BF4\u660E.md","sourceDirName":"course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406","slug":"/course/starbook/session-overview","permalink":"/en/course/starbook/session-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406/3.1.\u524D\u7F6E\u8BF4\u660E.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732458699000,"frontMatter":{"title":"3.1 Preface","hide_title":true,"slug":"/course/starbook/session-overview","keywords":["GoFrame","User Session Management","JWT","HTTP Stateless Protocol","Cookie","Json Web Token","golang-jwt","User Login","Authentication","Local Storage"],"description":"We need to implement user session management functions, including login and user information retrieval. JWT is a modern solution for user authentication, transmitted through HTTP headers, not relying on Cookies and supporting cross-domain. JWT consists of Header, Payload, and Signature and is widely used in frontend-backend separation projects."},"sidebar":"courseStarBookSidebar","previous":{"title":"Chapter 3 - Session Management","permalink":"/en/course/starbook/session"},"next":{"title":"3.2 Login","permalink":"/en/course/starbook/session-login"}}'),s=o("785893"),r=o("250065");let i={title:"3.1 Preface",hide_title:!0,slug:"/course/starbook/session-overview",keywords:["GoFrame","User Session Management","JWT","HTTP Stateless Protocol","Cookie","Json Web Token","golang-jwt","User Login","Authentication","Local Storage"],description:"We need to implement user session management functions, including login and user information retrieval. JWT is a modern solution for user authentication, transmitted through HTTP headers, not relying on Cookies and supporting cross-domain. JWT consists of Header, Payload, and Signature and is widely used in frontend-backend separation projects."},a=void 0,c={},d=[{value:"Introduction to JWT",id:"introduction-to-jwt",level:2},{value:"Install golang-jwt",id:"install-golang-jwt",level:2}];function l(e){let n={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"In this chapter, we need to complete the user session management functions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Login;"}),"\n",(0,s.jsx)(n.li,{children:"Retrieve user information."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"introduction-to-jwt",children:"Introduction to JWT"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"HTTP"})," is a stateless protocol, meaning every request is independent with no contextual relationship. This requires a mechanism to preserve user state information, and ",(0,s.jsx)(n.code,{children:"Cookie"})," is one of such solutions. ",(0,s.jsx)(n.code,{children:"Cookies"})," are small pieces of data stored in the user's browser that can be sent to the server in subsequent requests to maintain session state. However, ",(0,s.jsx)(n.code,{children:"Cookies"})," have some limitations, such as cross-domain issues and security concerns. In contrast, ",(0,s.jsx)(n.code,{children:"JWT"})," is a more modern solution that can be transmitted through the ",(0,s.jsx)(n.code,{children:"HTTP"})," header without relying on ",(0,s.jsx)(n.code,{children:"Cookies"})," and offers better cross-domain support and security."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"JWT"}),", or ",(0,s.jsx)(n.code,{children:"Json Web Token"}),", appears as a string of unordered characters. It consists of three parts: Header, Payload, and Signature."]}),"\n",(0,s.jsxs)(n.p,{children:["In projects with frontend-backend separation, after a user logs in, the server generates a ",(0,s.jsx)(n.code,{children:"JWT"})," and returns it. The client saves it independently, for example, in the browser's local storage ",(0,s.jsx)(n.code,{children:"Local Storage"}),". In subsequent requests, it is typically included in the ",(0,s.jsx)(n.code,{children:"Authorization"})," field of the ",(0,s.jsx)(n.code,{children:"Header"})," to complete user authentication."]}),"\n",(0,s.jsx)(n.h2,{id:"install-golang-jwt",children:"Install golang-jwt"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["Generating and verifying ",(0,s.jsx)(n.code,{children:"JWT"})," requires complex encryption and decryption logic, which can be cumbersome to write yourself. Fortunately, others have already created this tool, and you can directly install and use it."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ go get -u github.com/golang-jwt/jwt/v5\n"})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},250065:function(e,n,o){o.d(n,{Z:function(){return a},a:function(){return i}});var t=o(667294);let s={},r=t.createContext(s);function i(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);