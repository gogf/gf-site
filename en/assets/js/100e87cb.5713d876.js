"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["4777"],{535974:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>t,default:()=>u,assets:()=>a,toc:()=>c,frontMatter:()=>s});var i=JSON.parse('{"id":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219","title":"\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219","description":"GoFrame \u6846\u67B6\u6821\u9A8C\u7EC4\u4EF6\u5185\u7F6E\u4E86\u6570\u5341\u9879\u5E38\u7528\u7684\u6821\u9A8C\u89C4\u5219\uFF0C\u6821\u9A8C\u7EC4\u4EF6\u662F\u5F00\u53D1\u8005\u6700\u9891\u7E41\u4F7F\u7528\u7684\u6846\u67B6\u6838\u5FC3\u7EC4\u4EF6\u4E4B\u4E00\u3002","source":"@site/versioned_docs/version-2.4.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219.md","sourceDirName":"\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C","slug":"/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219","permalink":"/en/2.4.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-2.4.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219.md","tags":[],"version":"2.4.x","lastUpdatedBy":"John","lastUpdatedAt":1730727129000,"sidebarPosition":0,"frontMatter":{"title":"\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219","sidebar_position":0,"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"\u6570\u636E\u6821\u9A8C","permalink":"/en/2.4.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C/"},"next":{"title":"\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u5BF9\u8C61","permalink":"/en/2.4.x/\u6838\u5FC3\u7EC4\u4EF6-\u91CD\u70B9/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u5BF9\u8C61"}}'),l=r("785893"),d=r("250065");let s={title:"\u6570\u636E\u6821\u9A8C-\u6821\u9A8C\u89C4\u5219",sidebar_position:0,hide_title:!0},t=void 0,a={},c=[{value:"\u4FEE\u9970\u89C4\u5219",id:"\u4FEE\u9970\u89C4\u5219",level:2},{value:"bail",id:"bail",level:3},{value:"<code>ci</code>",id:"ci",level:3},{value:"<code>foreach</code>",id:"foreach",level:3},{value:"\u529F\u80FD\u89C4\u5219",id:"\u529F\u80FD\u89C4\u5219",level:2},{value:"<code>required</code>",id:"required",level:3},{value:"<code>required-if</code>",id:"required-if",level:3},{value:"<code>required-unless</code>",id:"required-unless",level:3},{value:"<code>required-with</code>",id:"required-with",level:3},{value:"<code>required-with-all</code>",id:"required-with-all",level:3},{value:"<code>required-without</code>",id:"required-without",level:3},{value:"<code>required-without-all</code>",id:"required-without-all",level:3},{value:"<code>date</code>",id:"date",level:3},{value:"<code>datetime</code>",id:"datetime",level:3},{value:"<code>date-format</code>",id:"date-format",level:3},{value:"<code>before</code>",id:"before",level:3},{value:"<code>before-equal</code>",id:"before-equal",level:3},{value:"<code>after</code>",id:"after",level:3},{value:"<code>after-equal</code>",id:"after-equal",level:3},{value:"<code>array</code>",id:"array",level:3},{value:"<code>email</code>",id:"email",level:3},{value:"<code>phone</code>",id:"phone",level:3},{value:"<code>phone-loose</code>",id:"phone-loose",level:3},{value:"<code>telephone</code>",id:"telephone",level:3},{value:"<code>passport</code>",id:"passport",level:3},{value:"<code>password</code>",id:"password",level:3},{value:"<code>password2</code>",id:"password2",level:3},{value:"<code>password3</code>",id:"password3",level:3},{value:"<code>postcode</code>",id:"postcode",level:3},{value:"<code>resident-id</code>",id:"resident-id",level:3},{value:"<code>bank-card</code>",id:"bank-card",level:3},{value:"<code>qq</code>",id:"qq",level:3},{value:"<code>ip</code>",id:"ip",level:3},{value:"<code>ipv4</code>",id:"ipv4",level:3},{value:"<code>ipv6</code>",id:"ipv6",level:3},{value:"<code>mac</code>",id:"mac",level:3},{value:"<code>url</code>",id:"url",level:3},{value:"<code>domain</code>",id:"domain",level:3},{value:"<code>size</code>",id:"size",level:3},{value:"<code>length</code>",id:"length",level:3},{value:"<code>min-length</code>",id:"min-length",level:3},{value:"<code>max-length</code>",id:"max-length",level:3},{value:"<code>between</code>",id:"between",level:3},{value:"<code>min</code>",id:"min",level:3},{value:"<code>max</code>",id:"max",level:3},{value:"<code>json</code>",id:"json",level:3},{value:"<code>integer</code>",id:"integer",level:3},{value:"<code>float</code>",id:"float",level:3},{value:"<code>boolean</code>",id:"boolean",level:3},{value:"<code>same</code>",id:"same",level:3},{value:"<code>different</code>",id:"different",level:3},{value:"<code>eq</code>",id:"eq",level:3},{value:"<code>not-eq</code>",id:"not-eq",level:3},{value:"<code>gt</code>",id:"gt",level:3},{value:"<code>gte</code>",id:"gte",level:3},{value:"<code>lt</code>",id:"lt",level:3},{value:"<code>lte</code>",id:"lte",level:3},{value:"<code>in</code>",id:"in",level:3},{value:"<code>not-in</code>",id:"not-in",level:3},{value:"<code>regex</code>",id:"regex",level:3},{value:"<code>not-regex</code>",id:"not-regex",level:3}];function o(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"GoFrame"})," \u6846\u67B6\u6821\u9A8C\u7EC4\u4EF6\u5185\u7F6E\u4E86\u6570\u5341\u9879\u5E38\u7528\u7684\u6821\u9A8C\u89C4\u5219\uFF0C\u6821\u9A8C\u7EC4\u4EF6\u662F\u5F00\u53D1\u8005\u6700\u9891\u7E41\u4F7F\u7528\u7684\u6846\u67B6\u6838\u5FC3\u7EC4\u4EF6\u4E4B\u4E00\u3002"]}),"\n",(0,l.jsxs)(n.p,{children:["\u6821\u9A8C\u89C4\u5219\u6D89\u53CA\u5230\u8054\u5408\u6821\u9A8C\u7684\u573A\u666F\u65F6\uFF0C\u89C4\u5219\u4E2D\u5173\u8054\u7684 ",(0,l.jsx)(n.strong,{children:"\u53C2\u6570\u540D\u79F0"})," \u4F1A\u81EA\u52A8\u6309\u7167\u4E0D\u533A\u5206\u5927\u5C0F\u5199\u4E14\u5FFD\u7565\u7279\u6B8A\u5B57\u7B26\u7684\u5F62\u5F0F\u8FDB\u884C\u667A\u80FD\u5339\u914D\u3002\u4EE5\u4E0B\u793A\u4F8B\u4EE3\u7801\u4E2D\u6211\u4EEC\u5747\u91C7\u7528\u5E38\u7528\u7684\u7ED3\u6784\u4F53\u6821\u9A8C\u7684\u65B9\u5F0F\uFF0C\u7ED3\u6784\u4F53\u5C5E\u6027\u4E2D\u7684 ",(0,l.jsx)(n.code,{children:"v"})," \u6807\u7B7E\u6807\u8BC6 ",(0,l.jsx)(n.code,{children:"validation"})," \u7684\u7F29\u5199\uFF0C\u7528\u4E8E\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u7684\u6821\u9A8C\u89C4\u683C\u3002"]}),"\n",(0,l.jsx)(n.h2,{id:"\u4FEE\u9970\u89C4\u5219",children:"\u4FEE\u9970\u89C4\u5219"}),"\n",(0,l.jsx)(n.p,{children:"\u4FEE\u9970\u89C4\u5219\u672C\u8EAB\u4E0D\u505A\u4EFB\u4F55\u7684\u6821\u9A8C\u903B\u8F91\uFF0C\u800C\u662F\u4FEE\u6539\u529F\u80FD\u89C4\u5219\u7684\u5B9E\u73B0\u903B\u8F91\u3002"}),"\n",(0,l.jsx)(n.h3,{id:"bail",children:"bail"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F\uFF1A ",(0,l.jsx)(n.code,{children:"bail"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u53EA\u8981\u540E\u7EED\u7684\u591A\u4E2A\u6821\u9A8C\u4E2D\u6709\u4E00\u4E2A\u89C4\u5219\u6821\u9A8C\u5931\u8D25\u5219\u505C\u6B62\u6821\u9A8C\u5E76\u7ACB\u5373\u8FD4\u56DE\u6821\u9A8C\u7ED3\u679C\u3002"}),"\n",(0,l.jsxs)(n.li,{children:["\u6CE8\u610F\uFF1A\u5728\u6846\u67B6\u7684 ",(0,l.jsx)(n.code,{children:"HTTP Server"})," \u7EC4\u4EF6\u4E2D\uFF0C\u5982\u679C\u91C7\u7528\u89C4\u8303\u8DEF\u7531\u6CE8\u518C\u65B9\u5F0F\uFF0C\u5728\u5176\u81EA\u52A8\u6821\u9A8C\u7279\u6027\u4E2D\u5C06\u4F1A\u81EA\u52A8\u5F00\u542F ",(0,l.jsx)(n.code,{children:"bail"})," \u4FEE\u9970\u89C4\u5219\uFF0C\u5F00\u53D1\u8005\u65E0\u9700\u5728 ",(0,l.jsx)(n.code,{children:"Req"})," \u5BF9\u8C61\u4E2D\u663E\u5F0F\u8BBE\u7F6E ",(0,l.jsx)(n.code,{children:"bail"}),"\u3002"]}),"\n",(0,l.jsx)(n.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Bail() {\n      type BizReq struct {\n          Account   string `v:"bail|required|length:6,16|same:QQ"`\n          QQ        string\n          Password  string `v:"required|same:Password2"`\n          Password2 string `v:"required"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Account:   "gf",\n              QQ:        "123456",\n              Password:  "goframe.org",\n              Password2: "goframe.org",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // output:\n      // The Account value `gf` length must be between 6 and 16\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"ci",children:(0,l.jsx)(n.code,{children:"ci"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F\uFF1A ",(0,l.jsx)(n.code,{children:"ci"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5B57\u6BB5\u503C\u6BD4\u8F83\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E3A\u533A\u5206\u5927\u5C0F\u5199\u4E25\u683C\u5339\u914D\u6BD4\u8F83\uFF0C\u901A\u8FC7 ",(0,l.jsx)(n.code,{children:"Case Insensitive"}),"\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u5BF9\u4E8E\u9700\u8981\u6BD4\u8F83\u503C\u7684\u89C4\u5219\u5B57\u6BB5\u4E3A\u4E0D\u533A\u5206\u5927\u5C0F\u5199\u3002\u5982\uFF1A ",(0,l.jsx)(n.code,{children:"same"}),", ",(0,l.jsx)(n.code,{children:"different"}),", ",(0,l.jsx)(n.code,{children:"in"}),", ",(0,l.jsx)(n.code,{children:"not-in"})," \u7B49\u3002"]}),"\n",(0,l.jsx)(n.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_CaseInsensitive() {\n      type BizReq struct {\n          Account   string `v:"required"`\n          Password  string `v:"required|ci|same:Password2"`\n          Password2 string `v:"required"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Account:   "gf",\n              Password:  "Goframe.org", // Diff from Password2, but because of "ci", rule check passed\n              Password2: "goframe.org",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // output:\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"foreach",children:(0,l.jsx)(n.code,{children:"foreach"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F\uFF1A ",(0,l.jsx)(n.code,{children:"foreach"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5C06\u5F85\u68C0\u9A8C\u7684\u53C2\u6570\u4F5C\u4E3A\u6570\u7EC4\u904D\u5386\uFF0C\u5E76\u5C06\u540E\u4E00\u4E2A\u6821\u9A8C\u89C4\u5219\u5E94\u7528\u4E8E\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u9879\u3002"}),"\n",(0,l.jsxs)(n.li,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n",(0,l.jsx)(n.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Foreach() {\n      type BizReq struct {\n          Value1 []int `v:"foreach|in:1,2,3"`\n          Value2 []int `v:"foreach|in:1,2,3"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Value1: []int{1, 2, 3},\n              Value2: []int{3, 4, 5},\n          }\n      )\n      if err := g.Validator().Bail().Data(req).Run(ctx); err != nil {\n          fmt.Println(err.String())\n      }\n\n      // Output:\n      // The Value2 value `4` is not in acceptable range: 1,2,3\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"\u529F\u80FD\u89C4\u5219",children:"\u529F\u80FD\u89C4\u5219"}),"\n",(0,l.jsx)(n.p,{children:"\u529F\u80FD\u89C4\u5219\u5B9E\u73B0\u7279\u5B9A\u7684\u6821\u9A8C\u903B\u8F91\uFF0C\u6846\u67B6\u5185\u7F6E\u4E86\u975E\u5E38\u4E30\u5BCC\u5F3A\u5927\u7684\u5185\u7F6E\u6821\u9A8C\u89C4\u5219\u3002"}),"\n",(0,l.jsx)(n.h3,{id:"required",children:(0,l.jsx)(n.code,{children:"required"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"required"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5FC5\u9700\u53C2\u6570\uFF0C\u9664\u4E86\u652F\u6301\u5E38\u89C1\u7684\u5B57\u7B26\u4E32\uFF0C\u4E5F\u652F\u6301 ",(0,l.jsx)(n.code,{children:"Slice/Map"})," \u7C7B\u578B\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u59D3\u540D\u5B57\u6BB5 ",(0,l.jsx)(n.code,{children:"Name"})," \u4E3A\u5FC5\u9700\u53C2\u6570\u5FC5\u9700\u4E0D\u80FD\u4E3A\u7A7A\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Required() {\n      type BizReq struct {\n          ID   uint   `v:"required"`\n          Name string `v:"required"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID: 1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The Name field is required\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"required-if",children:(0,l.jsx)(n.code,{children:"required-if"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"required-if:field,value,..."})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5FC5\u9700\u53C2\u6570(\u5F53\u4EFB\u610F\u6240\u7ED9\u5B9A\u5B57\u6BB5\u503C\u4E0E\u6240\u7ED9\u503C\u76F8\u7B49\u65F6\uFF0C\u5373\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"field"})," \u5B57\u6BB5\u7684\u503C\u4E3A ",(0,l.jsx)(n.code,{children:"value"})," \u65F6\uFF0C\u5F53\u524D\u9A8C\u8BC1\u5B57\u6BB5\u4E3A\u5FC5\u987B\u53C2\u6570)\u3002\u591A\u4E2A\u5B57\u6BB5\u4EE5 ",(0,l.jsx)(n.code,{children:","})," \u53F7\u5206\u9694\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"Gender"})," \u5B57\u6BB5\u4E3A ",(0,l.jsx)(n.code,{children:"1"})," \u65F6 ",(0,l.jsx)(n.code,{children:"WifeName"})," \u5B57\u6BB5\u5FC5\u987B\u4E0D\u4E3A\u7A7A\uFF0C \u5F53 ",(0,l.jsx)(n.code,{children:"Gender"})," \u5B57\u6BB5\u4E3A ",(0,l.jsx)(n.code,{children:"2"})," \u65F6 ",(0,l.jsx)(n.code,{children:"HusbandName"})," \u5B57\u6BB5\u5FC5\u987B\u4E0D\u4E3A\u7A7A\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_RequiredIf() {\n      type BizReq struct {\n          ID          uint   `v:"required" dc:"Your ID"`\n          Name        string `v:"required" dc:"Your name"`\n          Gender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n          WifeName    string `v:"required-if:gender,1"`\n          HusbandName string `v:"required-if:gender,2"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID:     1,\n              Name:   "test",\n              Gender: 1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The WifeName field is required\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"required-unless",children:(0,l.jsx)(n.code,{children:"required-unless"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"required-unless:field,value,..."})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5FC5\u9700\u53C2\u6570(\u5F53\u6240\u7ED9\u5B9A\u5B57\u6BB5\u503C\u4E0E\u6240\u7ED9\u503C\u90FD\u4E0D\u76F8\u7B49\u65F6\uFF0C\u5373\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"field"})," \u5B57\u6BB5\u7684\u503C\u4E0D\u4E3A ",(0,l.jsx)(n.code,{children:"value"})," \u65F6\uFF0C\u5F53\u524D\u9A8C\u8BC1\u5B57\u6BB5\u4E3A\u5FC5\u987B\u53C2\u6570)\u3002\u591A\u4E2A\u5B57\u6BB5\u4EE5 ",(0,l.jsx)(n.code,{children:","})," \u53F7\u5206\u9694\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"Gender"})," \u4E0D\u7B49\u4E8E ",(0,l.jsx)(n.code,{children:"0"})," \u4E14 ",(0,l.jsx)(n.code,{children:"Gender"})," \u4E0D\u7B49\u4E8E ",(0,l.jsx)(n.code,{children:"2"})," \u65F6\uFF0C ",(0,l.jsx)(n.code,{children:"WifeName"})," \u5FC5\u987B\u4E0D\u4E3A\u7A7A\uFF1B\u5F53 ",(0,l.jsx)(n.code,{children:"Id"})," \u4E0D\u7B49\u4E8E ",(0,l.jsx)(n.code,{children:"0"})," \u4E14 ",(0,l.jsx)(n.code,{children:"Gender"})," \u4E0D\u7B49\u4E8E ",(0,l.jsx)(n.code,{children:"2"})," \u65F6\uFF0C ",(0,l.jsx)(n.code,{children:"HusbandName"})," \u5FC5\u987B\u4E0D\u4E3A\u7A7A\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_RequiredUnless() {\n      type BizReq struct {\n          ID          uint   `v:"required" dc:"Your ID"`\n          Name        string `v:"required" dc:"Your name"`\n          Gender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n          WifeName    string `v:"required-unless:gender,0,gender,2"`\n          HusbandName string `v:"required-unless:id,0,gender,2"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID:     1,\n              Name:   "test",\n              Gender: 1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The WifeName field is required; The HusbandName field is required\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"required-with",children:(0,l.jsx)(n.code,{children:"required-with"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"required-with:field1,field2,..."})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5FC5\u9700\u53C2\u6570(\u5F53\u6240\u7ED9\u5B9A\u4EFB\u610F\u5B57\u6BB5\u503C\u5176\u4E2D\u4E4B\u4E00\u4E0D\u4E3A\u7A7A\u65F6)\u3002"}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"WifeName"})," \u4E0D\u4E3A\u7A7A\u65F6\uFF0C ",(0,l.jsx)(n.code,{children:"HusbandName"})," \u5FC5\u987B\u4E0D\u4E3A\u7A7A\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_RequiredWith() {\n      type BizReq struct {\n          ID          uint   `v:"required" dc:"Your ID"`\n          Name        string `v:"required" dc:"Your name"`\n          Gender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n          WifeName    string\n          HusbandName string `v:"required-with:WifeName"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID:       1,\n              Name:     "test",\n              Gender:   1,\n              WifeName: "Ann",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The HusbandName field is required\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"required-with-all",children:(0,l.jsx)(n.code,{children:"required-with-all"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"required-with-all:field1,field2,..."})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5FC5\u987B\u53C2\u6570(\u5F53\u6240\u7ED9\u5B9A\u6240\u6709\u5B57\u6BB5\u503C\u5168\u90E8\u90FD\u4E0D\u4E3A\u7A7A\u65F6)\u3002"}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"Id\uFF0CName\uFF0CGender\uFF0CWifeName"})," \u5168\u90E8\u4E0D\u4E3A\u7A7A\u65F6\uFF0C ",(0,l.jsx)(n.code,{children:"HusbandName"})," \u5FC5\u987B\u4E0D\u4E3A\u7A7A\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_RequiredWithAll() {\n      type BizReq struct {\n          ID          uint   `v:"required" dc:"Your ID"`\n          Name        string `v:"required" dc:"Your name"`\n          Gender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n          WifeName    string\n          HusbandName string `v:"required-with-all:Id,Name,Gender,WifeName"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID:       1,\n              Name:     "test",\n              Gender:   1,\n              WifeName: "Ann",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The HusbandName field is required\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"required-without",children:(0,l.jsx)(n.code,{children:"required-without"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"required-without:field1,field2,..."})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5FC5\u9700\u53C2\u6570(\u5F53\u6240\u7ED9\u5B9A\u4EFB\u610F\u5B57\u6BB5\u503C\u5176\u4E2D\u4E4B\u4E00\u4E3A\u7A7A\u65F6)\u3002"}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"Id"})," \u6216 ",(0,l.jsx)(n.code,{children:"WifeName"})," \u4E3A\u7A7A\u65F6\uFF0C ",(0,l.jsx)(n.code,{children:"HusbandName"})," \u5FC5\u987B\u4E0D\u4E3A\u7A7A\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_RequiredWithout() {\n      type BizReq struct {\n          ID          uint   `v:"required" dc:"Your ID"`\n          Name        string `v:"required" dc:"Your name"`\n          Gender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n          WifeName    string\n          HusbandName string `v:"required-without:Id,WifeName"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID:     1,\n              Name:   "test",\n              Gender: 1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The HusbandName field is required\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"required-without-all",children:(0,l.jsx)(n.code,{children:"required-without-all"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"required-without-all:field1,field2,..."})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5FC5\u987B\u53C2\u6570(\u5F53\u6240\u7ED9\u5B9A\u6240\u6709\u5B57\u6BB5\u503C\u5168\u90E8\u90FD\u4E3A\u7A7A\u65F6)\u3002"}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5F53 ",(0,l.jsx)(n.code,{children:"Id"})," \u548C ",(0,l.jsx)(n.code,{children:"WifeName"})," \u90FD\u4E3A\u7A7A\u65F6\uFF0C ",(0,l.jsx)(n.code,{children:"HusbandName"})," \u5FC5\u987B\u4E0D\u4E3A\u7A7A\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_RequiredWithoutAll() {\n      type BizReq struct {\n          ID          uint   `v:"required" dc:"Your ID"`\n          Name        string `v:"required" dc:"Your name"`\n          Gender      uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n          WifeName    string\n          HusbandName string `v:"required-without-all:Id,WifeName"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Name:   "test",\n              Gender: 1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The HusbandName field is required\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"date",children:(0,l.jsx)(n.code,{children:"date"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"date"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u4E3A\u5E38\u7528\u65E5\u671F\u7C7B\u578B\uFF0C\u65E5\u671F\u4E4B\u95F4\u652F\u6301\u7684\u8FDE\u63A5\u7B26\u53F7 ",(0,l.jsx)(n.code,{children:"-"})," \u6216 ",(0,l.jsx)(n.code,{children:"/"})," \u6216 ",(0,l.jsx)(n.code,{children:"."}),"\uFF0C\u4E5F\u652F\u6301\u4E0D\u5E26\u8FDE\u63A5\u7B26\u53F7\u7684 ",(0,l.jsx)(n.code,{children:"8"})," \u4F4D\u957F\u5EA6\u65E5\u671F\uFF0C\u683C\u5F0F\u5982\uFF1A ",(0,l.jsx)(n.code,{children:"2006-01-02"}),", ",(0,l.jsx)(n.code,{children:"2006/01/02"}),", ",(0,l.jsx)(n.code,{children:"2006.01.02"}),", ",(0,l.jsx)(n.code,{children:"20060102"})]}),"\n",(0,l.jsx)(n.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Date() {\n      type BizReq struct {\n          Date1 string `v:"date"`\n          Date2 string `v:"date"`\n          Date3 string `v:"date"`\n          Date4 string `v:"date"`\n          Date5 string `v:"date"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Date1: "2021-10-31",\n              Date2: "2021.10.31",\n              Date3: "2021-Oct-31",\n              Date4: "2021 Octa 31",\n              Date5: "2021/Oct/31",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Date3 value `2021-Oct-31` is not a valid date\n      // The Date4 value `2021 Octa 31` is not a valid date\n      // The Date5 value `2021/Oct/31` is not a valid date\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"datetime",children:(0,l.jsx)(n.code,{children:"datetime"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"datetime"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u4E3A\u5E38\u7528\u65E5\u671F\u65F6\u95F4\u7C7B\u578B\uFF0C\u5176\u4E2D\u65E5\u671F\u4E4B\u95F4\u652F\u6301\u7684\u8FDE\u63A5\u7B26\u53F7\u53EA\u652F\u6301 ",(0,l.jsx)(n.code,{children:"-"}),"\uFF0C\u683C\u5F0F\u5982\uFF1A ",(0,l.jsx)(n.code,{children:"2006-01-02 12:00:00"})]}),"\n",(0,l.jsx)(n.li,{children:"\u793A\u4F8B\uFF1A"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Datetime() {\n      type BizReq struct {\n          Date1 string `v:"datetime"`\n          Date2 string `v:"datetime"`\n          Date3 string `v:"datetime"`\n          Date4 string `v:"datetime"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Date1: "2021-11-01 23:00:00",\n              Date2: "2021-11-01 23:00",     // error\n              Date3: "2021/11/01 23:00:00",  // error\n              Date4: "2021/Dec/01 23:00:00", // error\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Date2 value `2021-11-01 23:00` is not a valid datetime\n      // The Date3 value `2021/11/01 23:00:00` is not a valid datetime\n      // The Date4 value `2021/Dec/01 23:00:00` is not a valid datetime\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"date-format",children:(0,l.jsx)(n.code,{children:"date-format"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"date-format:format"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5224\u65AD\u65E5\u671F\u662F\u5426\u4E3A\u6307\u5B9A\u7684\u65E5\u671F/\u65F6\u95F4\u683C\u5F0F\uFF0C ",(0,l.jsx)(n.code,{children:"format"})," \u53C2\u6570\u683C\u5F0F\u4E3A ",(0,l.jsx)(n.code,{children:"gtime"})," \u65E5\u671F\u683C\u5F0F(\u53EF\u4EE5\u5305\u542B\u65E5\u671F\u53CA\u65F6\u95F4)\uFF0C\u683C\u5F0F\u8BF4\u660E\u53C2\u8003\u7AE0\u8282\uFF1A ",(0,l.jsx)(n.a,{href:"https://wiki.goframe.org/pages/viewpage.action?pageId=1114883",children:"gtime\u6A21\u5757"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A ",(0,l.jsx)(n.code,{children:"date-format:Y-m-d H:i:s"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_DateFormat() {\n      type BizReq struct {\n          Date1 string `v:"date-format:Y-m-d"`\n          Date2 string `v:"date-format:Y-m-d"`\n          Date3 string `v:"date-format:Y-m-d H:i:s"`\n          Date4 string `v:"date-format:Y-m-d H:i:s"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Date1: "2021-11-01",\n              Date2: "2021-11-01 23:00", // error\n              Date3: "2021-11-01 23:00:00",\n              Date4: "2021-11-01 23:00", // error\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Date2 value `2021-11-01 23:00` does not match the format: Y-m-d\n      // The Date4 value `2021-11-01 23:00` does not match the format: Y-m-d H:i:s\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"before",children:(0,l.jsx)(n.code,{children:"before"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"before:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u5224\u65AD\u7ED9\u5B9A\u7684\u65E5\u671F/\u65F6\u95F4\u662F\u5426\u5728\u6307\u5B9A\u5B57\u6BB5\u7684\u65E5\u671F/\u65F6\u95F4\u4E4B\u524D\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Before() {\n      type BizReq struct {\n          Time1 string `v:"before:Time3"`\n          Time2 string `v:"before:Time3"`\n          Time3 string\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Time1: "2022-09-02",\n              Time2: "2022-09-03",\n              Time3: "2022-09-03",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err.String())\n      }\n\n      // Output:\n      // The Time2 value `2022-09-03` must be before field Time3 value `2022-09-03`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"before-equal",children:(0,l.jsx)(n.code,{children:"before-equal"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"before-equal:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u5224\u65AD\u7ED9\u5B9A\u7684\u65E5\u671F/\u65F6\u95F4\u662F\u5426\u5728\u6307\u5B9A\u5B57\u6BB5\u7684\u65E5\u671F/\u65F6\u95F4\u4E4B\u524D\uFF0C\u6216\u8005\u4E0E\u6307\u5B9A\u5B57\u6BB5\u7684\u65E5\u671F/\u65F6\u95F4\u76F8\u7B49\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_BeforeEqual() {\n      type BizReq struct {\n          Time1 string `v:"before-equal:Time3"`\n          Time2 string `v:"before-equal:Time3"`\n          Time3 string\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Time1: "2022-09-02",\n              Time2: "2022-09-01",\n              Time3: "2022-09-01",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Time1 value `2022-09-02` must be before or equal to field Time3\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"after",children:(0,l.jsx)(n.code,{children:"after"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"after:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u5224\u65AD\u7ED9\u5B9A\u7684\u65E5\u671F/\u65F6\u95F4\u662F\u5426\u5728\u6307\u5B9A\u5B57\u6BB5\u7684\u65E5\u671F/\u65F6\u95F4\u4E4B\u540E\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_After() {\n      type BizReq struct {\n          Time1 string\n          Time2 string `v:"after:Time1"`\n          Time3 string `v:"after:Time1"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Time1: "2022-09-01",\n              Time2: "2022-09-01",\n              Time3: "2022-09-02",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err.String())\n      }\n\n      // Output:\n      // The Time2 value `2022-09-01` must be after field Time1 value `2022-09-01`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"after-equal",children:(0,l.jsx)(n.code,{children:"after-equal"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"after-equal:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u5224\u65AD\u7ED9\u5B9A\u7684\u65E5\u671F/\u65F6\u95F4\u662F\u5426\u5728\u6307\u5B9A\u5B57\u6BB5\u7684\u65E5\u671F/\u65F6\u95F4\u4E4B\u540E\uFF0C\u6216\u8005\u4E0E\u6307\u5B9A\u5B57\u6BB5\u7684\u65E5\u671F/\u65F6\u95F4\u76F8\u7B49\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_AfterEqual() {\n      type BizReq struct {\n          Time1 string\n          Time2 string `v:"after-equal:Time1"`\n          Time3 string `v:"after-equal:Time1"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Time1: "2022-09-02",\n              Time2: "2022-09-01",\n              Time3: "2022-09-02",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Time2 value `2022-09-01` must be after or equal to field Time1 value `2022-09-02`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"array",children:(0,l.jsx)(n.code,{children:"array"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"array"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u8BF4\u660E\uFF1A\u5224\u65AD\u7ED9\u5B9A\u7684\u53C2\u6570\u662F\u5426\u6570\u7EC4\u683C\u5F0F\u3002\u5982\u679C\u7ED9\u5B9A\u7684\u53C2\u6570\u4E3A ",(0,l.jsx)(n.code,{children:"JSON"})," \u6570\u7EC4\u5B57\u7B26\u4E32\uFF0C\u4E5F\u5C06\u68C0\u9A8C\u901A\u8FC7\u3002"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Array() {\n      type BizReq struct {\n          Value1 string   `v:"array"`\n          Value2 string   `v:"array"`\n          Value3 string   `v:"array"`\n          Value4 []string `v:"array"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Value1: "1,2,3",\n              Value2: "[]",\n              Value3: "[1,2,3]",\n              Value4: []string{},\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Value1 value `1,2,3` is not of valid array type\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"email",children:(0,l.jsx)(n.code,{children:"email"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F\uFF1A ",(0,l.jsx)(n.code,{children:"email"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A ",(0,l.jsx)(n.code,{children:"EMAIL"})," \u90AE\u7BB1\u5730\u5740\u683C\u5F0F\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Email() {\n      type BizReq struct {\n          MailAddr1 string `v:"email"`\n          MailAddr2 string `v:"email"`\n          MailAddr3 string `v:"email"`\n          MailAddr4 string `v:"email"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              MailAddr1: "gf@goframe.org",\n              MailAddr2: "gf@goframe", // error\n              MailAddr3: "gf@goframe.org.cn",\n              MailAddr4: "gf#goframe.org", // error\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The MailAddr2 value `gf@goframe` is not a valid email address\n      // The MailAddr4 value `gf#goframe.org` is not a valid email address\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"phone",children:(0,l.jsx)(n.code,{children:"phone"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F\uFF1A ",(0,l.jsx)(n.code,{children:"phone"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5927\u4E2D\u56FD\u533A\u624B\u673A\u53F7\u683C\u5F0F\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Phone() {\n      type BizReq struct {\n          PhoneNumber1 string `v:"phone"`\n          PhoneNumber2 string `v:"phone"`\n          PhoneNumber3 string `v:"phone"`\n          PhoneNumber4 string `v:"phone"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              PhoneNumber1: "13578912345",\n              PhoneNumber2: "11578912345", // error 11x not exist\n              PhoneNumber3: "17178912345", // error 171 not exit\n              PhoneNumber4: "1357891234",  // error len must be 11\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The PhoneNumber2 value `11578912345` is not a valid phone number\n      // The PhoneNumber3 value `17178912345` is not a valid phone number\n      // The PhoneNumber4 value `1357891234` is not a valid phone number\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"phone-loose",children:(0,l.jsx)(n.code,{children:"phone-loose"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"phone"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5BBD\u677E\u7684\u624B\u673A\u53F7\u9A8C\u8BC1\uFF0C\u53EA\u8981\u6EE1\u8DB3 ",(0,l.jsx)(n.code,{children:"13\u300114\u300115\u300116\u300117\u300118\u300119"})," \u5F00\u5934\u768411\u4F4D\u6570\u5B57\u90FD\u53EF\u4EE5\u901A\u8FC7\u9A8C\u8BC1\u3002\u53EF\u7528\u4E8E\u975E\u4E25\u683C\u7684\u4E1A\u52A1\u573A\u666F\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_PhoneLoose() {\n      type BizReq struct {\n          PhoneNumber1 string `v:"phone-loose"`\n          PhoneNumber2 string `v:"phone-loose"`\n          PhoneNumber3 string `v:"phone-loose"`\n          PhoneNumber4 string `v:"phone-loose"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              PhoneNumber1: "13578912345",\n              PhoneNumber2: "11578912345", // error 11x not exist\n              PhoneNumber3: "17178912345",\n              PhoneNumber4: "1357891234", // error len must be 11\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The PhoneNumber2 value `11578912345` is invalid\n      // The PhoneNumber4 value `1357891234` is invalid\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"telephone",children:(0,l.jsx)(n.code,{children:"telephone"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"telephone"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5927\u4E2D\u56FD\u533A\u5EA7\u673A\u7535\u8BDD\u53F7\u7801\uFF0C\u201DXXXX-XXXXXXX\u201D\u3001\u201DXXXX-XXXXXXXX\u201D\u3001\u201DXXX-XXXXXXX\u201D\u3001\u201DXXX-XXXXXXXX\u201D\u3001\u201DXXXXXXX\u201D\u3001\u201DXXXXXXXX\u201D\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Telephone() {\n      type BizReq struct {\n          Telephone1 string `v:"telephone"`\n          Telephone2 string `v:"telephone"`\n          Telephone3 string `v:"telephone"`\n          Telephone4 string `v:"telephone"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Telephone1: "010-77542145",\n              Telephone2: "0571-77542145",\n              Telephone3: "20-77542145", // error\n              Telephone4: "775421451",   // error len must be 7 or 8\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Telephone3 value `20-77542145` is not a valid telephone number\n      // The Telephone4 value `775421451` is not a valid telephone number\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"passport",children:(0,l.jsx)(n.code,{children:"passport"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"passport"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u901A\u7528\u5E10\u53F7\u89C4\u5219\uFF08 ",(0,l.jsx)(n.strong,{children:"\u5B57\u6BCD\u5F00\u5934\uFF0C\u53EA\u80FD\u5305\u542B\u5B57\u6BCD\u3001\u6570\u5B57\u548C\u4E0B\u5212\u7EBF\uFF0C\u957F\u5EA6\u57286~18\u4E4B\u95F4"}),"\uFF09\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Passport() {\n      type BizReq struct {\n          Passport1 string `v:"passport"`\n          Passport2 string `v:"passport"`\n          Passport3 string `v:"passport"`\n          Passport4 string `v:"passport"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Passport1: "goframe",\n              Passport2: "1356666",  // error starting with letter\n              Passport3: "goframe#", // error containing only numbers or underscores\n              Passport4: "gf",       // error length between 6 and 18\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Passport2 value `1356666` is not a valid passport format\n      // The Passport3 value `goframe#` is not a valid passport format\n      // The Passport4 value `gf` is not a valid passport format\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"password",children:(0,l.jsx)(n.code,{children:"password"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"password"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u901A\u7528\u5BC6\u7801\u89C4\u5219\uFF08 ",(0,l.jsx)(n.strong,{children:"\u4EFB\u610F\u53EF\u89C1\u5B57\u7B26\uFF0C\u957F\u5EA6\u57286~18\u4E4B\u95F4"}),"\uFF09\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Password() {\n      type BizReq struct {\n          Password1 string `v:"password"`\n          Password2 string `v:"password"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Password1: "goframe",\n              Password2: "gofra", // error length between 6 and 18\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The Password2 value `gofra` is not a valid password format\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"password2",children:(0,l.jsx)(n.code,{children:"password2"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"password2"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u4E2D\u7B49\u5F3A\u5EA6\u5BC6\u7801\uFF08 ",(0,l.jsx)(n.strong,{children:"\u5728\u901A\u7528\u5BC6\u7801\u89C4\u5219\u7684\u57FA\u7840\u4E0A\uFF0C\u8981\u6C42\u5BC6\u7801\u5FC5\u987B\u5305\u542B\u5927\u5C0F\u5199\u5B57\u6BCD\u548C\u6570\u5B57"}),"\uFF09\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Password2() {\n      type BizReq struct {\n          Password1 string `v:"password2"`\n          Password2 string `v:"password2"`\n          Password3 string `v:"password2"`\n          Password4 string `v:"password2"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Password1: "Goframe123",\n              Password2: "gofra",      // error length between 6 and 18\n              Password3: "Goframe",    // error must contain lower and upper letters and numbers.\n              Password4: "goframe123", // error must contain lower and upper letters and numbers.\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Password2 value `gofra` is not a valid password format\n      // The Password3 value `Goframe` is not a valid password format\n      // The Password4 value `goframe123` is not a valid password format\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"password3",children:(0,l.jsx)(n.code,{children:"password3"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"password3"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5F3A\u7B49\u5F3A\u5EA6\u5BC6\u7801\uFF08 ",(0,l.jsx)(n.strong,{children:"\u5728\u901A\u7528\u5BC6\u7801\u89C4\u5219\u7684\u57FA\u7840\u4E0A\uFF0C\u5FC5\u987B\u5305\u542B\u5927\u5C0F\u5199\u5B57\u6BCD\u3001\u6570\u5B57\u548C\u7279\u6B8A\u5B57\u7B26"}),"\uFF09\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Password3() {\n      type BizReq struct {\n          Password1 string `v:"password3"`\n          Password2 string `v:"password3"`\n          Password3 string `v:"password3"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Password1: "Goframe123#",\n              Password2: "gofra",      // error length between 6 and 18\n              Password3: "Goframe123", // error must contain lower and upper letters, numbers and special chars.\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Password2 value `gofra` is not a valid password format\n      // The Password3 value `Goframe123` is not a valid password format\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"postcode",children:(0,l.jsx)(n.code,{children:"postcode"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"postcode"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5927\u4E2D\u56FD\u533A\u90AE\u653F\u7F16\u7801\u89C4\u5219\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Postcode() {\n      type BizReq struct {\n          Postcode1 string `v:"postcode"`\n          Postcode2 string `v:"postcode"`\n          Postcode3 string `v:"postcode"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Postcode1: "100000",\n              Postcode2: "10000",   // error length must be 6\n              Postcode3: "1000000", // error length must be 6\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Postcode2 value `10000` is not a valid postcode format\n      // The Postcode3 value `1000000` is not a valid postcode format\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"resident-id",children:(0,l.jsx)(n.code,{children:"resident-id"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u683C\u5F0F:\xa0 resident-id"}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u516C\u6C11\u8EAB\u4EFD\u8BC1\u53F7\u7801\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_ResidentId() {\n      type BizReq struct {\n          ResidentID1 string `v:"resident-id"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ResidentID1: "320107199506285482",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The ResidentID1 value `320107199506285482` is not a valid resident id number\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"bank-card",children:(0,l.jsx)(n.code,{children:"bank-card"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u683C\u5F0F: \xa0bank-card"}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u5927\u4E2D\u56FD\u533A\u94F6\u884C\u5361\u53F7\u6821\u9A8C\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_BankCard() {\n      type BizReq struct {\n          BankCard1 string `v:"bank-card"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              BankCard1: "6225760079930218",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The BankCard1 value `6225760079930218` is not a valid bank card number\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"qq",children:(0,l.jsx)(n.code,{children:"qq"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"qq"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u817E\u8BAFQQ\u53F7\u7801\u89C4\u5219\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_QQ() {\n      type BizReq struct {\n          QQ1 string `v:"qq"`\n          QQ2 string `v:"qq"`\n          QQ3 string `v:"qq"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              QQ1: "389961817",\n              QQ2: "9999",       // error >= 10000\n              QQ3: "514258412a", // error all number\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The QQ2 value `9999` is not a valid QQ number\n      // The QQ3 value `514258412a` is not a valid QQ number\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"ip",children:(0,l.jsx)(n.code,{children:"ip"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"ip"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A ",(0,l.jsx)(n.code,{children:"IPv4/IPv6"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_IP() {\n      type BizReq struct {\n          IP1 string `v:"ip"`\n          IP2 string `v:"ip"`\n          IP3 string `v:"ip"`\n          IP4 string `v:"ip"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              IP1: "127.0.0.1",\n              IP2: "fe80::812b:1158:1f43:f0d1",\n              IP3: "520.255.255.255", // error >= 10000\n              IP4: "ze80::812b:1158:1f43:f0d1",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The IP3 value `520.255.255.255` is not a valid IP address\n      // The IP4 value `ze80::812b:1158:1f43:f0d1` is not a valid IP address\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"ipv4",children:(0,l.jsx)(n.code,{children:"ipv4"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"ipv4"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A ",(0,l.jsx)(n.code,{children:"IPv4"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_IPV4() {\n      type BizReq struct {\n          IP1 string `v:"ipv4"`\n          IP2 string `v:"ipv4"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              IP1: "127.0.0.1",\n              IP2: "520.255.255.255",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The IP2 value `520.255.255.255` is not a valid IPv4 address\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"ipv6",children:(0,l.jsx)(n.code,{children:"ipv6"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"ipv6"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A ",(0,l.jsx)(n.code,{children:"IPv6"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_IPV6() {\n      type BizReq struct {\n          IP1 string `v:"ipv6"`\n          IP2 string `v:"ipv6"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              IP1: "fe80::812b:1158:1f43:f0d1",\n              IP2: "ze80::812b:1158:1f43:f0d1",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The IP2 value `ze80::812b:1158:1f43:f0d1` is not a valid IPv6 address\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"mac",children:(0,l.jsx)(n.code,{children:"mac"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"mac"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A ",(0,l.jsx)(n.code,{children:"MAC"})," \u5730\u5740\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Mac() {\n      type BizReq struct {\n          Mac1 string `v:"mac"`\n          Mac2 string `v:"mac"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Mac1: "4C-CC-6A-D6-B1-1A",\n              Mac2: "Z0-CC-6A-D6-B1-1A",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The Mac2 value `Z0-CC-6A-D6-B1-1A` is not a valid MAC address\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"url",children:(0,l.jsx)(n.code,{children:"url"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"url"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1AURL"}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u652F\u6301\u4EE5 ",(0,l.jsx)(n.code,{children:"http\uFF0Chttps\uFF0Cftp\uFF0Cfile"})," \u5F00\u5934\u7684\u5730\u5740\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Url() {\n      type BizReq struct {\n          URL1 string `v:"url"`\n          URL2 string `v:"url"`\n          URL3 string `v:"url"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              URL1: "http://goframe.org",\n              URL2: "ftp://goframe.org",\n              URL3: "ws://goframe.org",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The URL3 value `ws://goframe.org` is not a valid URL address\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"domain",children:(0,l.jsx)(n.code,{children:"domain"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"domain"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u57DF\u540D"}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u57DF\u540D\u89C4\u5219\u3002 ",(0,l.jsx)(n.code,{children:"xxx.yyy"}),"\uFF08\u9996\u4F4D\u5FC5\u987B\u4E3A\u5B57\u6BCD\uFF09\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Domain() {\n      type BizReq struct {\n          Domain1 string `v:"domain"`\n          Domain2 string `v:"domain"`\n          Domain3 string `v:"domain"`\n          Domain4 string `v:"domain"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Domain1: "goframe.org",\n              Domain2: "a.b",\n              Domain3: "goframe#org",\n              Domain4: "1a.2b",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Domain3 value `goframe#org` is not a valid domain format\n      // The Domain4 value `1a.2b` is not a valid domain format\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"size",children:(0,l.jsx)(n.code,{children:"size"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"size:size"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570 ",(0,l.jsx)(n.strong,{children:"\u957F\u5EA6"})," \u4E3A `"]}),"\n",(0,l.jsx)(n.p,{children:"size"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"(\u957F\u5EA6\u53C2\u6570\u4E3A\u6574\u5F62)\uFF0C\u6CE8\u610F\u5E95\u5C42\u4F7F\u7528 "}),"Unicode",(0,l.jsx)(n.code,{children:"\u8BA1\u7B97\u957F\u5EA6\uFF0C\u56E0\u6B64\u4E2D\u6587\u4E00\u4E2A\u6C49\u5B57\u5360"}),"1` \u4E2A\u957F\u5EA6\u5355\u4F4D\u3002"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Size() {\n      type BizReq struct {\n          Size1 string `v:"size:10"`\n          Size2 string `v:"size:5"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Size1: "goframe\u6B22\u8FCE\u4F60",\n              Size2: "goframe",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The Size2 value `goframe` length must be 5\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"length",children:(0,l.jsx)(n.code,{children:"length"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"length:min,max"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570 ",(0,l.jsx)(n.strong,{children:"\u957F\u5EA6"})," \u4E3A ",(0,l.jsx)(n.code,{children:"min"})," \u5230 ",(0,l.jsx)(n.code,{children:"max"}),"(\u957F\u5EA6\u53C2\u6570\u4E3A\u6574\u5F62)\uFF0C\u6CE8\u610F\u5E95\u5C42\u4F7F\u7528 ",(0,l.jsx)(n.code,{children:"Unicode"})," \u8BA1\u7B97\u957F\u5EA6\uFF0C\u56E0\u6B64\u4E2D\u6587\u4E00\u4E2A\u6C49\u5B57\u5360 ",(0,l.jsx)(n.code,{children:"1"})," \u4E2A\u957F\u5EA6\u5355\u4F4D\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Length() {\n      type BizReq struct {\n          Length1 string `v:"length:5,10"`\n          Length2 string `v:"length:10,15"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Length1: "goframe\u6B22\u8FCE\u4F60",\n              Length2: "goframe",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The Length2 value `goframe` length must be between 10 and 15\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"min-length",children:(0,l.jsx)(n.code,{children:"min-length"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"min-length:min"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570 ",(0,l.jsx)(n.strong,{children:"\u957F\u5EA6"})," \u6700\u5C0F\u4E3A ",(0,l.jsx)(n.code,{children:"min"}),"(\u957F\u5EA6\u53C2\u6570\u4E3A\u6574\u5F62)\uFF0C\u6CE8\u610F\u5E95\u5C42\u4F7F\u7528 ",(0,l.jsx)(n.code,{children:"Unicode"})," \u8BA1\u7B97\u957F\u5EA6\uFF0C\u56E0\u6B64\u4E2D\u6587\u4E00\u4E2A\u6C49\u5B57\u5360 ",(0,l.jsx)(n.code,{children:"1"})," \u4E2A\u957F\u5EA6\u5355\u4F4D\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_MinLength() {\n      type BizReq struct {\n          MinLength1 string `v:"min-length:10"`\n          MinLength2 string `v:"min-length:8"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              MinLength1: "goframe\u6B22\u8FCE\u4F60",\n              MinLength2: "goframe",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The MinLength2 value `goframe` length must be equal or greater than 8\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"max-length",children:(0,l.jsx)(n.code,{children:"max-length"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"max-length:max"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570 ",(0,l.jsx)(n.strong,{children:"\u957F\u5EA6"})," \u6700\u5927\u4E3A ",(0,l.jsx)(n.code,{children:"max"}),"(\u957F\u5EA6\u53C2\u6570\u4E3A\u6574\u5F62)\uFF0C\u6CE8\u610F\u5E95\u5C42\u4F7F\u7528 ",(0,l.jsx)(n.code,{children:"Unicode"})," \u8BA1\u7B97\u957F\u5EA6\uFF0C\u56E0\u6B64\u4E2D\u6587\u4E00\u4E2A\u6C49\u5B57\u5360 ",(0,l.jsx)(n.code,{children:"1"})," \u4E2A\u957F\u5EA6\u5355\u4F4D\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_MaxLength() {\n      type BizReq struct {\n          MaxLength1 string `v:"max-length:10"`\n          MaxLength2 string `v:"max-length:5"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              MaxLength1: "goframe\u6B22\u8FCE\u4F60",\n              MaxLength2: "goframe",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The MaxLength2 value `goframe` length must be equal or lesser than 5\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"between",children:(0,l.jsx)(n.code,{children:"between"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"between:min,max"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570 ",(0,l.jsx)(n.strong,{children:"\u5927\u5C0F"})," \u4E3A ",(0,l.jsx)(n.code,{children:"min"})," \u5230 ",(0,l.jsx)(n.code,{children:"max"}),"(\u652F\u6301\u6574\u5F62\u548C\u6D6E\u70B9\u7C7B\u578B\u53C2\u6570)\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Between() {\n      type BizReq struct {\n          Age1   int     `v:"between:1,100"`\n          Age2   int     `v:"between:1,100"`\n          Score1 float32 `v:"between:0.0,10.0"`\n          Score2 float32 `v:"between:0.0,10.0"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Age1:   50,\n              Age2:   101,\n              Score1: 9.8,\n              Score2: -0.5,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Age2 value `101` must be between 1 and 100\n      // The Score2 value `-0.5` must be between 0 and 10\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"min",children:(0,l.jsx)(n.code,{children:"min"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"min:min"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570 ",(0,l.jsx)(n.strong,{children:"\u5927\u5C0F"})," \u6700\u5C0F\u4E3A ",(0,l.jsx)(n.code,{children:"min"}),"(\u652F\u6301\u6574\u5F62\u548C\u6D6E\u70B9\u7C7B\u578B\u53C2\u6570)\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Min() {\n      type BizReq struct {\n          Age1   int     `v:"min:100"`\n          Age2   int     `v:"min:100"`\n          Score1 float32 `v:"min:10.0"`\n          Score2 float32 `v:"min:10.0"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Age1:   50,\n              Age2:   101,\n              Score1: 9.8,\n              Score2: 10.1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Age1 value `50` must be equal or greater than 100\n      // The Score1 value `9.8` must be equal or greater than 10\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"max",children:(0,l.jsx)(n.code,{children:"max"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"max:max"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570 ",(0,l.jsx)(n.strong,{children:"\u5927\u5C0F"})," \u6700\u5927\u4E3A ",(0,l.jsx)(n.code,{children:"max"}),"(\u652F\u6301\u6574\u5F62\u548C\u6D6E\u70B9\u7C7B\u578B\u53C2\u6570)\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Max() {\n      type BizReq struct {\n          Age1   int     `v:"max:100"`\n          Age2   int     `v:"max:100"`\n          Score1 float32 `v:"max:10.0"`\n          Score2 float32 `v:"max:10.0"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Age1:   99,\n              Age2:   101,\n              Score1: 9.9,\n              Score2: 10.1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Age2 value `101` must be equal or lesser than 100\n      // The Score2 value `10.1` must be equal or lesser than 10\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"json",children:(0,l.jsx)(n.code,{children:"json"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"json"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5224\u65AD\u6570\u636E\u683C\u5F0F\u4E3A ",(0,l.jsx)(n.code,{children:"JSON"}),"\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Json() {\n      type BizReq struct {\n          JSON1 string `v:"json"`\n          JSON2 string `v:"json"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              JSON1: "{\\"name\\":\\"goframe\\",\\"author\\":\\"\u90ED\u5F3A\\"}",\n              JSON2: "{\\"name\\":\\"goframe\\",\\"author\\":\\"\u90ED\u5F3A\\",\\"test\\"}",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The JSON2 value `{"name":"goframe","author":"\u90ED\u5F3A","test"}` is not a valid JSON string\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"integer",children:(0,l.jsx)(n.code,{children:"integer"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"integer"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u6574\u6570\uFF08\u6B63\u6574\u6570\u6216\u8005\u8D1F\u6574\u6570\uFF09\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Integer() {\n      type BizReq struct {\n          Integer string `v:"integer"`\n          Float   string `v:"integer"`\n          Str     string `v:"integer"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Integer: "100",\n              Float:   "10.0",\n              Str:     "goframe",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Float value `10.0` is not an integer\n      // The Str value `goframe` is not an integer\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"float",children:(0,l.jsx)(n.code,{children:"float"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"float"})]}),"\n",(0,l.jsx)(n.li,{children:"\u8BF4\u660E\uFF1A\u6D6E\u70B9\u6570\u3002"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Float() {\n      type BizReq struct {\n          Integer string `v:"float"`\n          Float   string `v:"float"`\n          Str     string `v:"float"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Integer: "100",\n              Float:   "10.0",\n              Str:     "goframe",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(err)\n      }\n\n      // Output:\n      // The Str value `goframe` is invalid\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"boolean",children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u5E03\u5C14\u503C( ",(0,l.jsx)(n.code,{children:"1"}),", ",(0,l.jsx)(n.code,{children:"true"}),", ",(0,l.jsx)(n.code,{children:"on"}),", ",(0,l.jsx)(n.code,{children:"yes"})," \u4E3A ",(0,l.jsx)(n.code,{children:"true"})," | ",(0,l.jsx)(n.code,{children:"0"}),", ",(0,l.jsx)(n.code,{children:"false"}),", ",(0,l.jsx)(n.code,{children:"off"}),", ",(0,l.jsx)(n.code,{children:"no"}),", ",(0,l.jsx)(n.code,{children:'""'})," \u4E3A ",(0,l.jsx)(n.code,{children:"false"}),")\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Boolean() {\n      type BizReq struct {\n          Boolean bool    `v:"boolean"`\n          Integer int     `v:"boolean"`\n          Float   float32 `v:"boolean"`\n          Str1    string  `v:"boolean"`\n          Str2    string  `v:"boolean"`\n          Str3    string  `v:"boolean"`\n      }\n\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Boolean: true,\n              Integer: 1,\n              Float:   10.0,\n              Str1:    "on",\n              Str2:    "",\n              Str3:    "goframe",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Float value `10` field must be true or false\n      // The Str3 value `goframe` field must be true or false\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"same",children:(0,l.jsx)(n.code,{children:"same"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"same:field"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5FC5\u9700\u4E0E ",(0,l.jsx)(n.code,{children:"field"})," \u5B57\u6BB5\u53C2\u6570\u7684\u503C\u76F8\u540C\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5728\u7528\u6237\u6CE8\u518C\u65F6\uFF0C\u63D0\u4EA4\u5BC6\u7801 ",(0,l.jsx)(n.code,{children:"Password"})," \u548C\u786E\u8BA4\u5BC6\u7801 ",(0,l.jsx)(n.code,{children:"Password2"})," \u5FC5\u987B\u76F8\u7B49\uFF08\u670D\u52A1\u7AEF\u6821\u9A8C\uFF09\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Same() {\n      type BizReq struct {\n          Name      string `v:"required"`\n          Password  string `v:"required|same:Password2"`\n          Password2 string `v:"required"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Name:      "gf",\n              Password:  "goframe.org",\n              Password2: "goframe.net",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The Password value `goframe.org` must be the same as field Password2\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"different",children:(0,l.jsx)(n.code,{children:"different"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"different:field"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u4E0D\u80FD\u4E0E ",(0,l.jsx)(n.code,{children:"field"})," \u5B57\u6BB5\u53C2\u6570\u7684\u503C\u76F8\u540C\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u5907\u7528\u90AE\u7BB1 ",(0,l.jsx)(n.code,{children:"OtherMailAddr"})," \u548C\u90AE\u7BB1\u5730\u5740 ",(0,l.jsx)(n.code,{children:"MailAddr"})," \u5FC5\u987B\u4E0D\u76F8\u540C\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Different() {\n      type BizReq struct {\n          Name            string `v:"required"`\n          MailAddr        string `v:"required"`\n          ConfirmMailAddr string `v:"required|different:MailAddr"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Name:            "gf",\n              MailAddr:        "gf@goframe.org",\n              ConfirmMailAddr: "gf@goframe.org",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The ConfirmMailAddr value `gf@goframe.org` must be different from field MailAddr\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"eq",children:(0,l.jsx)(n.code,{children:"eq"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"eq:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5FC5\u9700\u4E0E ",(0,l.jsx)(n.code,{children:"field"})," \u5B57\u6BB5\u53C2\u6570\u7684\u503C\u76F8\u540C\u3002 ",(0,l.jsx)(n.code,{children:"same"})," \u89C4\u5219\u7684\u522B\u540D\uFF0C\u529F\u80FD\u540C ",(0,l.jsx)(n.code,{children:"same"})," \u89C4\u5219\u3002"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_EQ() {\n      type BizReq struct {\n          Name      string `v:"required"`\n          Password  string `v:"required|eq:Password2"`\n          Password2 string `v:"required"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Name:      "gf",\n              Password:  "goframe.org",\n              Password2: "goframe.net",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The Password value `goframe.org` must be equal to field Password2 value `goframe.net`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"not-eq",children:(0,l.jsx)(n.code,{children:"not-eq"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"not-eq:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5FC5\u9700\u4E0E ",(0,l.jsx)(n.code,{children:"field"})," \u5B57\u6BB5\u53C2\u6570\u7684\u503C\u4E0D\u76F8\u540C\u3002 ",(0,l.jsx)(n.code,{children:"different"})," \u89C4\u5219\u7684\u522B\u540D\uFF0C\u529F\u80FD\u540C ",(0,l.jsx)(n.code,{children:"different"})," \u89C4\u5219\u3002"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_NotEQ() {\n      type BizReq struct {\n          Name          string `v:"required"`\n          MailAddr      string `v:"required"`\n          OtherMailAddr string `v:"required|not-eq:MailAddr"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Name:          "gf",\n              MailAddr:      "gf@goframe.org",\n              OtherMailAddr: "gf@goframe.org",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The OtherMailAddr value `gf@goframe.org` must not be equal to field MailAddr value `gf@goframe.org`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"gt",children:(0,l.jsx)(n.code,{children:"gt"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"gt:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5FC5\u9700\u5927\u4E8E\u7ED9\u5B9A\u5B57\u6BB5\u5BF9\u5E94\u7684\u503C\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_GT() {\n      type BizReq struct {\n          Value1 int\n          Value2 int `v:"gt:Value1"`\n          Value3 int `v:"gt:Value1"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Value1: 1,\n              Value2: 1,\n              Value3: 2,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err.String())\n      }\n\n      // Output:\n      // The Value2 value `1` must be greater than field Value1 value `1`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"gte",children:(0,l.jsx)(n.code,{children:"gte"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"gte:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5FC5\u9700\u5927\u4E8E\u6216\u7B49\u4E8E\u7ED9\u5B9A\u5B57\u6BB5\u5BF9\u5E94\u7684\u503C\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_GTE() {\n      type BizReq struct {\n          Value1 int\n          Value2 int `v:"gte:Value1"`\n          Value3 int `v:"gte:Value1"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Value1: 2,\n              Value2: 1,\n              Value3: 2,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err.String())\n      }\n\n      // Output:\n      // The Value2 value `1` must be greater than or equal to field Value1 value `2`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"lt",children:(0,l.jsx)(n.code,{children:"lt"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"lt:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5FC5\u9700\u5C0F\u4E8E\u7ED9\u5B9A\u5B57\u6BB5\u5BF9\u5E94\u7684\u503C\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_LT() {\n      type BizReq struct {\n          Value1 int\n          Value2 int `v:"lt:Value1"`\n          Value3 int `v:"lt:Value1"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Value1: 2,\n              Value2: 1,\n              Value3: 2,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err.String())\n      }\n\n      // Output:\n      // The Value3 value `2` must be lesser than field Value1 value `2`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"lte",children:(0,l.jsx)(n.code,{children:"lte"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"lte:field"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5FC5\u9700\u5C0F\u4E8E\u6216\u7B49\u4E8E\u7ED9\u5B9A\u5B57\u6BB5\u5BF9\u5E94\u7684\u503C\u3002"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_LTE() {\n      type BizReq struct {\n          Value1 int\n          Value2 int `v:"lte:Value1"`\n          Value3 int `v:"lte:Value1"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Value1: 1,\n              Value2: 1,\n              Value3: 2,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err.String())\n      }\n\n      // Output:\n      // The Value3 value `2` must be lesser than or equal to field Value1 value `1`\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"in",children:(0,l.jsx)(n.code,{children:"in"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"in:value1,value2,..."})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5E94\u8BE5\u5728 ",(0,l.jsx)(n.code,{children:"value1,value2,..."})," \u4E2D\uFF08\u5B57\u7B26\u4E32\u5339\u914D\uFF09\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u6027\u522B\u5B57\u6BB5 ",(0,l.jsx)(n.code,{children:"Gender"})," \u7684\u503C\u5FC5\u987B\u5728 ",(0,l.jsx)(n.code,{children:"0/1/2"})," \u4E2D\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_In() {\n      type BizReq struct {\n          ID     uint   `v:"required" dc:"Your Id"`\n          Name   string `v:"required" dc:"Your name"`\n          Gender uint   `v:"in:0,1,2" dc:"0:Secret;1:Male;2:Female"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID:     1,\n              Name:   "test",\n              Gender: 3,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The Gender value `3` is not in acceptable range: 0,1,2\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"not-in",children:(0,l.jsx)(n.code,{children:"not-in"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"not-in:value1,value2,..."})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u4E0D\u5E94\u8BE5\u5728 ",(0,l.jsx)(n.code,{children:"value1,value2,..."})," \u4E2D\uFF08\u5B57\u7B26\u4E32\u5339\u914D\uFF09\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:["\u793A\u4F8B\uFF1A\u65E0\u6548\u7D22\u5F15 ",(0,l.jsx)(n.code,{children:"InvalidIndex"})," \u7684\u503C\u5FC5\u987B\u4E0D\u5728 ",(0,l.jsx)(n.code,{children:"-1/0/1"})," \u4E2D\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_NotIn() {\n      type BizReq struct {\n          ID           uint   `v:"required" dc:"Your Id"`\n          Name         string `v:"required" dc:"Your name"`\n          InvalidIndex uint   `v:"not-in:-1,0,1"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              ID:           1,\n              Name:         "test",\n              InvalidIndex: 1,\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Println(err)\n      }\n\n      // Output:\n      // The InvalidIndex value `1` must not be in range: -1,0,1\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"regex",children:(0,l.jsx)(n.code,{children:"regex"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"regex:pattern"})]}),"\n",(0,l.jsxs)(n.li,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u5E94\u5F53\u6EE1\u8DB3\u6B63\u5219\u5339\u914D\u89C4\u5219 ",(0,l.jsx)(n.code,{children:"pattern"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_Regex() {\n      type BizReq struct {\n          Regex1 string `v:"regex:[1-9][0-9]{4,14}"`\n          Regex2 string `v:"regex:[1-9][0-9]{4,14}"`\n          Regex3 string `v:"regex:[1-9][0-9]{4,14}"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Regex1: "1234",\n              Regex2: "01234",\n              Regex3: "10000",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Regex1 value `1234` must be in regex of: [1-9][0-9]{4,14}\n      // The Regex2 value `01234` must be in regex of: [1-9][0-9]{4,14}\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"not-regex",children:(0,l.jsx)(n.code,{children:"not-regex"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u683C\u5F0F: ",(0,l.jsx)(n.code,{children:"not-regex:pattern"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u8BF4\u660E\uFF1A\u53C2\u6570\u503C\u4E0D\u5E94\u5F53\u6EE1\u8DB3\u6B63\u5219\u5339\u914D\u89C4\u5219 ",(0,l.jsx)(n.code,{children:"pattern"}),"\u3002"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u7248\u672C\uFF1A\u6846\u67B6\u7248\u672C ",(0,l.jsx)(n.code,{children:">=v2.2.0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:'func Example_Rule_NotRegex() {\n      type BizReq struct {\n          Regex1 string `v:"regex:\\\\d{4}"`\n          Regex2 string `v:"not-regex:\\\\d{4}"`\n      }\n      var (\n          ctx = context.Background()\n          req = BizReq{\n              Regex1: "1234",\n              Regex2: "1234",\n          }\n      )\n      if err := g.Validator().Data(req).Run(ctx); err != nil {\n          fmt.Print(gstr.Join(err.Strings(), "\\n"))\n      }\n\n      // Output:\n      // The Regex2 value `1234` should not be in regex of: \\d{4}\n}\n'})})]})}function u(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return t},a:function(){return s}});var i=r(667294);let l={},d=i.createContext(l);function s(e){let n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);