"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["97097"],{397762:function(e,n,i){i.r(n),i.d(n,{metadata:()=>t,contentTitle:()=>c,default:()=>m,assets:()=>a,toc:()=>o,frontMatter:()=>s});var t=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u65B9\u6CD5\u4ECB\u7ECD","title":"Time - Methods","description":"Methods related to time management in the GoFrame framework, including how to create time objects, format time, set timezones, and obtain timestamps, among other functionalities, can help developers perform time operations and management more conveniently.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u65B9\u6CD5\u4ECB\u7ECD.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime","slug":"/docs/components/os-gtime-funcs","permalink":"/en/docs/components/os-gtime-funcs","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u65B9\u6CD5\u4ECB\u7ECD.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732541616000,"sidebarPosition":4,"frontMatter":{"slug":"/docs/components/os-gtime-funcs","title":"Time - Methods","sidebar_position":4,"hide_title":true,"keywords":["Time Management","GoFrame","Time Object","Time Format","Timezone Setting","Timestamp","Time Operations","Time Comparison","Leap Year Judgment","DateTime"],"description":"Methods related to time management in the GoFrame framework, including how to create time objects, format time, set timezones, and obtain timestamps, among other functionalities, can help developers perform time operations and management more conveniently."},"sidebar":"mainSidebar","previous":{"title":"Time - Time Zone","permalink":"/en/docs/components/os-gtime-timezone"},"next":{"title":"Timer","permalink":"/en/docs/components/os-gtimer"}}'),r=i("785893"),l=i("250065");let s={slug:"/docs/components/os-gtime-funcs",title:"Time - Methods",sidebar_position:4,hide_title:!0,keywords:["Time Management","GoFrame","Time Object","Time Format","Timezone Setting","Timestamp","Time Operations","Time Comparison","Leap Year Judgment","DateTime"],description:"Methods related to time management in the GoFrame framework, including how to create time objects, format time, set timezones, and obtain timestamps, among other functionalities, can help developers perform time operations and management more conveniently."},c=void 0,a={},o=[{value:"<code>New</code>",id:"new",level:2},{value:"<code>Now</code>",id:"now",level:2},{value:"<code>Format</code>",id:"format",level:2},{value:"<code>String</code>",id:"string",level:2},{value:"<code>Timestamp</code>",id:"timestamp",level:2},{value:"<code>ToZone</code>",id:"tozone",level:2},{value:"<code>SetTimeZone</code>",id:"settimezone",level:2},{value:"<code>StrToTime</code>",id:"strtotime",level:2},{value:"<code>Add</code>",id:"add",level:2},{value:"<code>StartOfDay</code>",id:"startofday",level:2},{value:"<code>EndOfDay</code>",id:"endofday",level:2},{value:"<code>Month</code>",id:"month",level:2},{value:"<code>Second</code>",id:"second",level:2},{value:"<code>IsZero</code>",id:"iszero",level:2},{value:"<code>AddDate</code>",id:"adddate",level:2},{value:"<code>Equal</code>",id:"equal",level:2},{value:"<code>Before</code>",id:"before",level:2},{value:"<code>After</code>",id:"after",level:2},{value:"<code>Layout</code>",id:"layout",level:2},{value:"<code>IsLeapYear</code>",id:"isleapyear",level:2},{value:"<code>Date</code>",id:"date",level:2},{value:"<code>Datetime</code>",id:"datetime",level:2},{value:"<code>ISO8601</code>",id:"iso8601",level:2},{value:"<code>RFC822</code>",id:"rfc822",level:2},{value:"<code>StrToTimeFormat</code>",id:"strtotimeformat",level:2},{value:"<code>StrToTimeLayout</code>",id:"strtotimelayout",level:2},{value:"<code>MarshalJSON</code>",id:"marshaljson",level:2},{value:"<code>UnmarshalJSON</code>",id:"unmarshaljson",level:2},{value:"<code>WeekOfYear</code>",id:"weekofyear",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["The following list of common methods might be updated slower than new code features. For more methods and examples, please refer to the code documentation: ",(0,r.jsx)(n.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/os/gtime",children:"https://pkg.go.dev/github.com/gogf/gf/v2/os/gtime"})]})}),"\n",(0,r.jsx)(n.h2,{id:"new",children:(0,r.jsx)(n.code,{children:"New"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: ",(0,r.jsx)(n.code,{children:"New"})," creates and returns a ",(0,r.jsx)(n.code,{children:"Time"})," object with the given parameters."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func New(param ...interface{}) *Time\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Create a time object."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleNew() {\n      t1 := gtime.New(time.Now())\n      t2 := gtime.New("2018-08-08 08:08:08")\n      t3 := gtime.New(1533686888)\n\n      fmt.Println(t1)\n      fmt.Println(t2)\n      fmt.Println(t3)\n\n      // Output:\n      // 2021-11-18 14:18:27\n      // 2018-08-08 08:08:08\n      // 2018-08-08 08:08:08\n'})}),"\n",(0,r.jsx)(n.h2,{id:"now",children:(0,r.jsx)(n.code,{children:"Now"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: ",(0,r.jsx)(n.code,{children:"Now"})," creates and returns the current time object."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func Now() *Time\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Get the current time object."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func ExampleNow() {\n      t := gtime.Now()\n      fmt.Println(t)\n\n      // Output:\n      // 2021-11-06 13:41:08\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"format",children:(0,r.jsx)(n.code,{children:"Format"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Format output time."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Format(format string) string\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Example: Format output time. The complete time format can be referred to in ",(0,r.jsx)(n.a,{href:"/en/docs/components/os-gtime-format",children:"Time - Format"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_Format() {\n      gt1 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.Format("Y-m-d"))\n      fmt.Println(gt1.Format("l"))\n      fmt.Println(gt1.Format("F j, Y, g:i a"))\n      fmt.Println(gt1.Format("j, n, Y"))\n      fmt.Println(gt1.Format("h-i-s, j-m-y, it is w Day z"))\n      fmt.Println(gt1.Format("D M j G:i:s T Y"))\n\n      // Output:\n      // 2018-08-08\n      // Wednesday\n      // August 8, 2018, 8:08 am\n      // 8, 8, 2018\n      // 08-08-08, 8-08-18, 0831 0808 3 Wedam18 219\n      // Wed Aug 8 8:08:08 CST 2018\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"string",children:(0,r.jsx)(n.code,{children:"String"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Output as a string."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) String() string\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Output as a string type."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_String() {\n      gt := gtime.New("2018-08-08 08:08:08")\n      t1 := gt.String()\n\n      fmt.Println(t1)\n      fmt.Println(reflect.TypeOf(t1))\n\n      // Output:\n      // 2018-08-08 08:08:08\n      // string\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"timestamp",children:(0,r.jsx)(n.code,{children:"Timestamp"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: Get the second-level timestamp of the current object. Corresponding methods include ",(0,r.jsx)(n.code,{children:"TimestampMicro/TimestampMilli/TimestampNano"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Timestamp() int64\nfunc Timestamp() int64\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Get the second-level timestamp of the current object."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func ExampleTime_Timestamp() {\n      t := gtime.Now()\n\n      fmt.Println(t.Timestamp())\n      fmt.Println(gtime.Timestamp())\n      fmt.Println(t.TimestampMicro())\n      fmt.Println(t.TimestampMilli())\n      fmt.Println(t.TimestampNano())\n\n      // Output:\n      // 1533686888\n      // 1533686888\n      // 1533686888000\n      // 1533686888000000\n      // 1533686888000000000\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"tozone",children:(0,r.jsx)(n.code,{children:"ToZone"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Set timezone."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) ToZone(zone string) (*Time, error)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Get the second-level timestamp of the current object."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_ToZone() {\n      gt1 := gtime.Now()\n      gt2, _ := gt1.ToZone("Asia/Shanghai")\n      gt3, _ := gt1.ToZone("Asia/Tokyo")\n\n      fmt.Println(gt2)\n      fmt.Println(gt3)\n\n      // May Output:\n      // 2021-11-11 17:10:10\n      // 2021-11-11 18:10:10\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"settimezone",children:(0,r.jsx)(n.code,{children:"SetTimeZone"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Set timezone."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func SetTimeZone(zone string) error\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Set timezone."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleSetTimeZone() {\n      gtime.SetTimeZone("Asia/Shanghai")\n      fmt.Println(gtime.Datetime())\n\n      gtime.SetTimeZone("Asia/Tokyo")\n      fmt.Println(gtime.Datetime())\n      // May Output:\n      // 2018-08-08 08:08:08\n      // 2018-08-08 09:08:08\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"strtotime",children:(0,r.jsx)(n.code,{children:"StrToTime"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Convert time string to time object."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func StrToTime(str string, format ...string) (*Time, error)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Convert time string to time object."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleStrToTime() {\n      res, _ := gtime.StrToTime("2006-01-02T15:04:05-07:00", "Y-m-d H:i:s")\n      fmt.Println(res)\n\n      // May Output:\n      // 2006-01-02 15:04:05\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"add",children:(0,r.jsx)(n.code,{children:"Add"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Add time to the current time object."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Add(d time.Duration) *Time\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Add time to the current time object."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_Add() {\n      gt := gtime.New("2018-08-08 08:08:08")\n      gt1 := gt.Add(time.Duration(10) * time.Second)\n\n      fmt.Println(gt1)\n\n      // Output:\n      // 2018-08-08 08:08:18\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"startofday",children:(0,r.jsx)(n.code,{children:"StartOfDay"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: Return the start time object of today. Similar methods include ",(0,r.jsx)(n.code,{children:"StartOfHalf/StartOfHour/StartOfMonth/StartOfMinute/StartOfQuarter"}),", etc."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) StartOfDay() *Time\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Return the start time object of today."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_StartOfDay() {\n      gt1 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.StartOfDay())\n\n      // Output:\n      // 2018-08-08 00:00:00\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"endofday",children:(0,r.jsx)(n.code,{children:"EndOfDay"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: Return the end time object of today. Similar methods include ",(0,r.jsx)(n.code,{children:"EndOfHalf/EndOfHour/EndOfMonth/EndOfMinute/EndOfQuarter"}),", etc."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) EndOfDay() *Time\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Return the end time object of today."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_EndOfDay() {\n      gt1 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.EndOfDay())\n\n      // Output:\n      // 2018-08-08 23:59:59\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"month",children:(0,r.jsx)(n.code,{children:"Month"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Return the month index in a year. For example, January corresponds to 1."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Month() int\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Return the month index in a year."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_Month() {\n      gt := gtime.New("2018-08-08 08:08:08")\n      t1 := gt.Month()\n\n      fmt.Println(t1)\n\n      // Output:\n      // 8\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"second",children:(0,r.jsx)(n.code,{children:"Second"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Return the number of seconds in the current minute. For example, 10:10:08 corresponds to 8 seconds."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Second() int\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Return the number of seconds in the current minute."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_Second() {\n      gt := gtime.New("2018-08-08 08:08:08")\n      t1 := gt.Second()\n\n      fmt.Println(t1)\n\n      // Output:\n      // 8\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"iszero",children:(0,r.jsx)(n.code,{children:"IsZero"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: Check if the time equals ",(0,r.jsx)(n.code,{children:"0001-01-01 00:00:00"}),". Note it does not represent the timestamp 0, which is ",(0,r.jsx)(n.code,{children:"1970-01-01 08:00:00"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) IsZero() bool\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Check if the month index in a year."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_IsZero() {\n      gt := gtime.New("0-0-0")\n\n      fmt.Println(gt.IsZero())\n\n      // Output:\n      // true\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"adddate",children:(0,r.jsx)(n.code,{children:"AddDate"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Add specified year, month, and day to the current time object."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) AddDate(years int, months int, days int) *Time\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Add specified year, month, and day to the current time object."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_AddDate() {\n      var (\n          year  = 1\n          month = 2\n          day   = 3\n      )\n      gt := gtime.New("2018-08-08 08:08:08")\n      gt = gt.AddDate(year, month, day)\n\n      fmt.Println(gt)\n\n      // Output:\n      // 2019-10-11 08:08:08\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"equal",children:(0,r.jsx)(n.code,{children:"Equal"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Check if two time objects are equal."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Equal(u *Time) bool\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Check if two time objects are equal."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_Equal() {\n      gt1 := gtime.New("2018-08-08 08:08:08")\n      gt2 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.Equal(gt2))\n\n      // Output:\n      // true\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"before",children:(0,r.jsx)(n.code,{children:"Before"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Determine the order of two time objects."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Before(u *Time) bool\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Determine the order of two time objects."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_Before() {\n      gt1 := gtime.New("2018-08-07 08:08:08")\n      gt2 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.Before(gt2))\n\n      // Output:\n      // true\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"after",children:(0,r.jsx)(n.code,{children:"After"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Determine the order of two time objects."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) After(u *Time) bool\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Determine the order of two time objects."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_After() {\n      gt1 := gtime.New("2018-08-07 08:08:08")\n      gt2 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.After(gt2))\n\n      // Output:\n      // false\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"layout",children:(0,r.jsx)(n.code,{children:"Layout"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Format output time."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) Layout(layout string) string\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Format output time."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_Layout() {\n      gt1 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.Layout("2006-01-02"))\n\n      // Output:\n      // 2018-08-08\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"isleapyear",children:(0,r.jsx)(n.code,{children:"IsLeapYear"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Check if it's a leap year."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) IsLeapYear() bool\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Check if it's a leap year."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_IsLeapYear() {\n      gt1 := gtime.New("2018-08-08 08:08:08")\n\n      fmt.Println(gt1.IsLeapYear())\n\n      // Output:\n      // false\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"date",children:(0,r.jsx)(n.code,{children:"Date"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Get the date."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func Date() string\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Get the date."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func ExampleDate() {\n      fmt.Println(gtime.Date())\n\n      // May Output:\n      // 2006-01-02\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"datetime",children:(0,r.jsx)(n.code,{children:"Datetime"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Get the datetime."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func Datetime() string\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example: Get the datetime."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func ExampleDatetime() {\n      fmt.Println(gtime.Datetime())\n\n      // May Output:\n      // 2006-01-02 15:04:05\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"iso8601",children:(0,r.jsx)(n.code,{children:"ISO8601"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Return time in ISO8601 format."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func ISO8601() string\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func ExampleISO8601() {\n      fmt.Println(gtime.ISO8601())\n\n      // May Output:\n      // 2006-01-02T15:04:05-07:00\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"rfc822",children:(0,r.jsx)(n.code,{children:"RFC822"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Description: Return time in RFC822 format."}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func RFC822() string\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func ExampleRFC822() {\n      fmt.Println(gtime.RFC822())\n\n      // May Output:\n      // Mon, 02 Jan 06 15:04 MST\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"strtotimeformat",children:(0,r.jsx)(n.code,{children:"StrToTimeFormat"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: ",(0,r.jsx)(n.code,{children:"StrToTimeFormat"})," returns time object based on the input time string and format."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func StrToTimeFormat(str string, format string) (*Time, error)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleStrToTimeFormat() {\n      res, _ := gtime.StrToTimeFormat("2006-01-02 15:04:05", "Y-m-d H:i:s")\n      fmt.Println(res)\n\n      // Output:\n      // 2006-01-02 15:04:05\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"strtotimelayout",children:(0,r.jsx)(n.code,{children:"StrToTimeLayout"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: ",(0,r.jsx)(n.code,{children:"StrToTimeLayout"})," returns time object based on the input time string and format."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func StrToTimeLayout(str string, layout string) (*Time, error)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleStrToTimeLayout() {\n      res, _ := gtime.StrToTimeLayout("2018-08-08", "2006-01-02")\n      fmt.Println(res)\n\n      // Output:\n      // 2018-08-08 00:00:00\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"marshaljson",children:(0,r.jsx)(n.code,{children:"MarshalJSON"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: ",(0,r.jsx)(n.code,{children:"MarshalJSON"})," overrides the method in ",(0,r.jsx)(n.code,{children:"json.Marshal"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) MarshalJSON() ([]byte, error)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_MarshalJSON() {\n      type Person struct {\n          Name string        `json:"name"`\n          Birthday *gtime.Time    `json:"birthday"`\n      }\n      p := new(Person)\n      p.Name = "goframe"\n      p.Birthday = gtime.New("2018-08-08 08:08:08")\n      j, _ := json.Marshal(p)\n      fmt.Println(string(j))\n\n      // Output:\n      // {"name":"xiaoming","birthday":"2018-08-08 08:08:08"}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"unmarshaljson",children:(0,r.jsx)(n.code,{children:"UnmarshalJSON"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: ",(0,r.jsx)(n.code,{children:"UnmarshalJSON"})," overrides the method in ",(0,r.jsx)(n.code,{children:"json.Unmarshal"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) UnmarshalJSON() ([]byte, error)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_MarshalJSON() {\n      type Person struct {\n          Name string        `json:"name"`\n          Birthday *gtime.Time    `json:"birthday"`\n      }\n      p := new(Person)\n      p.Name = "goframe"\n      p.Birthday = gtime.New("2018-08-08 08:08:08")\n      j, _ := json.Marshal(p)\n      fmt.Println(string(j))\n\n      // Output:\n      // {"name":"xiaoming","birthday":"2018-08-08 08:08:08"}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"weekofyear",children:(0,r.jsx)(n.code,{children:"WeekOfYear"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Description: ",(0,r.jsx)(n.code,{children:"WeekOfYear"})," returns the current week number of the year, starting from 1. Similar methods include ",(0,r.jsx)(n.code,{children:"DayOfYear/DaysInMonth"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Format:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (t *Time) WeeksOfYear() int\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func ExampleTime_WeeksOfYear() {\n      gt1 := gtime.New("2018-01-08 08:08:08")\n\n      fmt.Println(gt1.WeeksOfYear())\n\n      // Output:\n      // 2\n}D\n'})})]})}function m(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return c},a:function(){return s}});var t=i(667294);let r={},l=t.createContext(r);function s(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);