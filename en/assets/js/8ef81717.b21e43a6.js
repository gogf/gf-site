"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["46552"],{886645:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>p,assets:()=>c,toc:()=>l,frontMatter:()=>s});var r=JSON.parse('{"id":"docs/WEB\u670D\u52A1\u5F00\u53D1/HTTPClient/HTTPClient-\u81EA\u5B9A\u4E49Transport","title":"HTTPClient - Transport","description":"In the GoFrame framework, advanced usage of HTTPClient is achieved through custom Transport. This includes methods of client-server communication using Unix Socket and specific implementations for setting the size of the client connection pool parameters. The examples provide a wealth of real code snippets to help developers better understand and apply these techniques.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/WEB\u670D\u52A1\u5F00\u53D1/HTTPClient/HTTPClient-\u81EA\u5B9A\u4E49Transport.md","sourceDirName":"docs/WEB\u670D\u52A1\u5F00\u53D1/HTTPClient","slug":"/docs/web/http-client-transport","permalink":"/en/docs/web/http-client-transport","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/WEB\u670D\u52A1\u5F00\u53D1/HTTPClient/HTTPClient-\u81EA\u5B9A\u4E49Transport.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732451468000,"sidebarPosition":5,"frontMatter":{"slug":"/docs/web/http-client-transport","title":"HTTPClient - Transport","sidebar_position":5,"hide_title":true,"keywords":["GoFrame","GoFrame framework","HTTPClient","Transport","Unix Socket","Custom Transport","http.Client","gclient.Client","Client Connection Pool","MaxIdleConnsPerHost"],"description":"In the GoFrame framework, advanced usage of HTTPClient is achieved through custom Transport. This includes methods of client-server communication using Unix Socket and specific implementations for setting the size of the client connection pool parameters. The examples provide a wealth of real code snippets to help developers better understand and apply these techniques."},"sidebar":"mainSidebar","previous":{"title":"HTTPClient - ContentType","permalink":"/en/docs/web/http-client-content-type"},"next":{"title":"HTTPClient - Raw","permalink":"/en/docs/web/http-client-raw-request-response"}}'),o=t("785893"),i=t("250065");let s={slug:"/docs/web/http-client-transport",title:"HTTPClient - Transport",sidebar_position:5,hide_title:!0,keywords:["GoFrame","GoFrame framework","HTTPClient","Transport","Unix Socket","Custom Transport","http.Client","gclient.Client","Client Connection Pool","MaxIdleConnsPerHost"],description:"In the GoFrame framework, advanced usage of HTTPClient is achieved through custom Transport. This includes methods of client-server communication using Unix Socket and specific implementations for setting the size of the client connection pool parameters. The examples provide a wealth of real code snippets to help developers better understand and apply these techniques."},a=void 0,c={},l=[{value:"Using <code>Unix Socket</code>",id:"using-unix-socket",level:2},{value:"Setting Client Connection Pool Size Parameters",id:"setting-client-connection-pool-size-parameters",level:2}];function d(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Since ",(0,o.jsx)(n.code,{children:"gclient.Client"})," internally wraps and extends the ",(0,o.jsx)(n.code,{children:"http.Client"})," object from the standard library, any features available in ",(0,o.jsx)(n.code,{children:"http.Client"})," are also supported by ",(0,o.jsx)(n.code,{children:"gclient.Client"}),". Here, we are discussing examples of Transport usage. Let's look at a few examples:"]}),"\n",(0,o.jsxs)(n.h2,{id:"using-unix-socket",children:["Using ",(0,o.jsx)(n.code,{children:"Unix Socket"})]}),"\n",(0,o.jsxs)(n.p,{children:["The client and server communicate using ",(0,o.jsx)(n.code,{children:"Unix Socket"}),", implemented using ",(0,o.jsx)(n.code,{children:"Transport"}),". The following code is excerpts from a real project and cannot run independently, only for reference."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'func (*Guardian) ConvertContainerPathToHostPath(\n    ctx context.Context, namespace, podName, containerName, containerPath string,\n) (string, error) {\n    var (\n        client = g.Client()\n        url    = "http://localhost/api/v1/pod/path"\n        req    = webservice.HostPathInfoReq{\n            Namespace:     namespace,\n            PodName:       podName,\n            ContainerName: containerName,\n            ContainerPath: containerPath,\n        }\n        res *webservice.HostPathInfoRes\n    )\n    client.Transport = &http.Transport{\n        DialContext: func(ctx context.Context, network, addr string) (net.Conn, error) {\n            return net.Dial("unix", serviceSocketPath)\n        },\n    }\n    err := client.ContentJson().GetVar(ctx, url, req).Scan(&res)\n    if err != nil {\n        return "", gerror.Wrapf(\n            err,\n            `request guardian failed for url: %s, req: %s`,\n            url, gjson.MustEncodeString(req),\n        )\n    }\n    if res == nil {\n        return "", gerror.Newf(\n            `nil response from guardian request url: %s, req: %s`,\n            url, gjson.MustEncodeString(req),\n        )\n    }\n    return res.HostPath, nil\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"setting-client-connection-pool-size-parameters",children:"Setting Client Connection Pool Size Parameters"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'func ExampleNew_MultiConn_Recommend() {\n    var (\n        ctx    = gctx.New()\n        client = g.Client()\n    )\n\n    // controls the maximum idle (keep-alive) connections to keep per-host\n    client.Transport.(*http.Transport).MaxIdleConnsPerHost = 5\n\n    for i := 0; i < 5; i++ {\n        go func() {\n            if r, err := client.Get(ctx, "http://127.0.0.1:8999/var/json"); err != nil {\n                panic(err)\n            } else {\n                fmt.Println(r.ReadAllString())\n                r.Close()\n            }\n        }()\n    }\n\n    time.Sleep(time.Second * 1)\n\n    // Output:\n    //{"id":1,"name":"john"}\n    //{"id":1,"name":"john"}\n    //{"id":1,"name":"john"}\n    //{"id":1,"name":"john"}\n    //{"id":1,"name":"john"}\n}\n'})})]})}function p(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var r=t(667294);let o={},i=r.createContext(o);function s(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);