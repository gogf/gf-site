"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["28176"],{693769:function(e,n,t){t.r(n),t.d(n,{metadata:()=>a,contentTitle:()=>l,default:()=>p,assets:()=>s,toc:()=>d,frontMatter:()=>o});var a=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u53EF\u9009\u6821\u9A8C","title":"Data Validation - Optional Rule","description":"Using the GoFrame framework for data validation, especially focusing on the use of optional validation rules. When the validation rules do not include \'required\', optional validation rules do not enforce validation on empty strings or nil values. The document provides multiple practical code examples to demonstrate the process and considerations for implementing optional data validation with the GoFrame framework in Go language, suitable for developers to apply in projects.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u53EF\u9009\u6821\u9A8C.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u6821\u9A8C","slug":"/docs/core/gvalid-optional-rule","permalink":"/en/docs/core/gvalid-optional-rule","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6570\u636E\u6821\u9A8C/\u6570\u636E\u6821\u9A8C-\u53EF\u9009\u6821\u9A8C.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732440306000,"sidebarPosition":4,"frontMatter":{"slug":"/docs/core/gvalid-optional-rule","title":"Data Validation - Optional Rule","sidebar_position":4,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","Data Validation","Optional Validation","Validation Rules","Example","Validation Component","Parameter Validation","Programming","GoFrame Framework"],"description":"Using the GoFrame framework for data validation, especially focusing on the use of optional validation rules. When the validation rules do not include \'required\', optional validation rules do not enforce validation on empty strings or nil values. The document provides multiple practical code examples to demonstrate the process and considerations for implementing optional data validation with the GoFrame framework in Go language, suitable for developers to apply in projects."},"sidebar":"mainSidebar","previous":{"title":"Struct Validation - Assoc","permalink":"/en/docs/core/gvalid-parameter-type-struct-assoc"},"next":{"title":"Data Validation - Recursive","permalink":"/en/docs/core/gvalid-recursive-validating"}}'),i=t("785893"),r=t("250065");let o={slug:"/docs/core/gvalid-optional-rule",title:"Data Validation - Optional Rule",sidebar_position:4,hide_title:!0,keywords:["GoFrame","GoFrame Framework","Data Validation","Optional Validation","Validation Rules","Example","Validation Component","Parameter Validation","Programming","GoFrame Framework"],description:"Using the GoFrame framework for data validation, especially focusing on the use of optional validation rules. When the validation rules do not include 'required', optional validation rules do not enforce validation on empty strings or nil values. The document provides multiple practical code examples to demonstrate the process and considerations for implementing optional data validation with the GoFrame framework in Go language, suitable for developers to apply in projects."},l=void 0,s={},d=[{value:"Optional Validation Rules",id:"optional-validation-rules",level:2},{value:"Example 1: Empty String",id:"example-1-empty-string",level:2},{value:"Example 2: Null Pointer Attribute",id:"example-2-null-pointer-attribute",level:2},{value:"Example 3: Empty Integer Attribute",id:"example-3-empty-integer-attribute",level:2},{value:"Example 4: Parameter Passing Through <code>map</code>",id:"example-4-parameter-passing-through-map",level:2}];function c(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"optional-validation-rules",children:"Optional Validation Rules"}),"\n",(0,i.jsxs)(n.p,{children:["When the given data validation rules do not include the ",(0,i.jsx)(n.code,{children:"required*"})," rule, it indicates that the rule is not a mandatory rule. If the given value is ",(0,i.jsx)(n.code,{children:"nil"})," or an ",(0,i.jsx)(n.code,{children:"empty string"}),", its validation will be ignored."]}),"\n",(0,i.jsx)(n.h2,{id:"example-1-empty-string",children:"Example 1: Empty String"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    type Params struct {\n        Page      int    `v:"required|min:1         # page is required"`\n        Size      int    `v:"required|between:1,100 # size is required"`\n        ProjectId string `v:"between:1,10000        # project id must between {min}, {max}"`\n    }\n    var (\n        ctx = gctx.New()\n        obj = &Params{\n            Page: 1,\n            Size: 10,\n        }\n    )\n\n    err := g.Validator().Data(obj).Run(ctx)\n    fmt.Println(err)\n\n    // Output:\n    // <nil>\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example-2-null-pointer-attribute",children:"Example 2: Null Pointer Attribute"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gvar"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    type Params struct {\n        Page      int       `v:"required|min:1         # page is required"`\n        Size      int       `v:"required|between:1,100 # size is required"`\n        ProjectId *gvar.Var `v:"between:1,10000        # project id must between {min}, {max}"`\n    }\n    var (\n        ctx = gctx.New()\n        obj = &Params{\n            Page: 1,\n            Size: 10,\n        }\n    )\n    err := g.Validator().Data(obj).Run(ctx)\n    fmt.Println(err)\n\n    // Output:\n    // <nil>\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example-3-empty-integer-attribute",children:"Example 3: Empty Integer Attribute"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Note that if the key value is ",(0,i.jsx)(n.code,{children:"0"})," or ",(0,i.jsx)(n.code,{children:"false"}),", the parameter value will still be validated."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    type Params struct {\n        Page      int `v:"required|min:1         # page is required"`\n        Size      int `v:"required|between:1,100 # size is required"`\n        ProjectId int `v:"between:1,10000        # project id must between {min}, {max}"`\n    }\n    var (\n        ctx = gctx.New()\n        obj = &Params{\n            Page: 1,\n            Size: 10,\n        }\n    )\n    err := g.Validator().Data(obj).Run(ctx)\n    fmt.Println(err)\n\n    // Output:\n    // <nil>\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"After execution, the terminal outputs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"project id must between 1, 10000\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"example-4-parameter-passing-through-map",children:["Example 4: Parameter Passing Through ",(0,i.jsx)(n.code,{children:"map"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"\n)\n\nfunc main() {\n    var (\n        ctx    = gctx.New()\n        params = map[string]interface{}{\n            "passport":  "",\n            "password":  "123456",\n            "password2": "1234567",\n        }\n        rules = []string{\n            "passport@length:6,16",\n            "password@required|length:6,16|same:password2",\n            "password2@required|length:6,16",\n        }\n    )\n    err := g.Validator().Rules(rules).Data(params).Run(ctx)\n    if err != nil {\n        g.Dump(err.Maps())\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Note that the ",(0,i.jsx)(n.code,{children:"passport"})," key does not have the ",(0,i.jsx)(n.code,{children:"required"})," rule, so even if the given ",(0,i.jsx)(n.code,{children:"passport"})," parameter is an empty string and does not meet the rule, it does not trigger an error, since the validation component considers it an optional validation rule."]}),"\n",(0,i.jsx)(n.p,{children:"After execution, the terminal outputs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n    "password": {\n        "same": "The password value `123456` must be the same as field password2",\n    },\n}\n'})})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return o}});var a=t(667294);let i={},r=a.createContext(i);function o(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);