"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["9311"],{944053:function(e,t,i){i.r(t),i.d(t,{metadata:()=>n,contentTitle:()=>l,default:()=>m,assets:()=>c,toc:()=>d,frontMatter:()=>a});var n=JSON.parse('{"id":"examples/observability/metric/dynamic_attributes/dynamic_attributes","title":"Dynamic Attributes","description":"dynamic metric attributes in GoFrame","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/examples/observability/metric/dynamic_attributes/dynamic_attributes.md","sourceDirName":"examples/observability/metric/dynamic_attributes","slug":"/examples/observability/metric/dynamic_attributes","permalink":"/en/examples/observability/metric/dynamic_attributes","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/examples/observability/metric/dynamic_attributes/dynamic_attributes.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1740107000000,"frontMatter":{"title":"Dynamic Attributes","slug":"/examples/observability/metric/dynamic_attributes","keywords":["metrics","dynamic attributes","prometheus","opentelemetry","goframe"],"description":"dynamic metric attributes in GoFrame","hide_title":true},"sidebar":"examplesSidebar","previous":{"title":"Callback","permalink":"/en/examples/observability/metric/callback"},"next":{"title":"Global Attributes","permalink":"/en/examples/observability/metric/global_attributes"}}'),r=i("785893"),s=i("250065");let a={title:"Dynamic Attributes",slug:"/examples/observability/metric/dynamic_attributes",keywords:["metrics","dynamic attributes","prometheus","opentelemetry","goframe"],description:"dynamic metric attributes in GoFrame",hide_title:!0},l="Metric - Dynamic Attributes Example",c={},d=[{value:"Description",id:"description",level:2},{value:"Structure",id:"structure",level:2},{value:"Features",id:"features",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Notes",id:"notes",level:2}];function o(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"metric---dynamic-attributes-example",children:"Metric - Dynamic Attributes Example"})}),"\n",(0,r.jsxs)(t.p,{children:["Github Source: ",(0,r.jsx)(t.a,{href:"https://github.com/gogf/examples/tree/main/observability/metric/dynamic_attributes",children:"https://github.com/gogf/examples/tree/main/observability/metric/dynamic_attributes"})]}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["This example demonstrates how to work with dynamic metric attributes in ",(0,r.jsx)(t.code,{children:"GoFrame"})," using ",(0,r.jsx)(t.code,{children:"OpenTelemetry"})," and ",(0,r.jsx)(t.code,{children:"Prometheus"})," integration. It shows how to:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Add dynamic attributes to metrics at runtime"}),"\n",(0,r.jsx)(t.li,{children:"Combine constant and dynamic attributes"}),"\n",(0,r.jsx)(t.li,{children:"Use attributes in both regular and observable metrics"}),"\n",(0,r.jsx)(t.li,{children:"Export metrics with dynamic attributes"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"structure",children:"Structure"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"- `go.mod`: The Go module file for dependency management\n- `go.sum`: The Go module checksums file\n- `main.go`: The main application demonstrating dynamic metric attributes\n"})}),"\n",(0,r.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,r.jsx)(t.p,{children:"The example showcases the following features:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Dynamic Attributes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Runtime attribute assignment"}),"\n",(0,r.jsx)(t.li,{children:"Attribute combination"}),"\n",(0,r.jsx)(t.li,{children:"Value-based attributes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Metric Types with Attributes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Counter with dynamic attributes"}),"\n",(0,r.jsx)(t.li,{children:"Observable Counter with dynamic attributes"}),"\n",(0,r.jsx)(t.li,{children:"Constant attribute baseline"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Attribute Management"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Attribute creation"}),"\n",(0,r.jsx)(t.li,{children:"Value typing"}),"\n",(0,r.jsx)(t.li,{children:"Attribute scoping"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://golang.org/dl/",children:"Go"})," ",(0,r.jsx)(t.code,{children:"1.22"})," or higher"]}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://git-scm.com/downloads",children:"Git"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://goframe.org",children:"GoFrame"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://github.com/gogf/gf/tree/master/contrib/metric/otelmetric",children:"GoFrame OpenTelemetry Metric"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Run the example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"go run main.go\n"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Access the metrics:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"# Using curl\ncurl http://localhost:8000/metrics\n\n# Or open in browser\nhttp://localhost:8000/metrics\n"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Example metrics output:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'# HELP goframe_metric_demo_counter This is a simple demo for Counter usage\ngoframe_metric_demo_counter{const_attr_1="1",dynamic_attr_2="2"} 11\n\n# HELP goframe_metric_demo_observable_counter This is a simple demo for ObservableCounter usage\ngoframe_metric_demo_observable_counter{const_attr_4="4",dynamic_attr_1="1"} 10\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(t.p,{children:"The example demonstrates:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Creating metrics with constant attributes"}),"\n",(0,r.jsx)(t.li,{children:"Adding dynamic attributes at runtime"}),"\n",(0,r.jsx)(t.li,{children:"Combining different attribute types"}),"\n",(0,r.jsx)(t.li,{children:"Attribute scoping and inheritance"}),"\n",(0,r.jsx)(t.li,{children:"Proper attribute value typing"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Dynamic attributes are added per observation"}),"\n",(0,r.jsx)(t.li,{children:"Constant attributes are always present"}),"\n",(0,r.jsx)(t.li,{children:"Attributes can be of various types"}),"\n",(0,r.jsx)(t.li,{children:"Consider cardinality when using dynamic attributes"}),"\n",(0,r.jsx)(t.li,{children:"High cardinality can impact performance"}),"\n",(0,r.jsx)(t.li,{children:"Default port is 8000"}),"\n",(0,r.jsx)(t.li,{children:"Metrics endpoint is at /metrics"}),"\n"]})]})}function m(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},250065:function(e,t,i){i.d(t,{Z:function(){return l},a:function(){return a}});var n=i(667294);let r={},s=n.createContext(r);function a(e){let t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);