"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["85523"],{384363:function(e,n,s){s.r(n),s.d(n,{metadata:()=>o,contentTitle:()=>d,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>r});var o=JSON.parse('{"id":"docs/\u9879\u76EE\u90E8\u7F72/\u72EC\u7ACB\u90E8\u7F72","title":"Deployment - Standalone","description":"Standalone deployment of applications developed using the GoFrame framework, suitable for *nix series servers like Linux and MacOS. The article provides detailed explanations on setting up and managing background daemon processes on Ubuntu systems using tools like nohup, tmux, supervisor, systemctl, and screen. Additionally, it includes guidance on using the NSSM tool on Windows systems.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u9879\u76EE\u90E8\u7F72/\u72EC\u7ACB\u90E8\u7F72.md","sourceDirName":"docs/\u9879\u76EE\u90E8\u7F72","slug":"/docs/deploy/standalone","permalink":"/en/docs/deploy/standalone","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u9879\u76EE\u90E8\u7F72/\u72EC\u7ACB\u90E8\u7F72.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732451468000,"sidebarPosition":0,"frontMatter":{"slug":"/docs/deploy/standalone","title":"Deployment - Standalone","sidebar_position":0,"hide_title":true,"keywords":["GoFrame","GoFrame framework","standalone deployment","server deployment","nix server","Ubuntu deployment","background daemon process","process management","Linux","Windows"],"description":"Standalone deployment of applications developed using the GoFrame framework, suitable for *nix series servers like Linux and MacOS. The article provides detailed explanations on setting up and managing background daemon processes on Ubuntu systems using tools like nohup, tmux, supervisor, systemctl, and screen. Additionally, it includes guidance on using the NSSM tool on Windows systems."},"sidebar":"mainSidebar","previous":{"title":"Project Deployment","permalink":"/en/docs/deploy"},"next":{"title":"Deployment - Proxy","permalink":"/en/docs/deploy/proxy"}}'),i=s("785893"),t=s("250065");let r={slug:"/docs/deploy/standalone",title:"Deployment - Standalone",sidebar_position:0,hide_title:!0,keywords:["GoFrame","GoFrame framework","standalone deployment","server deployment","nix server","Ubuntu deployment","background daemon process","process management","Linux","Windows"],description:"Standalone deployment of applications developed using the GoFrame framework, suitable for *nix series servers like Linux and MacOS. The article provides detailed explanations on setting up and managing background daemon processes on Ubuntu systems using tools like nohup, tmux, supervisor, systemctl, and screen. Additionally, it includes guidance on using the NSSM tool on Windows systems."},d=void 0,c={},l=[{value:"*nix",id:"nix",level:2},{value:"1. <code>nohup</code>",id:"1-nohup",level:3},{value:"2. <code>tmux</code>",id:"2-tmux",level:3},{value:"3. <code>supervisor</code>",id:"3-supervisor",level:3},{value:"4. <code>systemctl</code>",id:"4-systemctl",level:3},{value:"5. <code>screen</code>",id:"5-screen",level:3},{value:"windows",id:"windows",level:2},{value:"1. <code>NSSM</code>",id:"1-nssm",level:3}];function a(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Applications developed using ",(0,i.jsx)(n.code,{children:"GoFrame"})," can be independently deployed on servers to run as background daemon processes. This mode is commonly used in simple API service projects."]}),"\n",(0,i.jsxs)(n.p,{children:["We recommend using the ",(0,i.jsx)(n.code,{children:"*nix"})," server series (including: ",(0,i.jsx)(n.code,{children:"Linux"}),", ",(0,i.jsx)(n.code,{children:"MacOS"}),", ",(0,i.jsx)(n.code,{children:"*BSD"}),"). Below, we use the ",(0,i.jsx)(n.code,{children:"Ubuntu"})," system as an example to introduce how to deploy projects developed using the ",(0,i.jsx)(n.code,{children:"GoFrame"})," framework."]}),"\n",(0,i.jsx)(n.h2,{id:"nix",children:"*nix"}),"\n",(0,i.jsxs)(n.h3,{id:"1-nohup",children:["1. ",(0,i.jsx)(n.code,{children:"nohup"})]}),"\n",(0,i.jsxs)(n.p,{children:["We can use the simple ",(0,i.jsx)(n.code,{children:"nohup"})," command to run the application as a background daemon process so that even if a remote SSH connection is disconnected, the program's execution will not be affected. The ",(0,i.jsx)(n.code,{children:"nohup"})," command tool is often pre-installed in popular Linux distributions. The command is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nohup ./gf-app &\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"2-tmux",children:["2. ",(0,i.jsx)(n.code,{children:"tmux"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"tmux"})," is a terminal multiplexer tool under ",(0,i.jsx)(n.code,{children:"Linux"})," that can open different terminal windows to run applications as background daemon processes. Even if the remote ",(0,i.jsx)(n.code,{children:"SSH"})," connection is disconnected, the program's execution will not be affected. Install it directly on the ",(0,i.jsx)(n.code,{children:"ubuntu"})," system using ",(0,i.jsx)(n.code,{children:"sudo apt-get install tmux"}),". Use the following steps to run the application in the background."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tmux new -s gf-app"}),";"]}),"\n",(0,i.jsxs)(n.li,{children:["Execute ",(0,i.jsx)(n.code,{children:"./gf-app"})," in the new terminal window;"]}),"\n",(0,i.jsxs)(n.li,{children:["Use the shortcut ",(0,i.jsx)(n.code,{children:"ctrl"})," + ",(0,i.jsx)(n.code,{children:"B & D"})," to exit the current terminal window;"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"tmux attach -t gf-app"})," to enter the previous terminal window;"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"3-supervisor",children:["3. ",(0,i.jsx)(n.code,{children:"supervisor"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"supervisor"})," is a universal process control program developed in ",(0,i.jsx)(n.code,{children:"Python"}),", capable of transforming a normal command-line process into a background ",(0,i.jsx)(n.code,{children:"daemon"})," and monitoring the process status, automatically restarting it if it exits abnormally. Official website: ",(0,i.jsx)(n.a,{href:"http://supervisord.org/",children:"http://supervisord.org/"})," Common configuration is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"[program:gf-app]\nuser           = root\ndirectory      = /var/www\ncommand        = /var/www/main\nstdout_logfile = /var/log/gf-app-stdout.log\nstderr_logfile = /var/log/gf-app-stderr.log\nautostart      = true\nautorestart    = true\n"})}),"\n",(0,i.jsx)(n.p,{children:"The steps are as follows:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"sudo service supervisor start"})," to start the ",(0,i.jsx)(n.code,{children:"supervisor"})," service;"]}),"\n",(0,i.jsxs)(n.li,{children:["Create an application configuration file ",(0,i.jsx)(n.code,{children:"/etc/supervisor/conf.d/gf-app.conf"}),", with the content as above;"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"sudo supervisorctl"})," to enter the ",(0,i.jsx)(n.code,{children:"supervisor"})," management terminal;"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"reload"})," to reread the configuration file and restart all processes managed by ",(0,i.jsx)(n.code,{children:"supervisor"}),";"]}),"\n",(0,i.jsxs)(n.li,{children:["You can also use ",(0,i.jsx)(n.code,{children:"update"})," to reload the configuration (default without restarting) and then use ",(0,i.jsx)(n.code,{children:"start gf-app"})," to start the specified application;"]}),"\n",(0,i.jsxs)(n.li,{children:["Then use the ",(0,i.jsx)(n.code,{children:"status"})," command to view the status of the processes managed by ",(0,i.jsx)(n.code,{children:"supervisor"}),";"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Sharing pitfalls:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["After changing the ",(0,i.jsx)(n.code,{children:"conf"})," configuration file, execute ",(0,i.jsx)(n.code,{children:"reload"})," in ",(0,i.jsx)(n.code,{children:"supervisorctl"})," to update and use the latest configuration."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"directory"})," configuration usually cannot be omitted, specifying the current working directory path, and must be configured before ",(0,i.jsx)(n.code,{children:"command"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"command"})," needs to use an absolute path; otherwise, it will not find the executable file."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"4-systemctl",children:["4. ",(0,i.jsx)(n.code,{children:"systemctl"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Systemd"})," is a ",(0,i.jsx)(n.code,{children:"Linux"})," system tool used to start daemon processes, and it has become the standard configuration for most distributions."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"systemctl"})," is the main command of ",(0,i.jsx)(n.code,{children:"Systemd"})," used to manage the system. You can refer to ",(0,i.jsx)(n.a,{href:"http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html",children:"Ruan Yifeng's interpretation of Systemd"}),", particularly sections four and five."]}),"\n",(0,i.jsxs)(n.p,{children:["In fact, most of our services are managed with ",(0,i.jsx)(n.code,{children:"systemctl"}),", such as ",(0,i.jsx)(n.code,{children:"MySQL, Nginx"}),", etc."]}),"\n",(0,i.jsx)(n.p,{children:"Common configuration is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"[Unit]\n# Unit description\nDescription=GF APP\n# Execute this program after what service starts\nAfter=mysql.service\n\n[Service]\nType=simple\n# Directory of program execution\nWorkingDirectory=/data/server/gfapp/\n# Startup script command\nExecStart=/data/server/gfapp/gfapp\n# Restart conditions\nRestart=always\n# Seconds to restart\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,i.jsx)(n.p,{children:"Usage:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create an application configuration file ",(0,i.jsx)(n.code,{children:"/etc/systemd/system/gfapp.service"}),", with the content as above;"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"systemctl daemon-reload"})," to reload services;"]}),"\n",(0,i.jsxs)(n.li,{children:["Execute ",(0,i.jsx)(n.code,{children:"systemctl start gfapp"})," to start the service;"]}),"\n",(0,i.jsxs)(n.li,{children:["Finally, execute ",(0,i.jsx)(n.code,{children:"systemctl status gfapp"})," to view the service running status information;"]}),"\n",(0,i.jsxs)(n.li,{children:["Execute ",(0,i.jsx)(n.code,{children:"systemctl enable gfapp"})," to add the service to the boot startup items;"]}),"\n",(0,i.jsxs)(n.li,{children:["Note: The executed ",(0,i.jsx)(n.code,{children:"gfapp"})," uses the file name as the service name;"]}),"\n",(0,i.jsxs)(n.li,{children:["Common commands are: ",(0,i.jsx)(n.code,{children:"start(start), stop(stop), restart(restart), status(view running status), enable(add to boot startup), disable(remove program from boot startup)"})]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"5-screen",children:["5. ",(0,i.jsx)(n.code,{children:"screen"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Screen"})," is a free software developed under the ",(0,i.jsx)(n.code,{children:"GNU"})," project for command-line terminal switching. Users can connect to multiple local or remote command-line sessions simultaneously and switch between them freely. ",(0,i.jsx)(n.code,{children:"GNU Screen"})," can be considered a command-line interface version of a window manager. It provides a unified interface and corresponding functionality for managing multiple sessions."]}),"\n",(0,i.jsx)(n.p,{children:"Installation:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"sudo apt install -y screen"})," ( ",(0,i.jsx)(n.code,{children:"debian"})," series)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"sudo yum install -y screen"}),"\xa0 ( ",(0,i.jsx)(n.code,{children:"centos"}),")"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common parameters:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"screen -S yourname"})," -> Create a session called yourname"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"screen -ls"})," -> List all current sessions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"screen -r yourname"})," -> Return to yourname session"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"screen -d yourname"})," -> Remotely detach a session"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"screen -d -r yourname"})," -> End the current session and return to yourname session"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the command ",(0,i.jsx)(n.code,{children:"screen -S gfapp"})," to create a session;"]}),"\n",(0,i.jsxs)(n.li,{children:["Execute ",(0,i.jsx)(n.code,{children:"./gf-app"})," in the new terminal window;"]}),"\n",(0,i.jsxs)(n.li,{children:["Execute ",(0,i.jsx)(n.code,{children:"ctrl-a, ctrl-d"})," to temporarily leave the current session;"]}),"\n",(0,i.jsxs)(n.li,{children:["Execute ",(0,i.jsx)(n.code,{children:"screen -r gfapp"})," to return to the command window; if not successful, the window might be occupied (",(0,i.jsx)(n.code,{children:"Attached"}),"), try ",(0,i.jsx)(n.code,{children:"screen -Dr gfapp"}),";"]}),"\n",(0,i.jsxs)(n.li,{children:["Execute ",(0,i.jsx)(n.code,{children:"screen -X -S gfapp quit"})," to end the program;"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"windows",children:"windows"}),"\n",(0,i.jsxs)(n.h3,{id:"1-nssm",children:["1. ",(0,i.jsx)(n.code,{children:"NSSM"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://zhuanlan.zhihu.com/p/455904037",children:"Small and Practical NSSM Packaging Windows Service Tool Introduction - Zhihu (zhihu.com)"})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return d},a:function(){return r}});var o=s(667294);let i={},t=o.createContext(i);function r(e){let n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);