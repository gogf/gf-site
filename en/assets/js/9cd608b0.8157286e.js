"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["72616"],{285973:function(n,e,o){o.r(e),o.d(e,{metadata:()=>t,contentTitle:()=>i,default:()=>l,assets:()=>c,toc:()=>d,frontMatter:()=>a});var t=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-\u6570\u636E\u683C\u5F0F\u8F6C\u6362","title":"General Codec - Data Format","description":"Data format conversion using the GoFrame framework, including mutual conversion among JSON, XML, YAML, TOML, and other formats, with an example code provided. Using the gjson library, the Must* methods can ensure safe data format conversion.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-\u6570\u636E\u683C\u5F0F\u8F6C\u6362.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson","slug":"/docs/components/encoding-gjson-format-converting","permalink":"/en/docs/components/encoding-gjson-format-converting","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-\u6570\u636E\u683C\u5F0F\u8F6C\u6362.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":4,"frontMatter":{"slug":"/docs/components/encoding-gjson-format-converting","title":"General Codec - Data Format","sidebar_position":4,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","Data Format Conversion","gjson","JSON","XML","YAML","TOML","Codec","API Documentation"],"description":"Data format conversion using the GoFrame framework, including mutual conversion among JSON, XML, YAML, TOML, and other formats, with an example code provided. Using the gjson library, the Must* methods can ensure safe data format conversion."},"sidebar":"mainSidebar","previous":{"title":"General Codec - Dynamic Creation and Modification","permalink":"/en/docs/components/encoding-gjson-dynamic-creating-and-editing"},"next":{"title":"General Codec - Methods","permalink":"/en/docs/components/encoding-gjson-funcs"}}'),r=o("785893"),s=o("250065");let a={slug:"/docs/components/encoding-gjson-format-converting",title:"General Codec - Data Format",sidebar_position:4,hide_title:!0,keywords:["GoFrame","GoFrame Framework","Data Format Conversion","gjson","JSON","XML","YAML","TOML","Codec","API Documentation"],description:"Data format conversion using the GoFrame framework, including mutual conversion among JSON, XML, YAML, TOML, and other formats, with an example code provided. Using the gjson library, the Must* methods can ensure safe data format conversion."},i=void 0,c={},d=[];function m(n){let e={a:"a",code:"code",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["There are many methods for data format conversion, please refer to the API documentation: ",(0,r.jsx)(e.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/encoding/gjson",children:"https://pkg.go.dev/github.com/gogf/gf/v2/encoding/gjson"})]}),"\n",(0,r.jsxs)(e.p,{children:["It is important to note that there are some ",(0,r.jsx)(e.code,{children:"Must*"})," conversion methods which ensure conversion to the specified data format, otherwise a ",(0,r.jsx)(e.code,{children:"panic"})," occurs."]}),"\n",(0,r.jsx)(e.p,{children:"Let's look at an example to illustrate."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'data :=\n    `{\n    "users" : {\n        "count" : 1,\n        "array" : ["John", "Ming"]\n    }\n}`\nif j, err := gjson.DecodeToJson(data); err != nil {\n    panic(err)\n} else {\n    fmt.Println("JSON:")\n    fmt.Println(j.MustToJsonString())\n    fmt.Println("======================")\n\n    fmt.Println("XML:")\n    fmt.Println(j.MustToXmlString())\n    fmt.Println("======================")\n\n    fmt.Println("YAML:")\n    fmt.Println(j.MustToYamlString())\n    fmt.Println("======================")\n\n    fmt.Println("TOML:")\n    fmt.Println(j.MustToTomlString())\n}\n\n// Output:\n// JSON:\n// {"users":{"array":["John","Ming"],"count":1}}\n// ======================\n// XML:\n// <users><array>John</array><array>Ming</array><count>1</count></users>\n// ======================\n// YAML:\n// users:\n//     array:\n//       - John\n//       - Ming\n//     count: 1\n//\n// ======================\n// TOML:\n// [users]\n//   array = ["John", "Ming"]\n//   count = 1.0\n'})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"gjson"})," supports converting ",(0,r.jsx)(e.code,{children:"JSON"})," to other common data formats, currently supporting mutual conversion among: ",(0,r.jsx)(e.code,{children:"JSON"}),", ",(0,r.jsx)(e.code,{children:"XML"}),", ",(0,r.jsx)(e.code,{children:"INI"}),", ",(0,r.jsx)(e.code,{children:"YAML/YML"}),", ",(0,r.jsx)(e.code,{children:"TOML"}),", ",(0,r.jsx)(e.code,{children:"PROPERTIES"}),", and ",(0,r.jsx)(e.code,{children:"Struct"})," data formats."]})]})}function l(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(m,{...n})}):m(n)}},250065:function(n,e,o){o.d(e,{Z:function(){return i},a:function(){return a}});var t=o(667294);let r={},s=t.createContext(r);function a(n){let e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);