"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["6797"],{84514:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>t,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>d});var i=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u4EFB\u52A1-gcron/\u5B9A\u65F6\u4EFB\u52A1-\u8868\u8FBE\u5F0F","title":"Cron Job - Expressions","description":"cron expressions in the GoFrame framework and their usage tips. The cron expression consists of six fields, enabling time scheduling from seconds to weeks. It explains the significance of special characters and their application in expressions, making task scheduling more flexible and reliable through various predefined formats and interval configurations.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u4EFB\u52A1-gcron/\u5B9A\u65F6\u4EFB\u52A1-\u8868\u8FBE\u5F0F.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u4EFB\u52A1-gcron","slug":"/docs/components/os-gcron-pattern","permalink":"/en/docs/components/os-gcron-pattern","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u4EFB\u52A1-gcron/\u5B9A\u65F6\u4EFB\u52A1-\u8868\u8FBE\u5F0F.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":0,"frontMatter":{"slug":"/docs/components/os-gcron-pattern","title":"Cron Job - Expressions","sidebar_position":0,"hide_title":true,"keywords":["GoFrame","Scheduled Tasks","cron Expressions","Linux Crontab","Time Scheduling","Special Characters","Time Interval","Expression Examples","Predefined Formats","Second-Level Scheduling"],"description":"cron expressions in the GoFrame framework and their usage tips. The cron expression consists of six fields, enabling time scheduling from seconds to weeks. It explains the significance of special characters and their application in expressions, making task scheduling more flexible and reliable through various predefined formats and interval configurations."},"sidebar":"mainSidebar","previous":{"title":"Cron Job","permalink":"/en/docs/components/os-gcron"},"next":{"title":"Cron Job - Usage","permalink":"/en/docs/components/os-gcron-example"}}'),r=s("785893"),o=s("250065");let d={slug:"/docs/components/os-gcron-pattern",title:"Cron Job - Expressions",sidebar_position:0,hide_title:!0,keywords:["GoFrame","Scheduled Tasks","cron Expressions","Linux Crontab","Time Scheduling","Special Characters","Time Interval","Expression Examples","Predefined Formats","Second-Level Scheduling"],description:"cron expressions in the GoFrame framework and their usage tips. The cron expression consists of six fields, enabling time scheduling from seconds to weeks. It explains the significance of special characters and their application in expressions, making task scheduling more flexible and reliable through various predefined formats and interval configurations."},t=void 0,c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Special Characters",id:"special-characters",level:2},{value:"Asterisk (<code>*</code>)",id:"asterisk-",level:4},{value:"Slash (<code>/</code>)",id:"slash-",level:4},{value:"Comma (<code>,</code>)",id:"comma-",level:4},{value:"Hyphen (<code>-</code>)",id:"hyphen--",level:4},{value:"Ignore Sign (<code>#</code>)",id:"ignore-sign-",level:4},{value:"Question Mark (<code>?</code>)",id:"question-mark-",level:4},{value:"Predefined Formats",id:"predefined-formats",level:4},{value:"Intervals",id:"intervals",level:4},{value:"Expression Examples",id:"expression-examples",level:2},{value:"Notes \uD83D\uDD25",id:"notes-",level:2}];function a(e){let n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"cron expression"})," represents a set of times, using ",(0,r.jsx)(n.code,{children:"6"})," space-separated fields."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Seconds Minutes Hours Day Month Week\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["i.e., ",(0,r.jsx)(n.code,{children:"\u79D2 \u5206 \u65F6 \u65E5 \u6708 \u5468"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The meaning of each field is as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Field name    | Allowed values  | Allowed special characters\n----------    | --------------  | --------------------------\nSeconds       | 0-59            | * / , - #\nMinutes       | 0-59            | * / , -\nHours         | 0-23            | * / , -\nDay           | 1-31            | * / , - ?\nMonth         | 1-12 or JAN-DEC | * / , -\nWeek          | 0-6 or SUN-SAT  | * / , - ?\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["Month and week field values are case-insensitive. For example, ",(0,r.jsx)(n.code,{children:"SUN"}),", ",(0,r.jsx)(n.code,{children:"Sun"}),", and ",(0,r.jsx)(n.code,{children:"sun"})," are equally accepted."]})}),"\n",(0,r.jsx)(n.h2,{id:"special-characters",children:"Special Characters"}),"\n",(0,r.jsxs)(n.h4,{id:"asterisk-",children:["Asterisk (",(0,r.jsx)(n.code,{children:"*"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["An asterisk means that the ",(0,r.jsx)(n.code,{children:"cron"})," expression will match all values. For example, using an asterisk in the fifth field (",(0,r.jsx)(n.code,{children:"Month"}),") means every month."]}),"\n",(0,r.jsxs)(n.h4,{id:"slash-",children:["Slash (",(0,r.jsx)(n.code,{children:"/"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Slash is used to describe increments of ranges. For instance, using ",(0,r.jsx)(n.code,{children:"3-59/15"})," in the second field means executing every ",(0,r.jsx)(n.code,{children:"15"})," minutes starting from the ",(0,r.jsx)(n.code,{children:"3rd"})," minute to the ",(0,r.jsx)(n.code,{children:"59th"})," minute of every hour."]}),"\n",(0,r.jsxs)(n.h4,{id:"comma-",children:["Comma (",(0,r.jsx)(n.code,{children:","}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Comma is used to separate items of a list. For example, using ",(0,r.jsx)(n.code,{children:"MON,WED,FRI"})," in the fifth field will indicate execution on Monday, Wednesday, and Friday of each week."]}),"\n",(0,r.jsxs)(n.h4,{id:"hyphen--",children:["Hyphen (",(0,r.jsx)(n.code,{children:"-"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Hyphen is used to define ranges. For example, using ",(0,r.jsx)(n.code,{children:"9-17"})," in the third field indicates from ",(0,r.jsx)(n.code,{children:"9"})," AM to ",(0,r.jsx)(n.code,{children:"5"})," PM (inclusive) every day."]}),"\n",(0,r.jsxs)(n.h4,{id:"ignore-sign-",children:["Ignore Sign (",(0,r.jsx)(n.code,{children:"#"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["The ignore sign means the ",(0,r.jsx)(n.code,{children:"cron"})," expression will bypass the use of this field. Currently, only the seconds field supports this symbol, for seamlessly converting ",(0,r.jsx)(n.code,{children:"6"})," segment ",(0,r.jsx)(n.code,{children:"cron pattern"})," to ",(0,r.jsx)(n.code,{children:"5"})," segment ",(0,r.jsx)(n.code,{children:"linux crontab pattern"}),"."]}),"\n",(0,r.jsxs)(n.h4,{id:"question-mark-",children:["Question Mark (",(0,r.jsx)(n.code,{children:"?"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"question mark"})," can be used instead of ",(0,r.jsx)(n.code,{children:"*"})," to leave the ",(0,r.jsx)(n.code,{children:"Day"})," or ",(0,r.jsx)(n.code,{children:"Week"})," field blank."]}),"\n",(0,r.jsx)(n.h4,{id:"predefined-formats",children:"Predefined Formats"}),"\n",(0,r.jsxs)(n.p,{children:["You can use several predefined times instead of a ",(0,r.jsx)(n.code,{children:"cron"})," expression."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Entry                  | Description                                | Equivalent To\n-----                  | -----------                                | -------------\n@yearly (or @annually) | Run once a year, midnight, Jan. 1st        | 0 0 0 1 1 *\n@monthly               | Run once a month, midnight, first of month | 0 0 0 1 * *\n@weekly                | Run once a week, midnight between Sat/Sun  | 0 0 0 * * 0\n@daily (or @midnight)  | Run once a day, midnight                   | 0 0 0 * * *\n@hourly                | Run once an hour, beginning of hour        | 0 0 * * * *\n"})}),"\n",(0,r.jsx)(n.h4,{id:"intervals",children:"Intervals"}),"\n",(0,r.jsxs)(n.p,{children:["You can also define a task to run at a fixed interval, starting when added. This is supported by formatting the ",(0,r.jsx)(n.code,{children:"cron"})," specification as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@every <duration>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["where ",(0,r.jsx)(n.code,{children:"duration"})," is a string accepted by ",(0,r.jsx)(n.code,{children:"time.ParseDuration"})," (",(0,r.jsx)(n.a,{href:"http://golang.org/pkg/time/#ParseDuration",children:"http://golang.org/pkg/time/#ParseDuration"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:["For instance, ",(0,r.jsx)(n.code,{children:"@every 1h30m10s"})," would mean executing every ",(0,r.jsx)(n.code,{children:"1 hour, 30 minutes, and 10 seconds"})," after the task is added."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["Intervals do not consider the execution overhead time of tasks. For example, if a task takes ",(0,r.jsx)(n.code,{children:"3"})," minutes to complete and is scheduled to run every ",(0,r.jsx)(n.code,{children:"5"})," minutes, there will only be ",(0,r.jsx)(n.code,{children:"2"})," minutes of idle time between each task."]})}),"\n",(0,r.jsx)(n.h2,{id:"expression-examples",children:"Expression Examples"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Expression Example"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"* * * * * *"})}),(0,r.jsx)(n.td,{children:"Execute every second"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"# * * * * *"})}),(0,r.jsxs)(n.td,{children:["Execute every minute, with at least ",(0,r.jsx)(n.code,{children:"60"})," seconds between each execution"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2 * * * * *"})}),(0,r.jsxs)(n.td,{children:["Execute at the ",(0,r.jsx)(n.code,{children:"2nd"})," second of every minute"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"*/5 * * * * *"})}),(0,r.jsxs)(n.td,{children:["Execute every ",(0,r.jsx)(n.code,{children:"5"})," seconds"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"# */30 * * * *"})}),(0,r.jsxs)(n.td,{children:["Execute every ",(0,r.jsx)(n.code,{children:"30"})," minutes"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"# 0 2 * * *"})}),(0,r.jsxs)(n.td,{children:["Execute daily at ",(0,r.jsx)(n.code,{children:"2"})," AM"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"# */30 9-18 * * *"})}),(0,r.jsxs)(n.td,{children:["Execute every ",(0,r.jsx)(n.code,{children:"30"})," minutes from ",(0,r.jsx)(n.code,{children:"9"})," AM to ",(0,r.jsx)(n.code,{children:"6"})," PM daily"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"# 0 9 * * MON,FRI"})}),(0,r.jsxs)(n.td,{children:["Execute once at ",(0,r.jsx)(n.code,{children:"9"})," AM on ",(0,r.jsx)(n.code,{children:"Monday"})," and ",(0,r.jsx)(n.code,{children:"Friday"})]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"notes-",children:"Notes \uD83D\uDD25"}),"\n",(0,r.jsxs)(n.p,{children:["All programming language-level ",(0,r.jsx)(n.code,{children:"6"})," segment ",(0,r.jsx)(n.code,{children:"cron pattern"})," designs, practically, have certain design flaws due to the inaccuracy of underlying timers. Since ",(0,r.jsx)(n.code,{children:"cron pattern"})," is accurate to the second, when ",(0,r.jsx)(n.strong,{children:"delay reaches the second level"}),", tasks may be lost. Moreover, if the ",(0,r.jsx)(n.code,{children:"golang"})," engine scheduling is relatively slow, such delays can easily reach the second level, leading to logical issues within the program."]}),"\n",(0,r.jsxs)(n.p,{children:["Considering that most scenarios do not require such precise control of scheduling at the second level, starting from framework version ",(0,r.jsx)(n.code,{children:"v2.7"}),", we offer an ignore symbol ",(0,r.jsx)(n.code,{children:"#"})," for the seconds field to convert ",(0,r.jsx)(n.code,{children:"6"})," segment ",(0,r.jsx)(n.code,{children:"cron pattern"})," into ",(0,r.jsx)(n.code,{children:"5"})," segment ",(0,r.jsx)(n.code,{children:"linux crontab pattern"}),", making it more robust. If the scenario requires second-level granularity scheduling, consider using the ",(0,r.jsx)(n.code,{children:"gtimer"})," timer; however, bear in mind that no timer is entirely accurate and you cannot completely rely on the underlying system time."]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return t},a:function(){return d}});var i=s(667294);let r={},o=i.createContext(r);function d(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);