"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["24269"],{787783:function(e,t,n){n.r(t),n.d(t,{metadata:()=>o,contentTitle:()=>c,default:()=>g,assets:()=>s,toc:()=>l,frontMatter:()=>a});var o=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6-Context","title":"Logging - Context","description":"Usage of glog log component in the GoFrame framework, particularly how to achieve log printing through Context variables. The article provides a detailed explanation on configuring and using custom CtxKeys, and offers functionalities supporting trace. Additionally, it covers the implementation of the log Handler to help developers better integrate logging features.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6-Context.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6","slug":"/docs/core/glog-context","permalink":"/en/docs/core/glog-context","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6/\u65E5\u5FD7\u7EC4\u4EF6-Context.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732541616000,"sidebarPosition":5,"frontMatter":{"slug":"/docs/core/glog-context","title":"Logging - Context","sidebar_position":5,"hide_title":true,"keywords":["GoFrame","GoFrame framework","glog","log component","Context","CtxKeys","log output","OpenTelemetry","trace","Handler"],"description":"Usage of glog log component in the GoFrame framework, particularly how to achieve log printing through Context variables. The article provides a detailed explanation on configuring and using custom CtxKeys, and offers functionalities supporting trace. Additionally, it covers the implementation of the log Handler to help developers better integrate logging features."},"sidebar":"mainSidebar","previous":{"title":"Logging - Color Printing","permalink":"/en/docs/core/glog-color"},"next":{"title":"Logging - Handler","permalink":"/en/docs/core/glog-handler"}}'),r=n("785893"),i=n("250065");let a={slug:"/docs/core/glog-context",title:"Logging - Context",sidebar_position:5,hide_title:!0,keywords:["GoFrame","GoFrame framework","glog","log component","Context","CtxKeys","log output","OpenTelemetry","trace","Handler"],description:"Usage of glog log component in the GoFrame framework, particularly how to achieve log printing through Context variables. The article provides a detailed explanation on configuring and using custom CtxKeys, and offers functionalities supporting trace. Additionally, it covers the implementation of the log Handler to help developers better integrate logging features."},c=void 0,s={},l=[{value:"Custom <code>CtxKeys</code>",id:"custom-ctxkeys",level:2},{value:"Configuration Usage",id:"configuration-usage",level:3},{value:"Log Output",id:"log-output",level:3},{value:"Log Example",id:"log-example",level:3},{value:"Delivery to <code>Handler</code>",id:"delivery-to-handler",level:2},{value:"Trace Support",id:"trace-support",level:2}];function d(e){let t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Starting from version ",(0,r.jsx)(t.code,{children:"v2"}),", the ",(0,r.jsx)(t.code,{children:"glog"})," component uses the ",(0,r.jsx)(t.code,{children:"ctx"})," context variable as a necessary parameter for log printing."]}),"\n",(0,r.jsxs)(t.h2,{id:"custom-ctxkeys",children:["Custom ",(0,r.jsx)(t.code,{children:"CtxKeys"})]}),"\n",(0,r.jsxs)(t.p,{children:["The log component supports custom key-value printing by reading from the ",(0,r.jsx)(t.code,{children:"ctx"})," context variable."]}),"\n",(0,r.jsx)(t.h3,{id:"configuration-usage",children:"Configuration Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:'# Log component configuration\nlogger:\n  Level:   "all"\n  Stdout:  true\n  CtxKeys: ["RequestId", "UserId"]\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Here, ",(0,r.jsx)(t.code,{children:"CtxKeys"})," is used to configure the key names that need to be read and output from the ",(0,r.jsx)(t.code,{children:"context.Context"})," interface object."]}),"\n",(0,r.jsx)(t.h3,{id:"log-output",children:"Log Output"}),"\n",(0,r.jsxs)(t.p,{children:["With the above configuration, when outputting logs, specify the output ",(0,r.jsx)(t.code,{children:"context.Context"})," interface object using the ",(0,r.jsx)(t.code,{children:"Ctx"})," chained operation method. Please note ",(0,r.jsx)(t.strong,{children:"not to use a custom type as the Key"}),", otherwise, it cannot be output to the log file, for example:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    var ctx = context.Background()\n\n    // You can directly use String as Key\n    ctx = context.WithValue(ctx, "RequestId", "123456789")\n\n    // To extract the Key as a public variable, you can use the gctx.StrKey type, or directly use string type\n    const userIdKey gctx.StrKey = "UserId" // or const userIdKey = "UserId"\n    ctx = context.WithValue(ctx, userIdKey, "10000")\n\n    // Cannot use custom type\n    type notPrintKeyType string\n    const notPrintKey notPrintKeyType = "NotPrintKey"\n    ctx = context.WithValue(ctx, notPrintKey, "notPrintValue") // Will not print notPrintValue\n\n    g.Log().Error(ctx, "runtime error")\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"After execution, the terminal output will be:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:"2024-09-26 11:45:33.790 [ERRO] {123456789, 10000} runtime error\nStack:\n1.  main.main\n    /Users/teemo/GolandProjects/gogf/demo/main.go:24\n\n"})}),"\n",(0,r.jsx)(t.h3,{id:"log-example",children:"Log Example"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(446158).Z+"",width:"2800",height:"538"})}),"\n",(0,r.jsxs)(t.h2,{id:"delivery-to-handler",children:["Delivery to ",(0,r.jsx)(t.code,{children:"Handler"})]}),"\n",(0,r.jsxs)(t.p,{children:["If a developer customizes a ",(0,r.jsx)(t.code,{children:"Handler"})," for the log object, each ",(0,r.jsx)(t.code,{children:"ctx"})," context variable passed during log printing will be delivered to the ",(0,r.jsx)(t.code,{children:"Handler"}),". For an introduction to log ",(0,r.jsx)(t.code,{children:"Handler"}),", please refer to the section: ",(0,r.jsx)(t.a,{href:"/en/docs/core/glog-handler",children:"Logging - Handler"})]}),"\n",(0,r.jsx)(t.h2,{id:"trace-support",children:"Trace Support"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"glog"})," component supports the OpenTelemetry standard trace feature, which is built-in and requires no setup from the developer. For more information, please refer to the section: ",(0,r.jsx)(t.a,{href:"/en/docs/obs/tracing",children:"Service Tracing"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(92609).Z+"",width:"2450",height:"894"})})]})}function g(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},92609:function(e,t,n){n.d(t,{Z:function(){return o}});let o=n.p+"assets/images/a6ade54c58ba067b6be203a6e17b15e5-c66cb4f4b992630587c97e5617457a96.png"},446158:function(e,t,n){n.d(t,{Z:function(){return o}});let o=n.p+"assets/images/d9b17863576dca859b0b13b98041130e-6f8721f1bdf36091bb8ab5eac0bcba1a.png"},250065:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return a}});var o=n(667294);let r={},i=o.createContext(r);function a(e){let t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);