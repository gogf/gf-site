"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["28695"],{827565:function(e,t,n){n.r(t),n.d(t,{metadata:()=>i,contentTitle:()=>s,default:()=>f,assets:()=>l,toc:()=>u,frontMatter:()=>c});var i=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u914D\u7F6E\u7BA1\u7406/\u914D\u7F6E\u7BA1\u7406-\u63A5\u53E3\u5316\u8BBE\u8BA1/\u914D\u7F6E\u7BA1\u7406-\u63A5\u53E3\u5316\u8BBE\u8BA1","title":"Configuration - Interface","description":"The interface design and high scalability of the gcfg component in the GoFrame framework. Through interface design, users can customize configuration retrieval methods, including the use of etcd, zookeeper, consul, kubernetes configmap, and apollo, meeting diverse configuration management needs. Detailed interface definition and implementation guidance provide you with flexibility in configuration functionality.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u914D\u7F6E\u7BA1\u7406/\u914D\u7F6E\u7BA1\u7406-\u63A5\u53E3\u5316\u8BBE\u8BA1/\u914D\u7F6E\u7BA1\u7406-\u63A5\u53E3\u5316\u8BBE\u8BA1.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u914D\u7F6E\u7BA1\u7406/\u914D\u7F6E\u7BA1\u7406-\u63A5\u53E3\u5316\u8BBE\u8BA1","slug":"/docs/core/gcfg-interface","permalink":"/en/docs/core/gcfg-interface","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u914D\u7F6E\u7BA1\u7406/\u914D\u7F6E\u7BA1\u7406-\u63A5\u53E3\u5316\u8BBE\u8BA1/\u914D\u7F6E\u7BA1\u7406-\u63A5\u53E3\u5316\u8BBE\u8BA1.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732716970000,"sidebarPosition":3,"frontMatter":{"slug":"/docs/core/gcfg-interface","title":"Configuration - Interface","sidebar_position":3,"hide_title":true,"keywords":["GoFrame","GoFrame framework","configuration management","interface design","high scalability","configuration retrieval","etcd","zookeeper","consul","kubernetes","apollo"],"description":"The interface design and high scalability of the gcfg component in the GoFrame framework. Through interface design, users can customize configuration retrieval methods, including the use of etcd, zookeeper, consul, kubernetes configmap, and apollo, meeting diverse configuration management needs. Detailed interface definition and implementation guidance provide you with flexibility in configuration functionality."},"sidebar":"mainSidebar","previous":{"title":"Configuration - Methods","permalink":"/en/docs/core/gcfg-funcs"},"next":{"title":"Configuration - AdapterFile","permalink":"/en/docs/core/gcfg-interface-adapter-file"}}'),r=n("785893"),o=n("250065"),a=n("203105");let c={slug:"/docs/core/gcfg-interface",title:"Configuration - Interface",sidebar_position:3,hide_title:!0,keywords:["GoFrame","GoFrame framework","configuration management","interface design","high scalability","configuration retrieval","etcd","zookeeper","consul","kubernetes","apollo"],description:"The interface design and high scalability of the gcfg component in the GoFrame framework. Through interface design, users can customize configuration retrieval methods, including the use of etcd, zookeeper, consul, kubernetes configmap, and apollo, meeting diverse configuration management needs. Detailed interface definition and implementation guidance provide you with flexibility in configuration functionality."},s=void 0,l={},u=[{value:"Interface Definition",id:"interface-definition",level:2},{value:"Setting Interface Implementation",id:"setting-interface-implementation",level:2},{value:"Retrieving Interface Implementation",id:"retrieving-interface-implementation",level:2},{value:"Documentation",id:"documentation",level:2}];function d(e){let t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"gcfg"})," component adopts an interface design to achieve high scalability. Through interface design, users can customize configuration retrieval methods, such as ",(0,r.jsx)(t.code,{children:"etcd, zookeeper, consul, kubernetes configmap, apollo"}),", etc."]}),"\n",(0,r.jsx)(t.h2,{id:"interface-definition",children:"Interface Definition"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/gogf/gf/blob/master/os/gcfg/gcfg_adaper.go",children:"https://github.com/gogf/gf/blob/master/os/gcfg/gcfg_adaper.go"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"// Adapter is the interface for configuration retrieving.\ntype Adapter interface {\n    // Available checks and returns the configuration service is available.\n    // The optional parameter `resource` specifies certain configuration resource.\n    //\n    // It returns true if configuration file is present in default AdapterFile, or else false.\n    // Note that this function does not return error as it just does simply check for backend configuration service.\n    Available(ctx context.Context, resource ...string) (ok bool)\n\n    // Get retrieves and returns value by specified `pattern`.\n    Get(ctx context.Context, pattern string) (value interface{}, err error)\n\n    // Data retrieves and returns all configuration data as map type.\n    // Note that this function may lead lots of memory usage if configuration data is too large,\n    // you can implement this function if necessary.\n    Data(ctx context.Context) (data map[string]interface{}, err error)\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"setting-interface-implementation",children:"Setting Interface Implementation"}),"\n",(0,r.jsxs)(t.p,{children:["The configuration object can set the currently used interface implementation through the ",(0,r.jsx)(t.code,{children:"SetAdapter"})," method."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"// SetAdapter sets the adapter of current Config object.\nfunc (c *Config) SetAdapter(adapter Adapter)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"retrieving-interface-implementation",children:"Retrieving Interface Implementation"}),"\n",(0,r.jsxs)(t.p,{children:["The configuration object can retrieve the currently used interface implementation through the ",(0,r.jsx)(t.code,{children:"GetAdapter"})," method."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"// GetAdapter returns the adapter of current Config object.\nfunc (c *Config) GetAdapter() Adapter\n"})}),"\n",(0,r.jsx)(t.h2,{id:"documentation",children:"Documentation"}),"\n","\n",(0,r.jsx)(a.Z,{})]})}function f(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},203105:function(e,t,n){n.d(t,{Z:()=>b});var i=n("785893");n("667294");var r=n("467026"),o=n("96693"),a=n("531183"),c=n("633876"),s=n("266026"),l=n("434751"),u=n("58608");let d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function f(e){let{href:t,children:n}=e;return(0,i.jsx)(a.Z,{href:t,className:(0,r.Z)("card padding--lg",d.cardContainer),children:n})}function g(e){let{href:t,icon:n,title:o,description:a}=e;return(0,i.jsxs)(f,{href:t,children:[(0,i.jsxs)(u.Z,{as:"h2",className:(0,r.Z)("text--truncate",d.cardTitle),title:o,children:[n," ",o]}),a&&(0,i.jsx)("p",{className:(0,r.Z)("text--truncate",d.cardDescription),title:a,children:a})]})}function m(e){let{item:t}=e,n=(0,o.LM)(t),r=function(){let{selectMessage:e}=(0,c.c)();return t=>e(t,(0,l.I)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return n?(0,i.jsx)(g,{href:n,icon:"\uD83D\uDDC3\uFE0F",title:t.label,description:t.description??r(t.items.length)}):null}function h(e){let{item:t}=e,n=(0,s.Z)(t.href)?"\uD83D\uDCC4\uFE0F":"\uD83D\uDD17",r=(0,o.xz)(t.docId??void 0);return(0,i.jsx)(g,{href:t.href,icon:n,title:t.label,description:t.description??r?.description})}function p(e){let{item:t}=e;switch(t.type){case"link":return(0,i.jsx)(h,{item:t});case"category":return(0,i.jsx)(m,{item:t});default:throw Error(`unknown item type ${JSON.stringify(t)}`)}}function x(e){let{className:t}=e,n=(0,o.jA)();return(0,i.jsx)(b,{items:n.items,className:t})}function b(e){let{items:t,className:n}=e;if(!t)return(0,i.jsx)(x,{...e});let a=(0,o.MN)(t);return(0,i.jsx)("section",{className:(0,r.Z)("row",n),children:a.map((e,t)=>(0,i.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,i.jsx)(p,{item:e})},t))})}},633876:function(e,t,n){n.d(t,{c:function(){return s}});var i=n(667294),r=n(49931);let o=["zero","one","two","few","many","other"];function a(e){return o.filter(t=>e.includes(t))}let c={locale:"en",pluralForms:a(["one","other"]),select:e=>1===e?"one":"other"};function s(){let e=function(){let{i18n:{currentLocale:e}}=(0,r.Z)();return(0,i.useMemo)(()=>{try{return function(e){let t=new Intl.PluralRules(e);return{locale:e,pluralForms:a(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".
Docusaurus will fallback to the default (English) implementation.
Error: ${t.message}
`),c}},[e])}();return{selectMessage:(t,n)=>(function(e,t,n){let i=e.split("|");if(1===i.length)return i[0];i.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${i.length}: ${e}`);let r=n.select(t);return i[Math.min(n.pluralForms.indexOf(r),i.length-1)]})(n,t,e)}}},250065:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return a}});var i=n(667294);let r={},o=i.createContext(r);function a(e){let t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);