"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["24701"],{14069:function(e,n,r){r.r(n),r.d(n,{metadata:()=>i,contentTitle:()=>c,default:()=>h,assets:()=>a,toc:()=>o,frontMatter:()=>l});var i=JSON.parse('{"id":"examples/observability/trace/inprocess-grpc/inprocess-grpc","title":"In-Process Service (gRPC Exporter)","description":"distributed tracing in in-process services using GoFrame with gRPC-based OpenTelemetry exporter","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/examples/observability/trace/inprocess-grpc/inprocess-grpc.md","sourceDirName":"examples/observability/trace/inprocess-grpc","slug":"/examples/observability/trace/inprocess-grpc","permalink":"/en/examples/observability/trace/inprocess-grpc","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/examples/observability/trace/inprocess-grpc/inprocess-grpc.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1740107000000,"frontMatter":{"title":"In-Process Service (gRPC Exporter)","slug":"/examples/observability/trace/inprocess-grpc","keywords":["trace","inprocess","grpc","goframe","otlp-grpc"],"description":"distributed tracing in in-process services using GoFrame with gRPC-based OpenTelemetry exporter","hide_title":true},"sidebar":"examplesSidebar","previous":{"title":"In-Process Service (HTTP Exporter)","permalink":"/en/examples/observability/trace/inprocess"},"next":{"title":"OpenTelemetry Example","permalink":"/en/examples/observability/trace/otlp"}}'),s=r("785893"),t=r("250065");let l={title:"In-Process Service (gRPC Exporter)",slug:"/examples/observability/trace/inprocess-grpc",keywords:["trace","inprocess","grpc","goframe","otlp-grpc"],description:"distributed tracing in in-process services using GoFrame with gRPC-based OpenTelemetry exporter",hide_title:!0},c="Tracing - In-Process Service (gRPC Exporter)",a={},o=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Structure",id:"structure",level:2},{value:"Features",id:"features",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Example Output",id:"example-output",level:2}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"tracing---in-process-service-grpc-exporter",children:"Tracing - In-Process Service (gRPC Exporter)"})}),"\n",(0,s.jsxs)(n.p,{children:["Github Source: ",(0,s.jsx)(n.a,{href:"https://github.com/gogf/examples/tree/main/observability/trace/inprocess-grpc",children:"https://github.com/gogf/examples/tree/main/observability/trace/inprocess-grpc"})]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"This example demonstrates how to implement distributed tracing in in-process services using GoFrame with gRPC-based OpenTelemetry exporter. It shows how to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Configure tracing in a single process using gRPC exporter"}),"\n",(0,s.jsx)(n.li,{children:"Trace function calls and operations"}),"\n",(0,s.jsx)(n.li,{children:"Propagate trace context through gRPC"}),"\n",(0,s.jsx)(n.li,{children:"Visualize distributed traces"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://golang.org/dl/",children:"Go"})," ",(0,s.jsx)(n.code,{children:"1.22"})," or higher"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://git-scm.com/downloads",children:"Git"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://goframe.org",children:"GoFrame"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/gogf/gf/tree/master/contrib/trace/otlpgrpc",children:"GoFrame OpenTelemetry gRPC Tracing"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:".\n\u251C\u2500\u2500 main.go         # Main application with gRPC-based tracing\n\u251C\u2500\u2500 go.mod          # Go module file\n\u2514\u2500\u2500 go.sum          # Go module checksums\n"})}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(n.p,{children:"The example showcases the following features:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Distributed Tracing with gRPC Exporter"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"gRPC-based trace data transmission"}),"\n",(0,s.jsx)(n.li,{children:"Span management with gRPC context"}),"\n",(0,s.jsx)(n.li,{children:"Trace visualization"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Function Call Tracing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Function entry/exit tracing"}),"\n",(0,s.jsx)(n.li,{children:"gRPC context propagation"}),"\n",(0,s.jsx)(n.li,{children:"Error handling"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Data Operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"User data retrieval"}),"\n",(0,s.jsx)(n.li,{children:"Data aggregation"}),"\n",(0,s.jsx)(n.li,{children:"Error handling"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Running Jaeger instance:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run --rm --name jaeger \\\n-e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \\\n-p 6831:6831/udp \\\n-p 6832:6832/udp \\\n-p 5778:5778 \\\n-p 16686:16686 \\\n-p 4317:4317 \\\n-p 4318:4318 \\\n-p 14250:14250 \\\n-p 14268:14268 \\\n-p 14269:14269 \\\n-p 9411:9411 \\\njaegertracing/all-in-one:1.55\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the application:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"go run main.go\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["View traces:\nOpen ",(0,s.jsx)(n.a,{href:"http://localhost:16686",children:"http://localhost:16686"})," in your browser to view traces in Jaeger UI."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,s.jsx)(n.p,{children:"The example demonstrates:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"User Data Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"GetUser(ctx, id)       // Retrieves complete user data\n\u251C\u2500\u2500 GetInfo(ctx, id)   // Gets basic user information\n\u251C\u2500\u2500 GetDetail(ctx, id) // Gets detailed user information\n\u2514\u2500\u2500 GetScores(ctx, id) // Gets user scores\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Trace Context Flow"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Main function creates root span with gRPC context"}),"\n",(0,s.jsx)(n.li,{children:"Each function creates child span with gRPC metadata"}),"\n",(0,s.jsx)(n.li,{children:"Context propagates through gRPC calls"}),"\n",(0,s.jsx)(n.li,{children:"All spans are properly ended with gRPC cleanup"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Error Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Non-existent user IDs return nil"}),"\n",(0,s.jsx)(n.li,{children:"Each function handles errors independently"}),"\n",(0,s.jsx)(n.li,{children:"Errors are traced and logged with gRPC status codes"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"gRPC-based Trace Export"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Uses gRPC protocol for trace data transmission"}),"\n",(0,s.jsx)(n.li,{children:"Configures gRPC trace collector endpoint"}),"\n",(0,s.jsx)(n.li,{children:"Handles gRPC connection management"}),"\n",(0,s.jsx)(n.li,{children:"Supports gRPC authentication and TLS"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Application Issues:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check if application is running correctly"}),"\n",(0,s.jsx)(n.li,{children:"Verify function call outputs"}),"\n",(0,s.jsx)(n.li,{children:"Review error logs"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Tracing Issues:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Verify Jaeger is running: ",(0,s.jsx)(n.code,{children:"docker ps | grep jaeger"})]}),"\n",(0,s.jsxs)(n.li,{children:["Check Jaeger UI accessibility: ",(0,s.jsx)(n.a,{href:"http://localhost:16686",children:"http://localhost:16686"})]}),"\n",(0,s.jsx)(n.li,{children:"Ensure gRPC endpoint is correct in configuration"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"gRPC Issues:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check gRPC connection status"}),"\n",(0,s.jsx)(n.li,{children:"Verify gRPC endpoint accessibility"}),"\n",(0,s.jsx)(n.li,{children:"Review gRPC error messages and status codes"}),"\n",(0,s.jsx)(n.li,{children:"Verify gRPC authentication token"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-output",children:"Example Output"}),"\n",(0,s.jsx)(n.p,{children:"For user ID 100:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'{\n    "id":      100,\n    "name":    "john",\n    "gender":  1,\n    "site":    "https://goframe.org",\n    "email":   "john@goframe.org",\n    "math":    100,\n    "english": 60,\n    "chinese": 50\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"For non-existent user IDs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"{}\n"})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return c},a:function(){return l}});var i=r(667294);let s={},t=i.createContext(s);function l(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);