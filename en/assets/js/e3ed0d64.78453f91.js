"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["4890"],{903972:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>s,default:()=>f,assets:()=>c,toc:()=>m,frontMatter:()=>a});var r=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u5668-gtimer/\u5B9A\u65F6\u5668-\u6027\u80FD\u6D4B\u8BD5","title":"Timer - Performance","description":"Detailed information on timer performance testing using the GoFrame framework in a Linux environment. By comparing Benchmark_Add and Benchmark_StartStop, we can more clearly understand the efficiency and resource allocation of the timer under different operations. The test results demonstrate the efficient performance metrics of the Go language when executing timer operations, providing better references for developers using GoFrame.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u5668-gtimer/\u5B9A\u65F6\u5668-\u6027\u80FD\u6D4B\u8BD5.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u5668-gtimer","slug":"/docs/components/os-gtimer-benchmark","permalink":"/en/docs/components/os-gtimer-benchmark","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u5B9A\u65F6\u5668-gtimer/\u5B9A\u65F6\u5668-\u6027\u80FD\u6D4B\u8BD5.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":1,"frontMatter":{"slug":"/docs/components/os-gtimer-benchmark","title":"Timer - Performance","sidebar_position":1,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","Timer","Performance Test","Benchmark","Go","gtimer","linux","amd64","github"],"description":"Detailed information on timer performance testing using the GoFrame framework in a Linux environment. By comparing Benchmark_Add and Benchmark_StartStop, we can more clearly understand the efficiency and resource allocation of the timer under different operations. The test results demonstrate the efficient performance metrics of the Go language when executing timer operations, providing better references for developers using GoFrame."},"sidebar":"mainSidebar","previous":{"title":"Timer - Usage","permalink":"/en/docs/components/os-gtimer-example"},"next":{"title":"Mutex","permalink":"/en/docs/components/os-gmutex"}}'),o=t("785893"),i=t("250065");let a={slug:"/docs/components/os-gtimer-benchmark",title:"Timer - Performance",sidebar_position:1,hide_title:!0,keywords:["GoFrame","GoFrame Framework","Timer","Performance Test","Benchmark","Go","gtimer","linux","amd64","github"],description:"Detailed information on timer performance testing using the GoFrame framework in a Linux environment. By comparing Benchmark_Add and Benchmark_StartStop, we can more clearly understand the efficiency and resource allocation of the timer under different operations. The test results demonstrate the efficient performance metrics of the Go language when executing timer operations, providing better references for developers using GoFrame."},s=void 0,c={},m=[{value:"Performance Test",id:"performance-test",level:2}];function d(e){let n={code:"code",h2:"h2",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"performance-test",children:"Performance Test"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"goos: linux\ngoarch: amd64\npkg: github.com/gogf/gf/v2/os/gtimer\nBenchmark_Add-12                         4048776               291.9 ns/op           249 B/op          6 allocs/op\nBenchmark_StartStop-12                  100000000              10.96 ns/op             0 B/op          0 allocs/op\nPASS\nok      command-line-arguments    6.602s\n"})})]})}function f(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return a}});var r=t(667294);let o={},i=r.createContext(o);function a(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);