"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["97715"],{35682:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>c,default:()=>h,assets:()=>o,toc:()=>a,frontMatter:()=>l});var s=JSON.parse('{"id":"examples/practices/injection/injection","title":"Dependency Injection","description":"A dependency injection example using GoFrame framework and do package","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/examples/practices/injection/injection.md","sourceDirName":"examples/practices/injection","slug":"/examples/practices/injection","permalink":"/en/examples/practices/injection","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/examples/practices/injection/injection.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1740107000000,"frontMatter":{"title":"Dependency Injection","slug":"/examples/practices/injection","keywords":["dependency injection","testing","goframe","di"],"description":"A dependency injection example using GoFrame framework and do package","hide_title":true},"sidebar":"examplesSidebar","previous":{"title":"Practices","permalink":"/en/examples/practices"}}'),r=i("785893"),t=i("250065");let l={title:"Dependency Injection",slug:"/examples/practices/injection",keywords:["dependency injection","testing","goframe","di"],description:"A dependency injection example using GoFrame framework and do package",hide_title:!0},c="Dependency Injection Example",o={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Directory Structure",id:"directory-structure",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Dependency Injection Setup",id:"dependency-injection-setup",level:3},{value:"Service Layer",id:"service-layer",level:3},{value:"Controller Layer",id:"controller-layer",level:3},{value:"Testability",id:"testability",level:3},{value:"Important Notes",id:"important-notes",level:2}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dependency-injection-example",children:"Dependency Injection Example"})}),"\n",(0,r.jsxs)(n.p,{children:["Github Source: ",(0,r.jsx)(n.a,{href:"https://github.com/gogf/examples/tree/main/practices/injection",children:"https://github.com/gogf/examples/tree/main/practices/injection"})]}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["This example demonstrates how to implement dependency injection in a ",(0,r.jsx)(n.code,{children:"GoFrame"})," application."]}),"\n",(0,r.jsx)(n.p,{children:"Key demonstrations:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Using monorepo pattern for code repository management"}),"\n",(0,r.jsx)(n.li,{children:"Basic dependency injection setup"}),"\n",(0,r.jsxs)(n.li,{children:["Service layer implementation with ",(0,r.jsx)(n.code,{children:"DI"})]}),"\n",(0,r.jsxs)(n.li,{children:["Controller layer integration with ",(0,r.jsx)(n.code,{children:"gRPC"})]}),"\n",(0,r.jsx)(n.li,{children:"Unit testing with mock dependencies"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The implementation focuses on making core business logic easily testable:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Separation of concerns using dependency injection"}),"\n",(0,r.jsx)(n.li,{children:"Clear interfaces for service dependencies"}),"\n",(0,r.jsx)(n.li,{children:"Independent unit testing for each layer to ensure code quality"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://golang.org/dl/",children:"Go"})," ",(0,r.jsx)(n.code,{children:"1.22"})," or higher"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://git-scm.com/downloads",children:"Git"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://goframe.org",children:"GoFrame"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.mongodb.com",children:"MongoDB"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://redis.io",children:"Redis"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/samber/do",children:"github.com/samber/do"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"injection/\n\u251C\u2500\u2500 app/\n\u2502   \u251C\u2500\u2500 gateway/         # API Gateway service, calls user gRPC service for external interfaces\n\u2502   \u2502   \u251C\u2500\u2500 api/         # API definitions\n\u2502   \u2502   \u251C\u2500\u2500 internal/    # Internal implementations\n\u2502   \u2502   \u2502   \u251C\u2500\u2500 cmd/         # Command line tools\n\u2502   \u2502   \u2502   \u251C\u2500\u2500 controller/  # Controllers\n\u2502   \u2502   \u2502   \u251C\u2500\u2500 model/       # Data models\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 service/     # Business logic\n\u2502   \u2502   \u2514\u2500\u2500 manifest/   # Configuration files\n\u2502   \u2514\u2500\u2500 user/           # User service\n\u2502       \u251C\u2500\u2500 api/        # API definitions\n\u2502       \u2502   \u251C\u2500\u2500 entity/ # Entity definitions\n\u2502       \u2502   \u2514\u2500\u2500 user/   # User API proto\n\u2502       \u251C\u2500\u2500 internal/   # Internal implementations\n\u2502       \u2502   \u251C\u2500\u2500 cmd/         # Command line tools\n\u2502       \u2502   \u251C\u2500\u2500 controller/  # Controllers with DI\n\u2502       \u2502   \u251C\u2500\u2500 dao/         # Data Access Objects\n\u2502       \u2502   \u251C\u2500\u2500 model/       # Data models\n\u2502       \u2502   \u2514\u2500\u2500 service/     # Business logic with DI\n\u2502       \u2514\u2500\u2500 manifest/   # Configuration files\n\u251C\u2500\u2500 hack/               # Development tools\n\u2514\u2500\u2500 utility/            # Common utilities\n    \u251C\u2500\u2500 injection/      # DI utilities\n    \u2514\u2500\u2500 mongohelper/    # MongoDB helper tools\n"})}),"\n",(0,r.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dependency injection usage"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MongoDB"})," and ",(0,r.jsx)(n.code,{children:"Redis"})," integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gRPC"})," service implementation"]}),"\n",(0,r.jsx)(n.li,{children:"Complete unit testing"}),"\n",(0,r.jsx)(n.li,{children:"Resource cleanup handling"}),"\n",(0,r.jsx)(n.li,{children:"Named dependency support"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Clone the repository:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/gogf/examples.git\ncd examples/practices/injection\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"go mod tidy\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Start required services using ",(0,r.jsx)(n.code,{children:"Docker"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start MongoDB\ndocker run -d --name mongo -p 27017:27017 mongo:latest\n\n# Start Redis\ndocker run -d --name redis -p 6379:6379 redis:latest\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Run the ",(0,r.jsx)(n.code,{children:"gRPC Server"})," service:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd examples/practices/injection/app/user\ngo run main.go server\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Run the ",(0,r.jsx)(n.code,{children:"HTTP Server"})," service:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd examples/practices/injection/app/gateway\ngo run main.go server\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"(Optional) Run async worker, only demonstrates multi-command functionality, no actual logic:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd examples/practices/injection/app/gateway\ngo run main.go worker\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"(Optional) Run tests:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"go test ./...\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.h3,{id:"dependency-injection-setup",children:"Dependency Injection Setup"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Using ",(0,r.jsx)(n.code,{children:"github.com/samber/do"})," package for dependency management"]}),"\n",(0,r.jsx)(n.li,{children:"Support for named and unnamed dependency management"}),"\n",(0,r.jsx)(n.li,{children:"Helper functions for common operations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"service-layer",children:"Service Layer"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Clear separation of concerns"}),"\n",(0,r.jsx)(n.li,{children:"Interface-based design"}),"\n",(0,r.jsx)(n.li,{children:"Easy to test with mock implementations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"controller-layer",children:"Controller Layer"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gRPC"})," integration with ",(0,r.jsx)(n.code,{children:"DI"})," support"]}),"\n",(0,r.jsx)(n.li,{children:"Clear error handling"}),"\n",(0,r.jsx)(n.li,{children:"Proper resource management"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testability",children:"Testability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Complete unit tests for data layer (",(0,r.jsx)(n.code,{children:"dao"}),"), service layer (",(0,r.jsx)(n.code,{children:"service"}),"), and interface layer (",(0,r.jsx)(n.code,{children:"controller"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Mock dependencies, database configuration for unit tests managed through ",(0,r.jsx)(n.code,{children:"manifest/config"})]}),"\n",(0,r.jsx)(n.li,{children:"Service addresses or domains for microservice connections managed through configuration files for easy service mocking"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Properly clean up resources in the ",(0,r.jsx)(n.code,{children:"Shutdown"})," method when registering dependency injection"]}),"\n",(0,r.jsx)(n.li,{children:"Use named dependencies when multiple instances of the same type are needed in dependency injection"}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return c},a:function(){return l}});var s=i(667294);let r={},t=s.createContext(r);function l(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);