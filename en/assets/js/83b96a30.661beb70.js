"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["82064"],{533390:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>a,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>s});var i=JSON.parse('{"id":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u9AD8\u7EA7\u7279\u6027/HOOK\u4E8B\u4EF6\u56DE\u8C03","title":"HOOK Callbacks","description":"The HOOK event callback function provided by the ghttp.Server in the GoFrame framework, similar to middleware, allows custom event listening and handling. Event callbacks can be registered in a specific order to determine the callback invocation priority. This document provides a detailed explanation of the usage, application in API authentication control, cross-origin request handling, and showcases with example code the execution method and priority mechanism of event callbacks.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/WEB\u670D\u52A1\u5F00\u53D1/\u9AD8\u7EA7\u7279\u6027/HOOK\u4E8B\u4EF6\u56DE\u8C03.md","sourceDirName":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u9AD8\u7EA7\u7279\u6027","slug":"/docs/web/senior-hook","permalink":"/en/docs/web/senior-hook","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/WEB\u670D\u52A1\u5F00\u53D1/\u9AD8\u7EA7\u7279\u6027/HOOK\u4E8B\u4EF6\u56DE\u8C03.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732541616000,"sidebarPosition":6,"frontMatter":{"slug":"/docs/web/senior-hook","title":"HOOK Callbacks","sidebar_position":6,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","HOOK Event","Event Callback","ghttp.Server","Middleware","Routing Priority","Permission Control","Cross-Origin Requests","API Authentication"],"description":"The HOOK event callback function provided by the ghttp.Server in the GoFrame framework, similar to middleware, allows custom event listening and handling. Event callbacks can be registered in a specific order to determine the callback invocation priority. This document provides a detailed explanation of the usage, application in API authentication control, cross-origin request handling, and showcases with example code the execution method and priority mechanism of event callbacks."},"sidebar":"mainSidebar","previous":{"title":"CSRF","permalink":"/en/docs/web/senior-csrf"},"next":{"title":"WebSocket","permalink":"/en/docs/web/senior-websocket"}}'),r=t("785893"),o=t("250065");let s={slug:"/docs/web/senior-hook",title:"HOOK Callbacks",sidebar_position:6,hide_title:!0,keywords:["GoFrame","GoFrame Framework","HOOK Event","Event Callback","ghttp.Server","Middleware","Routing Priority","Permission Control","Cross-Origin Requests","API Authentication"],description:"The HOOK event callback function provided by the ghttp.Server in the GoFrame framework, similar to middleware, allows custom event listening and handling. Event callbacks can be registered in a specific order to determine the callback invocation priority. This document provides a detailed explanation of the usage, application in API authentication control, cross-origin request handling, and showcases with example code the execution method and priority mechanism of event callbacks."},a=void 0,c={},l=[{value:"Callback Priority",id:"callback-priority",level:2},{value:"About Global Callback",id:"about-global-callback",level:3},{value:"Business Function Invocation Order",id:"business-function-invocation-order",level:3},{value:"<code>ExitHook</code> Method",id:"exithook-method",level:2},{value:"API Authentication Control",id:"api-authentication-control",level:2},{value:"Middleware vs. Event Callback",id:"middleware-vs-event-callback",level:2},{value:"<code>Request.URL</code> vs. <code>Request.Router</code>",id:"requesturl-vs-requestrouter",level:3},{value:"Static File Events",id:"static-file-events",level:2},{value:"Event Callback Examples",id:"event-callback-examples",level:2},{value:"Example 1: Basic Usage",id:"example-1-basic-usage",level:3},{value:"Example 2: Registering the Same Event",id:"example-2-registering-the-same-event",level:3},{value:"Example 3: Changing Business Logic",id:"example-3-changing-business-logic",level:3},{value:"Example 4: Callback Execution Priority",id:"example-4-callback-execution-priority",level:3},{value:"Example 5: Allowing Cross-Origin Requests",id:"example-5-allowing-cross-origin-requests",level:3}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(520055).Z+"",width:"2058",height:"1298"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ghttp.Server"})," provides an event callback registration function, similar to the ",(0,r.jsx)(n.code,{children:"middleware"})," function in other frameworks, but event callbacks are simpler."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ghttp.Server"})," supports custom event listening and handling, binding and registering based on the ",(0,r.jsx)(n.code,{children:"pattern"})," method (the ",(0,r.jsx)(n.code,{children:"pattern"})," format is consistent with route registration). ",(0,r.jsx)(n.strong,{children:"It supports multiple methods to listen to the same event"}),", and ",(0,r.jsx)(n.code,{children:"ghttp.Server"})," will call the callback methods according to the ",(0,r.jsx)(n.code,{children:"routing priority"})," and ",(0,r.jsx)(n.code,{children:"callback registration order"}),". The earlier the HOOK callback function is registered for the same event, the higher its priority. The related methods are as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (s *Server) BindHookHandler(pattern string, hook string, handler HandlerFunc) error\nfunc (s *Server) BindHookHandlerByMap(pattern string, hookmap map[string]HandlerFunc) error\n"})}),"\n",(0,r.jsx)(n.p,{children:"Of course, domain objects also support event callback registration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (d *Domain) BindHookHandler(pattern string, hook string, handler HandlerFunc) error\nfunc (d *Domain) BindHookHandlerByMap(pattern string, hookmap map[string]HandlerFunc) error\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Supported ",(0,r.jsx)(n.code,{children:"Hook"})," event list:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ghttp.HookBeforeServe"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This event occurs before entering/initializing the service object and is most commonly used, especially for handling permission control and cross-origin requests."}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ghttp.HookAfterServe"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"After completing the service execution process."}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ghttp.HookBeforeOutput"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Before outputting content to the client."}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ghttp.HookAfterOutput"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"After outputting content to the client."}),"\n",(0,r.jsx)(n.p,{children:"Please refer to the example for specific invocation timing."}),"\n",(0,r.jsx)(n.h2,{id:"callback-priority",children:"Callback Priority"}),"\n",(0,r.jsxs)(n.p,{children:["Since event binding is also based on routing rules, its priority is the same as described in the ",(0,r.jsx)(n.a,{href:"/en/docs/web/router-pattern",children:"Router - Route Patterns"})," chapter."]}),"\n",(0,r.jsxs)(n.p,{children:["However, the mechanism for event invocation differs from that of route registration invocation. ",(0,r.jsx)(n.strong,{children:"It allows multiple event callback methods under the same routing rule"}),", and events under this route will be ",(0,r.jsx)(n.code,{children:"invoked in order of priority"}),". If the routing rules have the same priority, they will be invoked in the order of event registration."]}),"\n",(0,r.jsx)(n.h3,{id:"about-global-callback",children:"About Global Callback"}),"\n",(0,r.jsxs)(n.p,{children:["We often use a binding like ",(0,r.jsx)(n.code,{children:"/*"})," for ",(0,r.jsx)(n.code,{children:"HOOK"})," routes to achieve global callback handling, which is feasible. However, ",(0,r.jsx)(n.code,{children:"HOOK"})," executions have the lowest priority; the more specific the route registration, the higher the priority, and the more vague the route, the lower the priority. ",(0,r.jsx)(n.code,{children:"/*"})," belongs to the most vague route."]}),"\n",(0,r.jsxs)(n.p,{children:["To reduce coupling between different modules, routes are often not registered in the same place. For instance, a ",(0,r.jsx)(n.code,{children:"HOOK"})," registered for a user module (",(0,r.jsx)(n.code,{children:"/user/*"}),") will be invoked first before the global ",(0,r.jsx)(n.code,{children:"HOOK"}),". Relying solely on registration order to control priority becomes difficult to manage when there are many modules and routes."]}),"\n",(0,r.jsx)(n.h3,{id:"business-function-invocation-order",children:"Business Function Invocation Order"}),"\n",(0,r.jsxs)(n.p,{children:["It is recommended that multiple processing functions (such as: A, B, C) for the same business (same business module) be placed in the same ",(0,r.jsx)(n.code,{children:"HOOK"})," callback function for handling. Manage the invocation order of business processing functions (function invocation order: A-B-C) within the registered callback function."]}),"\n",(0,r.jsxs)(n.p,{children:["Although registering multiple identical ",(0,r.jsx)(n.code,{children:"HOOK"})," callback functions can also fulfill the requirement without any functional issues, from a design perspective, cohesion is reduced, making it inconvenient to manage business functions."]}),"\n",(0,r.jsxs)(n.h2,{id:"exithook-method",children:[(0,r.jsx)(n.code,{children:"ExitHook"})," Method"]}),"\n",(0,r.jsxs)(n.p,{children:["When the route matches multiple ",(0,r.jsx)(n.code,{children:"HOOK"})," methods, by default, ",(0,r.jsx)(n.code,{children:"HOOK"})," methods are executed according to the priority of route matching. When calling the ",(0,r.jsx)(n.code,{children:"Request.ExitHook"})," method within a ",(0,r.jsx)(n.code,{children:"HOOK"})," method, subsequent ",(0,r.jsx)(n.code,{children:"HOOK"})," methods will not be executed, which acts similar to ",(0,r.jsx)(n.code,{children:"HOOK"})," function overriding."]}),"\n",(0,r.jsx)(n.h2,{id:"api-authentication-control",children:"API Authentication Control"}),"\n",(0,r.jsxs)(n.p,{children:["A common application of event callback registration is to control authentication/permissions for the called API. This requires binding the ",(0,r.jsx)(n.code,{children:"ghttp.HookBeforeServe"})," event, where all matched API requests are processed before service execution (e.g., binding ",(0,r.jsx)(n.code,{children:"/*"})," event callback route). If authentication fails, call ",(0,r.jsx)(n.code,{children:"r.ExitAll()"})," to exit subsequent service execution (including subsequent event callback execution)."]}),"\n",(0,r.jsxs)(n.p,{children:["Furthermore, executing ",(0,r.jsx)(n.code,{children:"r.Redirect*"})," in the event callback function for permission verification without calling ",(0,r.jsx)(n.code,{children:"r.ExitAll()"})," to exit the business execution often results in ",(0,r.jsx)(n.code,{children:"http multiple response writeheader calls"})," error messages. This is because the ",(0,r.jsx)(n.code,{children:"r.Redirect*"})," method writes the ",(0,r.jsx)(n.code,{children:"Location"})," header in the header, and subsequent business service APIs often write the ",(0,r.jsx)(n.code,{children:"Content-Type"}),"/",(0,r.jsx)(n.code,{children:"Content-Length"})," headers, causing a conflict."]}),"\n",(0,r.jsx)(n.h2,{id:"middleware-vs-event-callback",children:"Middleware vs. Event Callback"}),"\n",(0,r.jsxs)(n.p,{children:["Middleware (",(0,r.jsx)(n.code,{children:"Middleware"}),") and Event Callback (",(0,r.jsx)(n.code,{children:"HOOK"}),") are two major process control features in the ",(0,r.jsx)(n.code,{children:"GoFrame"})," framework. Both can be used to control request processes and support binding specific routing rules. However, they are quite different."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Firstly, Middleware focuses on application-level process control, while Event Callback focuses on service-level process control; Middleware's scope is limited to applications, while Event Callback is more powerful, at the ",(0,r.jsx)(n.code,{children:"Server"})," level, and can handle static file request callbacks."]}),"\n",(0,r.jsx)(n.li,{children:"Secondly, middleware design adopts an \u201Conion\u201D design model; Event Callback adopts a hook trigger design for specific events."}),"\n",(0,r.jsx)(n.li,{children:"Lastly, middleware is relatively more flexible and is often recommended for process control; Event Callback is simpler but less flexible."}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"requesturl-vs-requestrouter",children:[(0,r.jsx)(n.code,{children:"Request.URL"})," vs. ",(0,r.jsx)(n.code,{children:"Request.Router"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Request.Router"})," is the matched route object containing route registration information, which is typically not used by developers. ",(0,r.jsx)(n.code,{children:"Request.URL"})," is the underlying URL object from the standard library ",(0,r.jsx)(n.code,{children:"http.Request"}),", containing the request URL address information, especially ",(0,r.jsx)(n.code,{children:"Request.URL.Path"})," representing the requested URI address."]}),"\n",(0,r.jsxs)(n.p,{children:["Therefore, if used in a service callback function, ",(0,r.jsx)(n.code,{children:"Request.Router"})," has a value because it will call the service callback method only when the route is matched. However, in an event callback function, this object may be ",(0,r.jsx)(n.code,{children:"nil"})," (indicating no matched service callback function route). Especially when using event callback for request API authentication, use the ",(0,r.jsx)(n.code,{children:"Request.URL"})," object to obtain the request URL information instead of ",(0,r.jsx)(n.code,{children:"Request.Router"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"static-file-events",children:"Static File Events"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["If you are only providing API API services (including front static file service proxies like ",(0,r.jsx)(n.code,{children:"nginx"}),"), which do not involve static file services, you can ignore this section."]})}),"\n",(0,r.jsxs)(n.p,{children:["Note that event callbacks can also match static file accesses that meet routing rules (",(0,r.jsx)(n.a,{href:"/en/docs/web/senior-static-server",children:"Static File Service"})," feature is disabled by default in the ",(0,r.jsx)(n.code,{children:"gf"})," framework, and we can manually enable it using ",(0,r.jsx)(n.code,{children:"WebServer"})," related configuration. See ",(0,r.jsx)(n.a,{href:"/en/docs/web/server-config",children:"Configuration"})," for details)."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if we register a ",(0,r.jsx)(n.code,{children:"/*"})," global match event callback route, static file accesses like ",(0,r.jsx)(n.code,{children:"/static/js/index.js"})," or ",(0,r.jsx)(n.code,{children:"/upload/images/thumb.jpg"})," will also be matched and processed in the registered event callback function."]}),"\n",(0,r.jsxs)(n.p,{children:["We can use ",(0,r.jsx)(n.code,{children:"Request.IsFileRequest()"})," in the event callback function to determine whether the request is a static file request. If the business logic does not require static file event callbacks, ignore it in the event callback function to selectively process it."]}),"\n",(0,r.jsx)(n.h2,{id:"event-callback-examples",children:"Event Callback Examples"}),"\n",(0,r.jsx)(n.h3,{id:"example-1-basic-usage",children:"Example 1: Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/os/glog"\n)\n\nfunc main() {\n    // Basic event callback usage\n    p := "/:name/info/{uid}"\n    s := g.Server()\n    s.BindHookHandlerByMap(p, map[string]ghttp.HandlerFunc{\n        ghttp.HookBeforeServe:  func(r *ghttp.Request) { glog.Println(ghttp.HookBeforeServe) },\n        ghttp.HookAfterServe:   func(r *ghttp.Request) { glog.Println(ghttp.HookAfterServe) },\n        ghttp.HookBeforeOutput: func(r *ghttp.Request) { glog.Println(ghttp.HookBeforeOutput) },\n        ghttp.HookAfterOutput:  func(r *ghttp.Request) { glog.Println(ghttp.HookAfterOutput) },\n    })\n    s.BindHandler(p, func(r *ghttp.Request) {\n        r.Response.Write("User:", r.Get("name"), ", uid:", r.Get("uid"))\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["When accessing ",(0,r.jsx)(n.a,{href:"http://127.0.0.1:8199/john/info/10000",children:"http://127.0.0.1:8199/john/info/10000"}),", the terminal running the WebServer process will print out the corresponding event names according to the execution sequence of the events."]}),"\n",(0,r.jsx)(n.h3,{id:"example-2-registering-the-same-event",children:"Example 2: Registering the Same Event"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n)\n\n// Priority HOOK\nfunc beforeServeHook1(r *ghttp.Request) {\n    r.SetParam("name", "GoFrame")\n    r.Response.Writeln("set name")\n}\n\n// Subsequent HOOK\nfunc beforeServeHook2(r *ghttp.Request) {\n    r.SetParam("site", "https://goframe.org")\n    r.Response.Writeln("set site")\n}\n\n// Allow registering multiple callback functions for the same route and event, invoked in the order of registration priority.\n// To easily compare priority in the route table, here the HOOK callback functions are separately defined as two functions.\nfunc main() {\n    s := g.Server()\n    s.BindHandler("/", func(r *ghttp.Request) {\n        r.Response.Writeln(r.Get("name"))\n        r.Response.Writeln(r.Get("site"))\n    })\n    s.BindHookHandler("/", ghttp.HookBeforeServe, beforeServeHook1)\n    s.BindHookHandler("/", ghttp.HookBeforeServe, beforeServeHook2)\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"After execution, the terminal outputs routing table information as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"SERVER | ADDRESS | DOMAIN  | METHOD | P | ROUTE |        HANDLER        |    MIDDLEWARE\n|---------|---------|---------|--------|---|-------|-----------------------|-------------------|\n  default |  :8199  | default | ALL    | 1 | /     | main.main.func1       |\n|---------|---------|---------|--------|---|-------|-----------------------|-------------------|\n  default |  :8199  | default | ALL    | 2 | /     | main.beforeServeHook1 | HOOK_BEFORE_SERVE\n|---------|---------|---------|--------|---|-------|-----------------------|-------------------|\n  default |  :8199  | default | ALL    | 1 | /     | main.beforeServeHook2 | HOOK_BEFORE_SERVE\n|---------|---------|---------|--------|---|-------|-----------------------|-------------------|\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After manually accessing ",(0,r.jsx)(n.a,{href:"http://127.0.0.1:8199/",children:"http://127.0.0.1:8199/"}),", the page output is:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"set name\nset site\nGoFrame\nhttps://goframe.org\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-3-changing-business-logic",children:"Example 3: Changing Business Logic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n)\n\nfunc main() {\n    s := g.Server()\n    // Multi-event callback example, event 1\n    pattern1 := "/:name/info"\n    s.BindHookHandlerByMap(pattern1, map[string]ghttp.HandlerFunc{\n        ghttp.HookBeforeServe: func(r *ghttp.Request) {\n            r.SetParam("uid", 1000)\n        },\n    })\n    s.BindHandler(pattern1, func(r *ghttp.Request) {\n        r.Response.Write("User:", r.Get("name"), ", uid:", r.Get("uid"))\n    })\n\n    // Multi-event callback example, event 2\n    pattern2 := "/{object}/list/{page}.java"\n    s.BindHookHandlerByMap(pattern2, map[string]ghttp.HandlerFunc{\n        ghttp.HookBeforeOutput: func(r *ghttp.Request) {\n            r.Response.SetBuffer([]byte(\n                fmt.Sprintf("Changed output content through event, object:%s, page:%s", r.Get("object"), r.GetRouterString("page"))),\n            )\n        },\n    })\n    s.BindHandler(pattern2, func(r *ghttp.Request) {\n        r.Response.Write(r.Router.Uri)\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Event 1 sets the GET parameter when accessing the route ",(0,r.jsx)(n.code,{children:"/:\\name/info"}),"; Event 2 changes the output result when the access path matches the route ",(0,r.jsx)(n.code,{children:"/{object}/list/{page}.java"}),". After execution, access the following URLs to see the effect:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://127.0.0.1:8199/user/info",children:"http://127.0.0.1:8199/user/info"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://127.0.0.1:8199/user/list/1.java",children:"http://127.0.0.1:8199/user/list/1.java"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://127.0.0.1:8199/user/list/2.java",children:"http://127.0.0.1:8199/user/list/2.java"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-4-callback-execution-priority",children:"Example 4: Callback Execution Priority"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n)\n\nfunc main() {\n    s := g.Server()\n    s.BindHandler("/priority/show", func(r *ghttp.Request) {\n        r.Response.Writeln("priority service")\n    })\n\n    s.BindHookHandlerByMap("/priority/:name", map[string]ghttp.HandlerFunc{\n        ghttp.HookBeforeServe: func(r *ghttp.Request) {\n            r.Response.Writeln("/priority/:name")\n        },\n    })\n    s.BindHookHandlerByMap("/priority/*any", map[string]ghttp.HandlerFunc{\n        ghttp.HookBeforeServe: func(r *ghttp.Request) {\n            r.Response.Writeln("/priority/*any")\n        },\n    })\n    s.BindHookHandlerByMap("/priority/show", map[string]ghttp.HandlerFunc{\n        ghttp.HookBeforeServe: func(r *ghttp.Request) {\n            r.Response.Writeln("/priority/show")\n        },\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, we registered event callbacks for 3 route rules, all of which can match the route registered address ",(0,r.jsx)(n.code,{children:"/priority/show"}),", allowing us to access this address to see the order of route execution."]}),"\n",(0,r.jsxs)(n.p,{children:["After execution, when we access ",(0,r.jsx)(n.a,{href:"http://127.0.0.1:8199/priority/show",children:"http://127.0.0.1:8199/priority/show"}),", the page outputs the following information:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/priority/show\n/priority/:name\n/priority/*any\npriority service\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-5-allowing-cross-origin-requests",children:"Example 5: Allowing Cross-Origin Requests"}),"\n",(0,r.jsxs)(n.p,{children:["In the chapters ",(0,r.jsx)(n.a,{href:"/en/docs/web/router-middleware-intro",children:"Middleware - Intro"})," and ",(0,r.jsx)(n.a,{href:"/en/docs/web/senior-cors",children:"CORS"}),", examples of cross-origin handling have also been introduced. In most cases, we use middleware to achieve cross-origin request handling."]}),"\n",(0,r.jsxs)(n.p,{children:["Both ",(0,r.jsx)(n.code,{children:"HOOK"})," and middleware can implement cross-origin request handling. Here, we'll use HOOK to achieve simple cross-origin processing. First, let's look at a simple API example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n)\n\nfunc Order(r *ghttp.Request) {\n    r.Response.Write("GET")\n}\n\nfunc main() {\n    s := g.Server()\n    s.Group("/api.v1", func(group *ghttp.RouterGroup) {\n        group.GET("/order", Order)\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The API address is ",(0,r.jsx)(n.a,{href:"http://localhost:8199/api.v1/order",children:"http://localhost:8199/api.v1/order"}),", and this API is not allowed for cross-origin. Open a different domain name, such as the Baidu homepage (conveniently using ",(0,r.jsx)(n.code,{children:"jQuery"})," for debugging), and press ",(0,r.jsx)(n.code,{children:"F12"})," to open the developer panel, and execute the following ",(0,r.jsx)(n.code,{children:"AJAX"})," request in ",(0,r.jsx)(n.code,{children:"console"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'$.get("http://localhost:8199/api.v1/order", function(result){\n    console.log(result)\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"The result is:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(120184).Z+"",width:"1304",height:"465"})}),"\n",(0,r.jsx)(n.p,{children:"A cross-origin error is returned. Next, let's modify the test code as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n)\n\nfunc Order(r *ghttp.Request) {\n    r.Response.Write("GET")\n}\n\nfunc main() {\n    s := g.Server()\n    s.Group("/api.v1", func(group *ghttp.RouterGroup) {\n        group.Hook("/*any", ghttp.HookBeforeServe, func(r *ghttp.Request) {\n            r.Response.CORSDefault()\n        })\n        group.GET("/order", Order)\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["We added a bound event ",(0,r.jsx)(n.code,{children:"ghttp.HookBeforeServe"})," for the route ",(0,r.jsx)(n.code,{children:"/api.v1/*any"}),". This event will be called before all service executions. In this event's callback method, we allow cross-origin requests by calling the ",(0,r.jsx)(n.code,{children:"CORSDefault"})," method with default cross-origin settings. The bound event route rule uses a vague match rule, indicating that all API addresses starting with ",(0,r.jsx)(n.code,{children:"/api.v1"})," allow cross-origin requests."]}),"\n",(0,r.jsxs)(n.p,{children:["Return to the Baidu homepage and execute the ",(0,r.jsx)(n.code,{children:"AJAX"})," request again; this time, it is successful:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(926266).Z+"",width:"1298",height:"551"})})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},520055:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/25a101c86afb67b0c4f69162657c7853-e1ff3e566d7c32b6bc089c21f51f0fc6.png"},926266:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/60e832386a9f7ae79a1022d33cb58db6-c5c9e0b2dc0dde744148a4f2024d1bbc.png"},120184:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/a6db04d4319bfebb80ff75d5d0f64e6a-036a662a4b30a58e1a61a77ee68f4c98.png"},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var i=t(667294);let r={},o=i.createContext(r);function s(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);