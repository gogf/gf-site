"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["74145"],{832792:function(n,e,r){r.r(e),r.d(e,{metadata:()=>s,contentTitle:()=>a,default:()=>h,assets:()=>d,toc:()=>t,frontMatter:()=>c});var s=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar/\u6CDB\u578B\u7C7B\u578B-\u65B9\u6CD5\u4ECB\u7ECD","title":"Generic - Methods","description":"Common methods in the GoFrame framework, including operations such as creating new variables, cloning variables, setting variables, and getting variable values. The usage of each method is explained through example code to help users better understand and apply these methods.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar/\u6CDB\u578B\u7C7B\u578B-\u65B9\u6CD5\u4ECB\u7ECD.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar","slug":"/docs/components/container-gvar-funcs","permalink":"/en/docs/components/container-gvar-funcs","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar/\u6CDB\u578B\u7C7B\u578B-\u65B9\u6CD5\u4ECB\u7ECD.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":1,"frontMatter":{"slug":"/docs/components/container-gvar-funcs","title":"Generic - Methods","sidebar_position":1,"hide_title":true,"keywords":["Method Introduction","Generic Type","GoFrame","Method Usage","gvar Package","Data Type Conversion","Example Code","Variable Operation","GoFrame Framework","GoFrame Application"],"description":"Common methods in the GoFrame framework, including operations such as creating new variables, cloning variables, setting variables, and getting variable values. The usage of each method is explained through example code to help users better understand and apply these methods."},"sidebar":"mainSidebar","previous":{"title":"Generic - Usage","permalink":"/en/docs/components/container-gvar-example"},"next":{"title":"Generic - Precautions","permalink":"/en/docs/components/container-gvar-notice"}}'),i=r("785893"),l=r("250065");let c={slug:"/docs/components/container-gvar-funcs",title:"Generic - Methods",sidebar_position:1,hide_title:!0,keywords:["Method Introduction","Generic Type","GoFrame","Method Usage","gvar Package","Data Type Conversion","Example Code","Variable Operation","GoFrame Framework","GoFrame Application"],description:"Common methods in the GoFrame framework, including operations such as creating new variables, cloning variables, setting variables, and getting variable values. The usage of each method is explained through example code to help users better understand and apply these methods."},a=void 0,d={},t=[{value:"<code>New</code>",id:"new",level:3},{value:"<code>Clone</code>",id:"clone",level:3},{value:"<code>Set</code>",id:"set",level:3},{value:"<code>Val</code>",id:"val",level:3},{value:"<code>Interface</code>",id:"interface",level:3},{value:"<code>Bytes</code>",id:"bytes",level:3},{value:"<code>String</code>",id:"string",level:3},{value:"<code>Bool</code>",id:"bool",level:3},{value:"<code>Int</code>",id:"int",level:3},{value:"<code>Uint</code>",id:"uint",level:3},{value:"<code>Float32</code>",id:"float32",level:3},{value:"<code>Float64</code>",id:"float64",level:3},{value:"<code>Time</code>",id:"time",level:3},{value:"<code>GTime</code>",id:"gtime",level:3},{value:"<code>Duration</code>",id:"duration",level:3},{value:"<code>MarshalJSON</code>",id:"marshaljson",level:3},{value:"<code>UnmarshalJSON</code>",id:"unmarshaljson",level:3},{value:"<code>UnmarshalValue</code>",id:"unmarshalvalue",level:3},{value:"<code>IsNil</code>",id:"isnil",level:3},{value:"<code>IsEmpty</code>",id:"isempty",level:3},{value:"<code>IsInt</code>",id:"isint",level:3},{value:"<code>IsUint</code>",id:"isuint",level:3},{value:"<code>IsFloat</code>",id:"isfloat",level:3},{value:"<code>IsSlice</code>",id:"isslice",level:3},{value:"<code>IsMap</code>",id:"ismap",level:3},{value:"<code>IsStruct</code>",id:"isstruct",level:3},{value:"<code>ListItemValues</code>",id:"listitemvalues",level:3},{value:"<code>ListItemValuesUnique</code>",id:"listitemvaluesunique",level:3},{value:"<code>Struct</code>",id:"struct",level:3},{value:"<code>Structs</code>",id:"structs",level:3},{value:"<code>Ints</code>",id:"ints",level:3},{value:"<code>Int64s</code>",id:"int64s",level:3},{value:"<code>Uints</code>",id:"uints",level:3},{value:"<code>Uint64s</code>",id:"uint64s",level:3},{value:"<code>Floats</code>",id:"floats",level:3},{value:"<code>Float64s</code>",id:"float64s",level:3},{value:"<code>Float32s</code>",id:"float32s",level:3},{value:"<code>Strings</code>",id:"strings",level:3},{value:"<code>Interfaces</code>",id:"interfaces",level:3},{value:"<code>Slice</code>",id:"slice",level:3},{value:"<code>Array</code>",id:"array",level:3},{value:"<code>Vars</code>",id:"vars",level:3},{value:"<code>Map</code>",id:"map",level:3},{value:"<code>MapStrAny</code>",id:"mapstrany",level:3},{value:"<code>MapStrStr</code>",id:"mapstrstr",level:3},{value:"<code>MapStrVar</code>",id:"mapstrvar",level:3},{value:"<code>MapDeep</code>",id:"mapdeep",level:3},{value:"<code>MapStrStrDeep</code>",id:"mapstrstrdeep",level:3},{value:"<code>MapStrVarDeep</code>",id:"mapstrvardeep",level:3},{value:"<code>Maps</code>",id:"maps",level:3},{value:"<code>MapsDeep</code>",id:"mapsdeep",level:3},{value:"<code>MapToMap</code>",id:"maptomap",level:3},{value:"<code>MapToMaps</code>",id:"maptomaps",level:3},{value:"<code>MapToMapsDeep</code>",id:"maptomapsdeep",level:3},{value:"<code>Scan</code>",id:"scan",level:3}];function o(n){let e={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.admonition,{type:"tip",children:(0,i.jsxs)(e.p,{children:["The following list of common methods may become outdated compared to new features in the code. For more methods and examples, please refer to the code documentation: ",(0,i.jsx)(e.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/container/gvar",children:"https://pkg.go.dev/github.com/gogf/gf/v2/container/gvar"})]})}),"\n",(0,i.jsx)(e.h3,{id:"new",children:(0,i.jsx)(e.code,{children:"New"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"New"})," creates and returns a new ",(0,i.jsx)(e.code,{children:"Var"})," with the given ",(0,i.jsx)(e.code,{children:"value"}),". The optional parameter ",(0,i.jsx)(e.code,{children:"safe"})," specifies whether to use ",(0,i.jsx)(e.code,{children:"Var"})," in a concurrent-safe manner, with a default value of ",(0,i.jsx)(e.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func New(value interface{}, safe ...bool) *Var\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// New\nfunc ExampleVarNew() {\n      v := gvar.New(400)\n      g.Dump(v)\n\n      // Output:\n      // "400"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"clone",children:(0,i.jsx)(e.code,{children:"Clone"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Clone"})," performs a shallow copy of the current ",(0,i.jsx)(e.code,{children:"Var"})," and returns a pointer to this ",(0,i.jsx)(e.code,{children:"Var"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Clone() *Var\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Clone\nfunc ExampleVar_Clone() {\n      tmp := "fisrt hello"\n      v := gvar.New(tmp)\n      g.DumpWithType(v.Clone())\n      fmt.Println(v == v.Clone())\n\n      // Output:\n      // *gvar.Var(11) "fisrt hello"\n      // false\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"set",children:(0,i.jsx)(e.code,{children:"Set"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Set"})," sets the value of ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"value"})," and returns the old value of ",(0,i.jsx)(e.code,{children:"v"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Set(value interface{}) (old interface{})\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Set\nfunc ExampleVar_Set() {\n      var v = gvar.New(100.00)\n      g.Dump(v.Set(200.00))\n      g.Dump(v)\n\n      // Output:\n      // 100\n      // "200"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"val",children:(0,i.jsx)(e.code,{children:"Val"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Val"})," returns the current value of ",(0,i.jsx)(e.code,{children:"v"}),", with a type of ",(0,i.jsx)(e.code,{children:"interface{}"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Val() interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Val\nfunc ExampleVar_Val() {\n      var v = gvar.New(100.00)\n      g.DumpWithType(v.Val())\n\n      // Output:\n      // float64(100)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"interface",children:(0,i.jsx)(e.code,{children:"Interface"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Interface"})," is an alias for ",(0,i.jsx)(e.code,{children:"Val"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Interface() interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Interface\nfunc ExampleVar_Interface() {\n      var v = gvar.New(100.00)\n      g.DumpWithType(v.Interface())\n\n      // Output:\n      // float64(100)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"bytes",children:(0,i.jsx)(e.code,{children:"Bytes"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Bytes"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to a byte array."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Bytes() []byte\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Bytes\nfunc ExampleVar_Bytes() {\n      var v = gvar.New("GoFrame")\n      g.DumpWithType(v.Bytes())\n\n      // Output:\n      // []byte(7) "GoFrame"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"string",children:(0,i.jsx)(e.code,{children:"String"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"String"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to a string."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) String() string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// String\nfunc ExampleVar_String() {\n      var v = gvar.New("GoFrame")\n      g.DumpWithType(v.String())\n\n      // Output:\n      // string(7) "GoFrame"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"bool",children:(0,i.jsx)(e.code,{children:"Bool"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Bool"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to a boolean value."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Bool() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Bool\nfunc ExampleVar_Bool() {\n      var v = gvar.New(true)\n      g.DumpWithType(v.Bool())\n\n      // Output:\n      // bool(true)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"int",children:(0,i.jsx)(e.code,{children:"Int"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Int"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to an integer type."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Int() int\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Int\nfunc ExampleVar_Int() {\n      var v = gvar.New(-1000)\n      g.DumpWithType(v.Int())\n\n      // Output:\n      // int(-1000)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"uint",children:(0,i.jsx)(e.code,{children:"Uint"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Uint"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to an unsigned integer type."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Uint() uint\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Uint\nfunc ExampleVar_Uint() {\n      var v = gvar.New(1000)\n      g.DumpWithType(v.Uint())\n\n      // Output:\n      // uint(1000)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"float32",children:(0,i.jsx)(e.code,{children:"Float32"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Float32"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to a ",(0,i.jsx)(e.code,{children:"32-bit"})," float type."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Float32() float32\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Float32\nfunc ExampleVar_Float32() {\n      var price = gvar.New(100.00)\n      g.DumpWithType(price.Float32())\n\n      // Output:\n      // float32(100)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"float64",children:(0,i.jsx)(e.code,{children:"Float64"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Float64"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to a ",(0,i.jsx)(e.code,{children:"64-bit"})," float type."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Float64() float64\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Float32\nfunc ExampleVar_Float64() {\n      var price = gvar.New(100.00)\n      g.DumpWithType(price.Float64())\n\n      // Output:\n      // float64(100)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"time",children:(0,i.jsx)(e.code,{children:"Time"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Time"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"time.Time"}),". The ",(0,i.jsx)(e.code,{children:"format"})," parameter is used to specify the time string format with ",(0,i.jsx)(e.code,{children:"gtime"}),", e.g., ",(0,i.jsx)(e.code,{children:"Y-m-d H:i:s"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Time(format ...string) time.Time\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Time\nfunc ExampleVar_Time() {\n      var v = gvar.New("2021-11-11 00:00:00")\n      g.DumpWithType(v.Time())\n\n      // Output:\n      // time.Time(29) "2021-11-11 00:00:00 +0800 CST"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"gtime",children:(0,i.jsx)(e.code,{children:"GTime"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"G``Time"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"*gtime.Time"}),". The ",(0,i.jsx)(e.code,{children:"format"})," parameter is used to specify the time string format with ",(0,i.jsx)(e.code,{children:"gtime"}),", e.g., ",(0,i.jsx)(e.code,{children:"Y-m-d H:i:s"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) GTime(format ...string) *gtime.Time\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// GTime\nfunc ExampleVar_GTime() {\n      var v = gvar.New("2021-11-11 00:00:00")\n      g.DumpWithType(v.GTime())\n\n      // Output:\n      // *gtime.Time(19) "2021-11-11 00:00:00"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"duration",children:(0,i.jsx)(e.code,{children:"Duration"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Duration"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"time.Duration"}),". If the value of ",(0,i.jsx)(e.code,{children:"v"})," is a string, it is converted using ",(0,i.jsx)(e.code,{children:"time.ParseDuration"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Duration() time.Duration\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Duration\nfunc ExampleVar_Duration() {\n      var v = gvar.New("300s")\n      g.DumpWithType(v.Duration())\n\n      // Output:\n      // time.Duration(4) "5m0s"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"marshaljson",children:(0,i.jsx)(e.code,{children:"MarshalJSON"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MarshalJSON"})," implements the ",(0,i.jsx)(e.code,{children:"MarshalJSON"})," method of the ",(0,i.jsx)(e.code,{children:"json"})," interface."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MarshalJSON() ([]byte, error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MarshalJSON\nfunc ExampleVar_MarshalJSON() {\n      testMap := g.Map{\n          "code":  "0001",\n          "name":  "Golang",\n          "count": 10,\n      }\n\n      var v = gvar.New(testMap)\n      res, err := json.Marshal(&v)\n      if err != nil {\n          panic(err)\n      }\n      g.DumpWithType(res)\n\n      // Output:\n      // []byte(42) "{"code":"0001","count":10,"name":"Golang"}"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"unmarshaljson",children:(0,i.jsx)(e.code,{children:"UnmarshalJSON"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"UnmarshalJSON"})," implements the ",(0,i.jsx)(e.code,{children:"UnmarshalJSON"})," method of the ",(0,i.jsx)(e.code,{children:"json"})," interface."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) UnmarshalJSON(b []byte) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// UnmarshalJSON\nfunc ExampleVar_UnmarshalJSON() {\n      tmp := []byte(`{\n           "Code":          "0003",\n           "Name":          "Golang Book3",\n           "Quantity":      3000,\n           "Price":         300,\n           "OnSale":        true\n      }`)\n      var v = gvar.New(map[string]interface{}{})\n      if err := json.Unmarshal(tmp, &v); err != nil {\n          panic(err)\n      }\n\n      g.Dump(v)\n\n      // Output:\n      // "{\\"Code\\":\\"0003\\",\\"Name\\":\\"Golang Book3\\",\\"OnSale\\":true,\\"Price\\":300,\\"Quantity\\":3000}"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"unmarshalvalue",children:(0,i.jsx)(e.code,{children:"UnmarshalValue"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"UnmarshalValue"})," is an interface implementation that sets any type of value for ",(0,i.jsx)(e.code,{children:"Var"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) UnmarshalValue(value interface{}) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// UnmarshalValue\nfunc ExampleVar_UnmarshalValue() {\n      tmp := g.Map{\n          "code":  "00002",\n          "name":  "GoFrame",\n          "price": 100,\n          "sale":  true,\n      }\n\n      var v = gvar.New(map[string]interface{}{})\n      if err := v.UnmarshalValue(tmp); err != nil {\n          panic(err)\n      }\n      g.Dump(v)\n\n      // Output:\n      // "{\\"code\\":\\"00002\\",\\"name\\":\\"GoFrame\\",\\"price\\":100,\\"sale\\":true}"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"isnil",children:(0,i.jsx)(e.code,{children:"IsNil"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsNil"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is ",(0,i.jsx)(e.code,{children:"nil"}),", returning ",(0,i.jsx)(e.code,{children:"true"})," if it is ",(0,i.jsx)(e.code,{children:"nil"}),", and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsNil() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'/// IsNil\nfunc ExampleVar_IsNil() {\n      g.Dump(gvar.New(0).IsNil())\n      g.Dump(gvar.New(0.1).IsNil())\n      // true\n      g.Dump(gvar.New(nil).IsNil())\n      g.Dump(gvar.New("").IsNil())\n\n      // Output:\n      // false\n      // false\n      // true\n      // false\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"isempty",children:(0,i.jsx)(e.code,{children:"IsEmpty"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsEmpty"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is empty, returning ",(0,i.jsx)(e.code,{children:"true"})," if it is, and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsEmpty() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// IsEmpty\nfunc ExampleVar_IsEmpty() {\n      g.Dump(gvar.New(0).IsEmpty())\n      g.Dump(gvar.New(nil).IsEmpty())\n      g.Dump(gvar.New("").IsEmpty())\n      g.Dump(gvar.New(g.Map{"k": "v"}).IsEmpty())\n\n      // Output:\n      // true\n      // true\n      // true\n      // false\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"isint",children:(0,i.jsx)(e.code,{children:"IsInt"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsInt"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is of ",(0,i.jsx)(e.code,{children:"int"})," type, returning ",(0,i.jsx)(e.code,{children:"true"})," if it is, and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsInt() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// IsInt\nfunc ExampleVar_IsInt() {\n      g.Dump(gvar.New(0).IsInt())\n      g.Dump(gvar.New(0.1).IsInt())\n      g.Dump(gvar.New(nil).IsInt())\n      g.Dump(gvar.New("").IsInt())\n\n      // Output:\n      // true\n      // false\n      // false\n      // false\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"isuint",children:(0,i.jsx)(e.code,{children:"IsUint"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsUint"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is of ",(0,i.jsx)(e.code,{children:"uint"})," type, returning ",(0,i.jsx)(e.code,{children:"true"})," if it is, and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsUint() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// IsUint\nfunc ExampleVar_IsUint() {\n      g.Dump(gvar.New(0).IsUint())\n      g.Dump(gvar.New(uint8(8)).IsUint())\n      g.Dump(gvar.New(nil).IsUint())\n\n      // Output:\n      // false\n      // true\n      // false\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"isfloat",children:(0,i.jsx)(e.code,{children:"IsFloat"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsFloat"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is of ",(0,i.jsx)(e.code,{children:"float"})," type, returning ",(0,i.jsx)(e.code,{children:"true"})," if it is, and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsFloat() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// IsFloat\nfunc ExampleVar_IsFloat() {\n      g.Dump(g.NewVar(uint8(8)).IsFloat())\n      g.Dump(g.NewVar(float64(8)).IsFloat())\n      g.Dump(g.NewVar(0.1).IsFloat())\n\n      // Output:\n      // false\n      // true\n      // true\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"isslice",children:(0,i.jsx)(e.code,{children:"IsSlice"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsSlice"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is of slice type, returning ",(0,i.jsx)(e.code,{children:"true"})," if it is, and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsSlice() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// IsSlice\nfunc ExampleVar_IsSlice() {\n      g.Dump(g.NewVar(0).IsSlice())\n      g.Dump(g.NewVar(g.Slice{0}).IsSlice())\n\n      // Output:\n      // false\n      // true\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"ismap",children:(0,i.jsx)(e.code,{children:"IsMap"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsMap"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is of map type, returning ",(0,i.jsx)(e.code,{children:"true"})," if it is, and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsMap() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// IsMap\nfunc ExampleVar_IsMap() {\n      g.Dump(g.NewVar(0).IsMap())\n      g.Dump(g.NewVar(g.Map{"k": "v"}).IsMap())\n      g.Dump(g.NewVar(g.Slice{}).IsMap())\n\n      // Output:\n      // false\n      // true\n      // false\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"isstruct",children:(0,i.jsx)(e.code,{children:"IsStruct"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"IsStruct"})," checks if ",(0,i.jsx)(e.code,{children:"v"})," is of struct type, returning ",(0,i.jsx)(e.code,{children:"true"})," if it is, and ",(0,i.jsx)(e.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) IsStruct() bool\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// IsStruct\nfunc ExampleVar_IsStruct() {\n      g.Dump(g.NewVar(0).IsStruct())\n      g.Dump(g.NewVar(g.Map{"k": "v"}).IsStruct())\n\n      a := struct{}{}\n      g.Dump(g.NewVar(a).IsStruct())\n      g.Dump(g.NewVar(&a).IsStruct())\n\n      // Output:\n      // false\n      // false\n      // true\n      // true\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"listitemvalues",children:(0,i.jsx)(e.code,{children:"ListItemValues"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"ListItemValues"})," retrieves and returns all item elements of the struct/map with the key ",(0,i.jsx)(e.code,{children:"key"}),". Note that the ",(0,i.jsx)(e.code,{children:"list"})," parameter should be a slice type containing elements of ",(0,i.jsx)(e.code,{children:"map"})," or ",(0,i.jsx)(e.code,{children:"struct"}),", otherwise it will return an empty slice."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) ListItemValues(key interface{}) (values []interface{})\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// ListItemValues\nfunc ExampleVar_ListItemValues() {\n      var goods1 = g.List{\n          g.Map{"id": 1, "price": 100.00},\n          g.Map{"id": 2, "price": 0},\n          g.Map{"id": 3, "price": nil},\n      }\n      var v = gvar.New(goods1)\n      fmt.Println(v.ListItemValues("id"))\n      fmt.Println(v.ListItemValues("price"))\n\n      // Output:\n      // [1 2 3]\n      // [100 0 <nil>]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"listitemvaluesunique",children:(0,i.jsx)(e.code,{children:"ListItemValuesUnique"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"ListItemValuesUnique"})," retrieves and returns all unique elements of the struct/map with the specified ",(0,i.jsx)(e.code,{children:"key"}),". Note that the ",(0,i.jsx)(e.code,{children:"list"})," parameter should be a slice type containing elements of ",(0,i.jsx)(e.code,{children:"map"})," or ",(0,i.jsx)(e.code,{children:"struct"}),", otherwise it will return an empty slice."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) ListItemValuesUnique(key string) []interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// ListItemValuesUnique\nfunc ExampleVar_ListItemValuesUnique() {\n      var (\n          goods1 = g.List{\n              g.Map{"id": 1, "price": 100.00},\n              g.Map{"id": 2, "price": 100.00},\n              g.Map{"id": 3, "price": nil},\n          }\n          v = gvar.New(goods1)\n      )\n\n      fmt.Println(v.ListItemValuesUnique("id"))\n      fmt.Println(v.ListItemValuesUnique("price"))\n\n      // Output:\n      // [1 2 3]\n      // [100 <nil>]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"struct",children:(0,i.jsx)(e.code,{children:"Struct"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Struct"})," maps the value of ",(0,i.jsx)(e.code,{children:"v"})," to the ",(0,i.jsx)(e.code,{children:"pointer"}),". The ",(0,i.jsx)(e.code,{children:"pointer"})," parameter should point to an instance of a struct. The ",(0,i.jsx)(e.code,{children:"mapping"})," parameter is used to specify key-to-field mapping rules."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Struct(pointer interface{}, mapping ...map[string]string) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleVar_Struct() {\n      params1 := g.Map{\n          "uid":  1,\n          "Name": "john",\n      }\n      v := gvar.New(params1)\n      type tartget struct {\n          Uid  int\n          Name string\n      }\n      t := new(tartget)\n      if err := v.Struct(&t); err != nil {\n          panic(err)\n      }\n      g.Dump(t)\n\n      // Output:\n      // {\n      //     Uid:  1,\n      //     Name: "john",\n      // }\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"structs",children:(0,i.jsx)(e.code,{children:"Structs"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Structs"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to a slice type of the given struct. The ",(0,i.jsx)(e.code,{children:"pointer"})," parameter should point to an instance of a struct. The ",(0,i.jsx)(e.code,{children:"mapping"})," parameter is used to specify key-to-field mapping rules."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Structs(pointer interface{}, mapping ...map[string]string) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'func ExampleVar_Structs() {\n      paramsArray := []g.Map{}\n      params1 := g.Map{\n          "uid":  1,\n          "Name": "golang",\n      }\n      params2 := g.Map{\n          "uid":  2,\n          "Name": "java",\n      }\n\n      paramsArray = append(paramsArray, params1, params2)\n      v := gvar.New(paramsArray)\n      type tartget struct {\n          Uid  int\n          Name string\n      }\n      var t []tartget\n      if err := v.Structs(&t); err != nil {\n          panic(err)\n      }\n      g.DumpWithType(t)\n\n      // Output:\n      // []gvar_test.tartget(2) [\n      //     gvar_test.tartget(2) {\n      //         Uid:  int(1),\n      //         Name: string(6) "golang",\n      //     },\n      //     gvar_test.tartget(2) {\n      //         Uid:  int(2),\n      //         Name: string(4) "java",\n      //     },\n      // ]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"ints",children:(0,i.jsx)(e.code,{children:"Ints"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Ints"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]int"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Ints() []int\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Ints\nfunc ExampleVar_Ints() {\n      var (\n          arr = []int{1, 2, 3, 4, 5}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Ints())\n\n      // Output:\n      // [1 2 3 4 5]\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"int64s",children:(0,i.jsx)(e.code,{children:"Int64s"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Int64s"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]int64"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Int64s() []int64\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Int64s\nfunc ExampleVar_Int64s() {\n      var (\n          arr = []int64{1, 2, 3, 4, 5}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Int64s())\n\n      // Output:\n      // [1 2 3 4 5]\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"uints",children:(0,i.jsx)(e.code,{children:"Uints"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Uints"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]uint"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Uints() []uint\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Uints\nfunc ExampleVar_Uints() {\n      var (\n          arr = []uint{1, 2, 3, 4, 5}\n          obj = gvar.New(arr)\n      )\n      fmt.Println(obj.Uints())\n\n      // Output:\n      // [1 2 3 4 5]\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"uint64s",children:(0,i.jsx)(e.code,{children:"Uint64s"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Uint64s"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]uint64"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Uint64s() []uint64\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Uint64s\nfunc ExampleVar_Uint64s() {\n      var (\n          arr = []uint64{1, 2, 3, 4, 5}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Uint64s())\n\n      // Output:\n      // [1 2 3 4 5]\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"floats",children:(0,i.jsx)(e.code,{children:"Floats"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Floats"})," is an alias for ",(0,i.jsx)(e.code,{children:"Float64s"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Floats() []float64\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Floats\nfunc ExampleVar_Floats() {\n      var (\n          arr = []float64{1, 2, 3, 4, 5}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Floats())\n\n      // Output:\n      // [1 2 3 4 5]\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"float64s",children:(0,i.jsx)(e.code,{children:"Float64s"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Float64s"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]float64"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Float64s() []float64\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Float64s\nfunc ExampleVar_Float64s() {\n      var (\n          arr = []float64{1, 2, 3, 4, 5}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Float64s())\n\n      // Output:\n      // [1 2 3 4 5]\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"float32s",children:(0,i.jsx)(e.code,{children:"Float32s"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Float32s"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]float32"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Float32s() []float32\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"// Float32s\nfunc ExampleVar_Float32s() {\n      var (\n          arr = []float32{1, 2, 3, 4, 5}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Float32s())\n\n      // Output:\n      // [1 2 3 4 5]\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"strings",children:(0,i.jsx)(e.code,{children:"Strings"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Strings"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]string"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Strings() []string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Strings\nfunc ExampleVar_Strings() {\n      var (\n          arr = []string{"GoFrame", "Golang"}\n          obj = gvar.New(arr)\n      )\n      fmt.Println(obj.Strings())\n\n      // Output:\n      // [GoFrame Golang]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"interfaces",children:(0,i.jsx)(e.code,{children:"Interfaces"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Interfaces"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]interface{}"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Interfaces() []interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Interfaces\nfunc ExampleVar_Interfaces() {\n      var (\n          arr = []string{"GoFrame", "Golang"}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Interfaces())\n\n      // Output:\n      // [GoFrame Golang]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"slice",children:(0,i.jsx)(e.code,{children:"Slice"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Slice"})," is an alias for ",(0,i.jsx)(e.code,{children:"Interfaces"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Slice() []interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Slice\nfunc ExampleVar_Slice() {\n      var (\n          arr = []string{"GoFrame", "Golang"}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Slice())\n\n      // Output:\n      // [GoFrame Golang]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"array",children:(0,i.jsx)(e.code,{children:"Array"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Array"})," is an alias for ",(0,i.jsx)(e.code,{children:"Interfaces"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Array() []interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Array\nfunc ExampleVar_Array() {\n      var (\n          arr = []string{"GoFrame", "Golang"}\n          obj = gvar.New(arr)\n      )\n      fmt.Println(obj.Array())\n\n      // Output:\n      // [GoFrame Golang]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"vars",children:(0,i.jsx)(e.code,{children:"Vars"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Vars"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]var"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Vars() []*Var\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Vars\nfunc ExampleVar_Vars() {\n      var (\n          arr = []string{"GoFrame", "Golang"}\n          obj = gvar.New(arr)\n      )\n\n      fmt.Println(obj.Vars())\n\n      // Output:\n      // [GoFrame Golang]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"map",children:(0,i.jsx)(e.code,{children:"Map"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Map"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"map[string]interface{}"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Map(tags ...string) map[string]interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Map\nfunc ExampleVar_Map() {\n      var (\n          m   = g.Map{"id": 1, "price": 100.00}\n          v   = gvar.New(m)\n          res = v.Map()\n      )\n\n      fmt.Println(res["id"], res["price"])\n\n      // Output:\n      // 1 100\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapstrany",children:(0,i.jsx)(e.code,{children:"MapStrAny"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapStrAny"})," is similar to the ",(0,i.jsx)(e.code,{children:"Map"})," function but implements the ",(0,i.jsx)(e.code,{children:"MapStrAny"})," interface."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapStrAny() map[string]interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapStrAny\nfunc ExampleVar_MapStrAny() {\n      var (\n          m1 = g.Map{"id": 1, "price": 100}\n          v  = gvar.New(m1)\n          v2 = v.MapStrAny()\n      )\n\n      fmt.Println(v2["price"], v2["id"])\n\n      // Output:\n      // 100 1\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapstrstr",children:(0,i.jsx)(e.code,{children:"MapStrStr"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapStrStr"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"map[string]string"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapStrStr(tags ...string) map[string]string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapStrStr\nfunc ExampleVar_MapStrStr() {\n      var (\n          m1 = g.Map{"id": 1, "price": 100}\n          v  = gvar.New(m1)\n          v2 = v.MapStrStr()\n      )\n\n      fmt.Println(v2["price"] + "$")\n\n      // Output:\n      // 100$\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapstrvar",children:(0,i.jsx)(e.code,{children:"MapStrVar"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapStrVar"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"map[string]*Var"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapStrVar(tags ...string) map[string]*Var\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapStrVar\nfunc ExampleVar_MapStrVar() {\n      var (\n          m1 = g.Map{"id": 1, "price": 100}\n          v  = gvar.New(m1)\n          v2 = v.MapStrVar()\n      )\n\n      fmt.Println(v2["price"].Float64() * 100)\n\n      // Output:\n      // 10000\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapdeep",children:(0,i.jsx)(e.code,{children:"MapDeep"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapDeep"})," recursively converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"map[string]interface{}"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapDeep(tags ...string) map[string]interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapDeep\nfunc ExampleVar_MapDeep() {\n      var (\n          m1 = g.Map{"id": 1, "price": 100}\n          m2 = g.Map{"product": m1}\n          v  = gvar.New(m2)\n          v2 = v.MapDeep()\n      )\n\n      fmt.Println(v2["product"])\n\n      // Output:\n      // map[id:1 price:100]\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapstrstrdeep",children:(0,i.jsx)(e.code,{children:"MapStrStrDeep"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapStrStrDeep"})," recursively converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"map[string]string"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapStrStrDeep(tags ...string) map[string]string\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapStrStrDeep\nfunc ExampleVar_MapStrStrDeep() {\n      var (\n          m1 = g.Map{"id": 1, "price": 100}\n          m2 = g.Map{"product": m1}\n          v  = gvar.New(m2)\n          v2 = v.MapStrStrDeep()\n      )\n\n      fmt.Println(v2["product"])\n\n      // Output:\n      // {"id":1,"price":100}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapstrvardeep",children:(0,i.jsx)(e.code,{children:"MapStrVarDeep"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapStrVarDeep"})," recursively converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"map[string]*Var"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapStrVarDeep(tags ...string) map[string]*Var\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapStrVarDeep\nfunc ExampleVar_MapStrVarDeep() {\n      var (\n          m1 = g.Map{"id": 1, "price": 100}\n          m2 = g.Map{"product": m1}\n          v  = gvar.New(m2)\n          v2 = v.MapStrVarDeep()\n      )\n\n      fmt.Println(v2["product"])\n\n      // Output:\n      // {"id":1,"price":100}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"maps",children:(0,i.jsx)(e.code,{children:"Maps"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Maps"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"map[string]interface{}"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Maps(tags ...string) []map[string]interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Maps\nfunc ExampleVar_Maps() {\n      var m = gvar.New(g.ListIntInt{g.MapIntInt{0: 100, 1: 200}, g.MapIntInt{0: 300, 1: 400}})\n      fmt.Printf("%#v", m.Maps())\n\n      // Output:\n      // []map[string]interface {}{map[string]interface {}{"0":100, "1":200}, map[string]interface {}{"0":300, "1":400}}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mapsdeep",children:(0,i.jsx)(e.code,{children:"MapsDeep"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapsDeep"})," recursively converts ",(0,i.jsx)(e.code,{children:"v"})," to ",(0,i.jsx)(e.code,{children:"[]map[string]interface{}"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapsDeep(tags ...string) []map[string]interface{}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapsDeep\nfunc ExampleVar_MapsDeep() {\n      var (\n          p1 = g.MapStrAny{"product": g.Map{"id": 1, "price": 100}}\n          p2 = g.MapStrAny{"product": g.Map{"id": 2, "price": 200}}\n          v  = gvar.New(g.ListStrAny{p1, p2})\n          v2 = v.MapsDeep()\n      )\n\n      fmt.Printf("%#v", v2)\n\n      // Output:\n      // []map[string]interface {}{map[string]interface {}{"product":map[string]interface {}{"id":1, "price":100}}, map[string]interface {}{"product":map[string]interface {}{"id":2, "price":200}}}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"maptomap",children:(0,i.jsx)(e.code,{children:"MapToMap"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapToMap"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to the ",(0,i.jsx)(e.code,{children:"map"})," type specified by ",(0,i.jsx)(e.code,{children:"pointer"}),", with ",(0,i.jsx)(e.code,{children:"mapping"})," as the specified mapping rules."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapToMap(pointer interface{}, mapping ...map[string]string) (err error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapToMap\nfunc ExampleVar_MapToMap() {\n      var (\n          m1 = gvar.New(g.MapIntInt{0: 100, 1: 200})\n          m2 = g.MapStrStr{}\n      )\n\n      err := m1.MapToMap(&m2)\n      if err != nil {\n          panic(err)\n      }\n\n      fmt.Printf("%#v", m2)\n\n      // Output:\n      // map[string]string{"0":"100", "1":"200"}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"maptomaps",children:(0,i.jsx)(e.code,{children:"MapToMaps"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapToMaps"})," converts ",(0,i.jsx)(e.code,{children:"v"})," to the ",(0,i.jsx)(e.code,{children:"map"})," type specified by ",(0,i.jsx)(e.code,{children:"pointer"}),", with ",(0,i.jsx)(e.code,{children:"mapping"})," as the specified mapping rules."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapToMaps(pointer interface{}, mapping ...map[string]string) (err error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapToMaps\nfunc ExampleVar_MapToMaps() {\n      var (\n          p1 = g.MapStrAny{"product": g.Map{"id": 1, "price": 100}}\n          p2 = g.MapStrAny{"product": g.Map{"id": 2, "price": 200}}\n          v  = gvar.New(g.ListStrAny{p1, p2})\n          v2 []g.MapStrStr\n      )\n\n      err := v.MapToMaps(&v2)\n      if err != nil {\n          panic(err)\n      }\n      fmt.Printf("%#v", v2)\n\n      // Output:\n      // []map[string]string{map[string]string{"product":"{\\"id\\":1,\\"price\\":100}"}, map[string]string{"product":"{\\"id\\":2,\\"price\\":200}"}}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"maptomapsdeep",children:(0,i.jsx)(e.code,{children:"MapToMapsDeep"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"MapToMapsDeep"})," recursively converts ",(0,i.jsx)(e.code,{children:"v"})," to the ",(0,i.jsx)(e.code,{children:"map"})," type specified by ",(0,i.jsx)(e.code,{children:"pointer"}),", with ",(0,i.jsx)(e.code,{children:"mapping"})," as the designated mapping rules."]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) MapToMapsDeep(pointer interface{}, mapping ...map[string]string) (err error)\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// MapToMapDeep\nfunc ExampleVar_MapToMapDeep() {\n      var (\n          p1 = gvar.New(g.MapStrAny{"product": g.Map{"id": 1, "price": 100}})\n          p2 = g.MapStrAny{}\n      )\n\n      err := p1.MapToMap(&p2)\n      if err != nil {\n          panic(err)\n      }\n      fmt.Printf("%#v", p2)\n\n      // Output:\n      // map[string]interface {}{"product":map[string]interface {}{"id":1, "price":100}}\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"scan",children:(0,i.jsx)(e.code,{children:"Scan"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Description: ",(0,i.jsx)(e.code,{children:"Scan"})," automatically checks the type of ",(0,i.jsx)(e.code,{children:"pointer"})," and converts ",(0,i.jsx)(e.code,{children:"params"})," to ",(0,i.jsx)(e.code,{children:"pointer"}),". Supported types for ",(0,i.jsx)(e.code,{children:"pointer"})," are: ",(0,i.jsx)(e.code,{children:"*map, *[]map, *[]*map, *struct, **struct, *[]struct, *[]*struct"})]}),"\n",(0,i.jsx)(e.li,{children:"Format:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:"func (v *Var) Scan(pointer interface{}, mapping ...map[string]string) error\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'// Scan\nfunc ExampleVar_Scan() {\n      type Student struct {\n          Id     *g.Var\n          Name   *g.Var\n          Scores *g.Var\n      }\n      var (\n          s Student\n          m = g.Map{\n              "Id":     1,\n              "Name":   "john",\n              "Scores": []int{100, 99, 98},\n          }\n      )\n      if err := gconv.Scan(m, &s); err != nil {\n          panic(err)\n      }\n\n      g.DumpWithType(s)\n\n      // Output:\n      // gvar_test.Student(3) {\n      //     Id:     *gvar.Var(1) "1",\n      //     Name:   *gvar.Var(4) "john",\n      //     Scores: *gvar.Var(11) "[100,99,98]",\n      // }\n}\n'})})]})}function h(n={}){let{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(o,{...n})}):o(n)}},250065:function(n,e,r){r.d(e,{Z:function(){return a},a:function(){return c}});var s=r(667294);let i={},l=s.createContext(i);function c(n){let e=s.useContext(l);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);