"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["39294"],{795077:function(e,t,n){n.r(t),n.d(t,{metadata:()=>i,contentTitle:()=>o,default:()=>d,assets:()=>l,toc:()=>c,frontMatter:()=>s});var i=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE/\u6A21\u677F\u5F15\u64CE-\u6A21\u677F\u53D8\u91CF","title":"Template Engine - Variables","description":"How to use custom objects as template variables in the template engine, and access object properties and call methods within the template. This is explained in detail through examples, illustrating how to implement template content parsing in the GoFrame framework, as well as the differences between using object pointers and object variables, and the rules for method calls, helping developers better master the templating technology in the GoFrame framework.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE/\u6A21\u677F\u5F15\u64CE-\u6A21\u677F\u53D8\u91CF.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE","slug":"/docs/core/gview-variable","permalink":"/en/docs/core/gview-variable","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE/\u6A21\u677F\u5F15\u64CE-\u6A21\u677F\u53D8\u91CF.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732541616000,"sidebarPosition":3,"frontMatter":{"slug":"/docs/core/gview-variable","title":"Template Engine - Variables","sidebar_position":3,"hide_title":true,"keywords":["Template Engine","Template Variables","Custom Objects","Object Properties","Object Methods","GoFrame","GoFrame Framework","Template Parsing","WebServer Built-in Variables","GoFrame Tutorial"],"description":"How to use custom objects as template variables in the template engine, and access object properties and call methods within the template. This is explained in detail through examples, illustrating how to implement template content parsing in the GoFrame framework, as well as the differences between using object pointers and object variables, and the rules for method calls, helping developers better master the templating technology in the GoFrame framework."},"sidebar":"mainSidebar","previous":{"title":"Template Engine - Tags","permalink":"/en/docs/core/gview-tags"},"next":{"title":"Template Engine - Layout","permalink":"/en/docs/core/gview-layout"}}'),a=n("785893"),r=n("250065");let s={slug:"/docs/core/gview-variable",title:"Template Engine - Variables",sidebar_position:3,hide_title:!0,keywords:["Template Engine","Template Variables","Custom Objects","Object Properties","Object Methods","GoFrame","GoFrame Framework","Template Parsing","WebServer Built-in Variables","GoFrame Tutorial"],description:"How to use custom objects as template variables in the template engine, and access object properties and call methods within the template. This is explained in detail through examples, illustrating how to implement template content parsing in the GoFrame framework, as well as the differences between using object pointers and object variables, and the rules for method calls, helping developers better master the templating technology in the GoFrame framework."},o=void 0,l={},c=[{value:"Built-in Variables",id:"built-in-variables",level:2},{value:"Variable Objects",id:"variable-objects",level:2}];function m(e){let t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"built-in-variables",children:"Built-in Variables"}),"\n",(0,a.jsxs)(t.p,{children:["Please refer to the ",(0,a.jsx)(t.a,{href:"/en/docs/web/response-template",children:"Response - Template Parsing"})," section for ",(0,a.jsx)(t.code,{children:"WebServer"})," built-in variables."]}),"\n",(0,a.jsx)(t.h2,{id:"variable-objects",children:"Variable Objects"}),"\n",(0,a.jsx)(t.p,{children:"We can use custom objects in templates and access the properties of objects and invoke their methods within the template."}),"\n",(0,a.jsx)(t.p,{children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\ntype T struct {\n    Name string\n}\n\nfunc (t *T) Hello(name string) string {\n    return "Hello " + name\n}\n\nfunc (t *T) Test() string {\n    return "This is test"\n}\n\nfunc main() {\n    t := &T{"John"}\n    v := g.View()\n    content := `{{.t.Hello "there"}}, my name\'s {{.t.Name}}. {{.t.Test}}.`\n    if r, err := v.ParseContent(context.TODO(), content, g.Map{"t": t}); err != nil {\n        g.Dump(err)\n    } else {\n        g.Dump(r)\n    }\n}\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Here, the variables assigned to the template can be either ",(0,a.jsx)(t.code,{children:"object pointers"})," or ",(0,a.jsx)(t.code,{children:"object variables"}),". However, note the defined object methods: if it is an object pointer, you can only call methods where the receiver is an object pointer; if it is an object variable, you can only call methods where the receiver is an object."]}),"\n",(0,a.jsx)(t.p,{children:"After execution, the output is:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"Hello there, my name's John. This is test.\n"})})]})}function d(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return s}});var i=n(667294);let a={},r=i.createContext(a);function s(e){let t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);