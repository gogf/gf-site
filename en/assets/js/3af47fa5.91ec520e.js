"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["22662"],{725309:function(e,n,a){a.r(n),a.d(n,{metadata:()=>t,contentTitle:()=>o,default:()=>d,assets:()=>l,toc:()=>c,frontMatter:()=>s});var t=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u5B57\u5178\u7C7B\u578B-gmap/\u5B57\u5178\u7C7B\u578B-\u57FA\u672C\u4F7F\u7528","title":"Map - Usage","description":"Basic usage of the gmap module under the GoFrame framework, including switching operations of concurrent security features, setting, querying, and deleting key-value pairs, as well as ordered traversal, serialization and deserialization of data structures, with detailed code examples and execution results.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u5B57\u5178\u7C7B\u578B-gmap/\u5B57\u5178\u7C7B\u578B-\u57FA\u672C\u4F7F\u7528.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u5B57\u5178\u7C7B\u578B-gmap","slug":"/docs/components/container-gmap-example","permalink":"/en/docs/components/container-gmap-example","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u5B57\u5178\u7C7B\u578B-gmap/\u5B57\u5178\u7C7B\u578B-\u57FA\u672C\u4F7F\u7528.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":0,"frontMatter":{"slug":"/docs/components/container-gmap-example","title":"Map - Usage","sidebar_position":0,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","gmap","Concurrent Safety","Data Structure","Key-Value Operations","Ordered Traversal","JSON Serialization","Dictionary Type","Switch Parameter"],"description":"Basic usage of the gmap module under the GoFrame framework, including switching operations of concurrent security features, setting, querying, and deleting key-value pairs, as well as ordered traversal, serialization and deserialization of data structures, with detailed code examples and execution results."},"sidebar":"mainSidebar","previous":{"title":"Map","permalink":"/en/docs/components/container-gmap"},"next":{"title":"Map - Performance","permalink":"/en/docs/components/container-gmap-benchmark"}}'),r=a("785893"),i=a("250065");let s={slug:"/docs/components/container-gmap-example",title:"Map - Usage",sidebar_position:0,hide_title:!0,keywords:["GoFrame","GoFrame Framework","gmap","Concurrent Safety","Data Structure","Key-Value Operations","Ordered Traversal","JSON Serialization","Dictionary Type","Switch Parameter"],description:"Basic usage of the gmap module under the GoFrame framework, including switching operations of concurrent security features, setting, querying, and deleting key-value pairs, as well as ordered traversal, serialization and deserialization of data structures, with detailed code examples and execution results."},o=void 0,l={},c=[{value:"Concurrent Safety",id:"concurrent-safety",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Ordered Traversal",id:"ordered-traversal",level:3},{value:"<code>FilterEmpty/FilterNil</code> Empty Value Filtering",id:"filteremptyfilternil-empty-value-filtering",level:3},{value:"<code>Flip</code> Key-Value Pair Reversal",id:"flip-key-value-pair-reversal",level:3},{value:"<code>Keys/Values</code> Key/Value Lists",id:"keysvalues-keyvalue-lists",level:3},{value:"<code>Pop/Pops</code> Random Pop",id:"poppops-random-pop",level:3},{value:"<code>SetIfNotExist*</code> Conditional Setting",id:"setifnotexist-conditional-setting",level:3},{value:"<code>Merge</code> Dictionary Merge",id:"merge-dictionary-merge",level:3},{value:"<code>JSON</code> Serialization/Deserialization",id:"json-serializationdeserialization",level:3}];function m(e){let n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"concurrent-safety",children:"Concurrent Safety"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"gmap"})," supports a concurrency-safe option switch, which is ",(0,r.jsx)(n.code,{children:"not concurrency-safe"})," by default. Developers can choose to enable the concurrency-safe feature of ",(0,r.jsx)(n.code,{children:"gmap"})," (passing the initialization switch parameter ",(0,r.jsx)(n.code,{children:"safe"})," value as ",(0,r.jsx)(n.code,{children:"true"}),", it must be set during initialization and cannot be dynamically set at runtime). For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"m := gmap.New(true)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Not only the ",(0,r.jsx)(n.code,{children:"gmap"})," module, but other concurrent-safe data structures of the ",(0,r.jsx)(n.code,{children:"goframe"})," framework also support the concurrent safety feature switch."]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n)\n\nfunc main() {\n    // Create a default gmap object,\n    // By default, this gmap object does not support concurrency safety features,\n    // A true parameter can be given during initialization to enable concurrent safety features.\n    m := gmap.New()\n\n    // Set key-value pairs\n    for i := 0; i < 10; i++ {\n        m.Set(i, i)\n    }\n    // Query size\n    fmt.Println(m.Size())\n    // Batch set key-value pairs (different data type objects have different parameters)\n    m.Sets(map[interface{}]interface{}{\n        10: 10,\n        11: 11,\n    })\n    fmt.Println(m.Size())\n\n    // Check if it exists\n    fmt.Println(m.Contains(1))\n\n    // Query value\n    fmt.Println(m.Get(1))\n\n    // Delete item\n    m.Remove(9)\n    fmt.Println(m.Size())\n\n    // Batch delete\n    m.Removes([]interface{}{10, 11})\n    fmt.Println(m.Size())\n\n    // Current key list (random order)\n    fmt.Println(m.Keys())\n    // Current value list (random order)\n    fmt.Println(m.Values())\n\n    // Query key name, and write the given default value when the key value does not exist\n    fmt.Println(m.GetOrSet(100, 100))\n\n    // Delete key-value pair, returning the corresponding key value\n    fmt.Println(m.Remove(100))\n\n    // Traverse map\n    m.Iterator(func(k interface{}, v interface{}) bool {\n        fmt.Printf("%v:%v ", k, v)\n        return true\n    })\n\n    // Custom write lock operation\n    m.LockFunc(func(m map[interface{}]interface{}) {\n        m[99] = 99\n    })\n\n    // Custom read lock operation\n    m.RLockFunc(func(m map[interface{}]interface{}) {\n        fmt.Println(m[99])\n    })\n\n    // Clear map\n    m.Clear()\n\n    // Check if the map is empty\n    fmt.Println(m.IsEmpty())\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-10",children:"12\ntrue\n1\n11\n9\n[0 1 2 4 6 7 3 5 8]\n[3 5 8 0 1 2 4 6 7]\n100\n100\n3:3 5:5 8:8 7:7 0:0 1:1 2:2 4:4 6:6 99\ntrue\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ordered-traversal",children:"Ordered Traversal"}),"\n",(0,r.jsxs)(n.p,{children:["Let's take a look at examples of ordered traversal for three different types of ",(0,r.jsx)(n.code,{children:"map"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/container/gmap"\n    "github.com/gogf/gf/v2/util/gutil"\n)\n\nfunc main() {\n    array   := g.Slice{2, 3, 1, 5, 4, 6, 8, 7, 9}\n    hashMap := gmap.New(true)\n    listMap := gmap.NewListMap(true)\n    treeMap := gmap.NewTreeMap(gutil.ComparatorInt, true)\n    for _, v := range array {\n        hashMap.Set(v, v)\n    }\n    for _, v := range array {\n        listMap.Set(v, v)\n    }\n    for _, v := range array {\n        treeMap.Set(v, v)\n    }\n    fmt.Println("HashMap   Keys:", hashMap.Keys())\n    fmt.Println("HashMap Values:", hashMap.Values())\n    fmt.Println("ListMap   Keys:", listMap.Keys())\n    fmt.Println("ListMap Values:", listMap.Values())\n    fmt.Println("TreeMap   Keys:", treeMap.Keys())\n    fmt.Println("TreeMap Values:", treeMap.Values())\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"HashMap   Keys: [4 6 8 7 9 2 3 1 5]\nHashMap Values: [6 8 4 3 1 5 7 9 2]\nListMap   Keys: [2 3 1 5 4 6 8 7 9]\nListMap Values: [2 3 1 5 4 6 8 7 9]\nTreeMap   Keys: [1 2 3 4 5 6 7 8 9]\nTreeMap Values: [1 2 3 4 5 6 7 8 9]\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"filteremptyfilternil-empty-value-filtering",children:[(0,r.jsx)(n.code,{children:"FilterEmpty/FilterNil"})," Empty Value Filtering"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    m1 := gmap.NewFrom(g.MapAnyAny{\n        "k1": "",\n        "k2": nil,\n        "k3": 0,\n        "k4": 1,\n    })\n    m2 := gmap.NewFrom(g.MapAnyAny{\n        "k1": "",\n        "k2": nil,\n        "k3": 0,\n        "k4": 1,\n    })\n    m1.FilterEmpty()\n    m2.FilterNil()\n    fmt.Println(m1.Map())\n    fmt.Println(m2.Map())\n\n    // Output:\n    // map[k4:1]\n    // map[k1: k3:0 k4:1]\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"flip-key-value-pair-reversal",children:[(0,r.jsx)(n.code,{children:"Flip"})," Key-Value Pair Reversal"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    var m gmap.Map\n    m.Sets(g.MapAnyAny{\n        "k1": "v1",\n        "k2": "v2",\n    })\n    m.Flip()\n    fmt.Println(m.Map())\n\n    // May Output:\n    // map[v1:k1 v2:k2]\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"keysvalues-keyvalue-lists",children:[(0,r.jsx)(n.code,{children:"Keys/Values"})," Key/Value Lists"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    var m gmap.Map\n    m.Sets(g.MapAnyAny{\n        "k1": "v1",\n        "k2": "v2",\n        "k3": "v3",\n        "k4": "v4",\n    })\n    fmt.Println(m.Keys())\n    fmt.Println(m.Values())\n\n    // May Output:\n    // [k1 k2 k3 k4]\n    // [v2 v3 v4 v1]\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"poppops-random-pop",children:[(0,r.jsx)(n.code,{children:"Pop/Pops"})," Random Pop"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n    "github.com/gogf/gf/v2/frame/g"\n)\n\nfunc main() {\n    var m gmap.Map\n    m.Sets(g.MapAnyAny{\n        "k1": "v1",\n        "k2": "v2",\n        "k3": "v3",\n        "k4": "v4",\n    })\n    fmt.Println(m.Pop())\n    fmt.Println(m.Pops(2))\n    fmt.Println(m.Size())\n\n    // May Output:\n    // k1 v1\n    // map[k2:v2 k4:v4]\n    // 1\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"setifnotexist-conditional-setting",children:[(0,r.jsx)(n.code,{children:"SetIfNotExist*"})," Conditional Setting"]}),"\n",(0,r.jsxs)(n.p,{children:["Conditional setting means writing to the map only when the specified key does not exist, and the method returns ",(0,r.jsx)(n.code,{children:"true"}),"; otherwise, it ignores the write and the method returns ",(0,r.jsx)(n.code,{children:"false"}),". Relevant methods include:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"SetIfNotExist"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"SetIfNotExistFunc"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"SetIfNotExistFuncLock"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For detailed descriptions, please refer to the interface documentation or source code comments."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n)\n\nfunc main() {\n    var m gmap.Map\n    fmt.Println(m.SetIfNotExist("k1", "v1"))\n    fmt.Println(m.SetIfNotExist("k1", "v1"))\n    fmt.Println(m.Map())\n\n    // Output:\n    // true\n    // false\n    // map[k1:v1]\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"merge-dictionary-merge",children:[(0,r.jsx)(n.code,{children:"Merge"})," Dictionary Merge"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n)\n\nfunc main() {\n    var m1, m2 gmap.Map\n    m1.Set("key1", "val1")\n    m2.Set("key2", "val2")\n    m1.Merge(&m2)\n    fmt.Println(m1.Map())\n\n    // May Output:\n    // map[key1:val1 key2:val2]\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"json-serializationdeserialization",children:[(0,r.jsx)(n.code,{children:"JSON"})," Serialization/Deserialization"]}),"\n",(0,r.jsxs)(n.p,{children:["All container types under the ",(0,r.jsx)(n.code,{children:"gmap"})," module implement the standard library ",(0,r.jsx)(n.code,{children:"json"})," data format serialization/deserialization interfaces."]}),"\n",(0,r.jsxs)(n.p,{children:["1. ",(0,r.jsx)(n.code,{children:"Marshal"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "encoding/json"\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n\n    "github.com/gogf/gf/v2/container/gmap"\n)\n\nfunc main() {\n    m := gmap.New()\n    m.Sets(g.MapAnyAny{\n        "name":  "john",\n        "score": 100,\n    })\n    b, _ := json.Marshal(m)\n    fmt.Println(string(b))\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"name":"john","score":100}\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Unmarshal"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "encoding/json"\n    "fmt"\n    "github.com/gogf/gf/v2/container/gmap"\n)\n\nfunc main() {\n    m := gmap.Map{}\n    s := []byte(`{"name":"john","score":100}`)\n    json.Unmarshal(s, &m)\n    fmt.Println(m.Map())\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"map[name:john score:100]\n"})})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},250065:function(e,n,a){a.d(n,{Z:function(){return o},a:function(){return s}});var t=a(667294);let r={},i=t.createContext(r);function s(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);