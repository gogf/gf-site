"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["46166"],{388285:function(e,r,o){o.r(r),o.d(r,{metadata:()=>n,contentTitle:()=>i,default:()=>m,assets:()=>c,toc:()=>p,frontMatter:()=>s});var n=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u9519\u8BEF\u5904\u7406/\u9519\u8BEF\u5904\u7406-\u6027\u80FD\u6D4B\u8BD5","title":"Error Handling - Performance","description":"Covers benchmark performance testing for error handling using the GoFrame framework, providing performance comparison results of commonly used methods. These performance tests allow developers to better understand and optimize error handling efficiency in Go programming, thereby enhancing the overall performance of applications. Data is sourced from the open-source GoFrame project on GitHub, listing detailed performance results of different error handling methods under various configurations for developers\' reference.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u9519\u8BEF\u5904\u7406/\u9519\u8BEF\u5904\u7406-\u6027\u80FD\u6D4B\u8BD5.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u9519\u8BEF\u5904\u7406","slug":"/docs/core/gerror-benchmark","permalink":"/en/docs/core/gerror-benchmark","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u9519\u8BEF\u5904\u7406/\u9519\u8BEF\u5904\u7406-\u6027\u80FD\u6D4B\u8BD5.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732440306000,"sidebarPosition":6,"frontMatter":{"slug":"/docs/core/gerror-benchmark","title":"Error Handling - Performance","sidebar_position":6,"hide_title":true,"keywords":["GoFrame","GoFrame framework","error handling","performance testing","benchmark testing","performance optimization","Go language","programming framework","code efficiency","Go development"],"description":"Covers benchmark performance testing for error handling using the GoFrame framework, providing performance comparison results of commonly used methods. These performance tests allow developers to better understand and optimize error handling efficiency in Go programming, thereby enhancing the overall performance of applications. Data is sourced from the open-source GoFrame project on GitHub, listing detailed performance results of different error handling methods under various configurations for developers\' reference."},"sidebar":"mainSidebar","previous":{"title":"Error Handling - Best Practices","permalink":"/en/docs/core/gerror-practice"},"next":{"title":"Error Handling - Error Code","permalink":"/en/docs/core/gerror-code"}}'),t=o("785893"),a=o("250065");let s={slug:"/docs/core/gerror-benchmark",title:"Error Handling - Performance",sidebar_position:6,hide_title:!0,keywords:["GoFrame","GoFrame framework","error handling","performance testing","benchmark testing","performance optimization","Go language","programming framework","code efficiency","Go development"],description:"Covers benchmark performance testing for error handling using the GoFrame framework, providing performance comparison results of commonly used methods. These performance tests allow developers to better understand and optimize error handling efficiency in Go programming, thereby enhancing the overall performance of applications. Data is sourced from the open-source GoFrame project on GitHub, listing detailed performance results of different error handling methods under various configurations for developers' reference."},i=void 0,c={},p=[];function l(e){let r={a:"a",code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:["Benchmark performance tests of commonly used methods: ",(0,t.jsx)(r.a,{href:"https://github.com/gogf/gf/blob/master/errors/gerror/gerror_z_bench_test.go",children:"https://github.com/gogf/gf/blob/master/errors/gerror/gerror_z_bench_test.go"})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'$ go test *.go -bench=".*" -benchmem\ngoos: linux\ngoarch: amd64\nBenchmark_New-4                  1890454               589 ns/op             256 B/op          1 allocs/op\nBenchmark_Newf-4                 1569258               762 ns/op             324 B/op          3 allocs/op\nBenchmark_Wrap-4                 2012910               600 ns/op             256 B/op          1 allocs/op\nBenchmark_Wrapf-4                1600197               749 ns/op             324 B/op          3 allocs/op\nBenchmark_NewSkip-4              2009928               579 ns/op             256 B/op          1 allocs/op\nBenchmark_NewSkipf-4             1578370               752 ns/op             324 B/op          3 allocs/op\nBenchmark_NewCode-4              2060835               591 ns/op             256 B/op          1 allocs/op\nBenchmark_NewCodef-4             1603306               752 ns/op             324 B/op          3 allocs/op\nBenchmark_NewCodeSkip-4          2047794               584 ns/op             256 B/op          1 allocs/op\nBenchmark_NewCodeSkipf-4         1524495               779 ns/op             324 B/op          3 allocs/op\nBenchmark_WrapCode-4             1972147               603 ns/op             256 B/op          1 allocs/op\nBenchmark_WrapCodef-4            1651316               735 ns/op             324 B/op          3 allocs/op\n'})})]})}function m(e={}){let{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},250065:function(e,r,o){o.d(r,{Z:function(){return i},a:function(){return s}});var n=o(667294);let t={},a=n.createContext(t);function s(e){let r=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);