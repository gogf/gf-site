"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["80493"],{202741:function(e,n,a){a.r(n),a.d(n,{metadata:()=>i,contentTitle:()=>s,default:()=>m,assets:()=>c,toc:()=>l,frontMatter:()=>o});var i=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar/\u6CDB\u578B\u7C7B\u578B-\u57FA\u672C\u4F7F\u7528","title":"Generic - Usage","description":"When using the GoFrame framework, utilize the gvar.Var container for the basic usage of generic types, including basic type conversion and slice conversion. It also demonstrates how to perform JSON format data serialization and deserialization operations. With the interfaces provided by the GoFrame framework, users can easily manipulate complex data structures to achieve efficient data processing.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar/\u6CDB\u578B\u7C7B\u578B-\u57FA\u672C\u4F7F\u7528.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar","slug":"/docs/components/container-gvar-example","permalink":"/en/docs/components/container-gvar-example","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u6570\u636E\u7ED3\u6784/\u6CDB\u578B\u7C7B\u578B-gvar/\u6CDB\u578B\u7C7B\u578B-\u57FA\u672C\u4F7F\u7528.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":0,"frontMatter":{"slug":"/docs/components/container-gvar-example","title":"Generic - Usage","sidebar_position":0,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","Generic Type","JSON Serialization","JSON Deserialization","Basic Type Conversion","slice Conversion","gvar.Var","Marshal","Unmarshal"],"description":"When using the GoFrame framework, utilize the gvar.Var container for the basic usage of generic types, including basic type conversion and slice conversion. It also demonstrates how to perform JSON format data serialization and deserialization operations. With the interfaces provided by the GoFrame framework, users can easily manipulate complex data structures to achieve efficient data processing."},"sidebar":"mainSidebar","previous":{"title":"Generic","permalink":"/en/docs/components/container-gvar"},"next":{"title":"Generic - Methods","permalink":"/en/docs/components/container-gvar-funcs"}}'),t=a("785893"),r=a("250065");let o={slug:"/docs/components/container-gvar-example",title:"Generic - Usage",sidebar_position:0,hide_title:!0,keywords:["GoFrame","GoFrame Framework","Generic Type","JSON Serialization","JSON Deserialization","Basic Type Conversion","slice Conversion","gvar.Var","Marshal","Unmarshal"],description:"When using the GoFrame framework, utilize the gvar.Var container for the basic usage of generic types, including basic type conversion and slice conversion. It also demonstrates how to perform JSON format data serialization and deserialization operations. With the interfaces provided by the GoFrame framework, users can easily manipulate complex data structures to achieve efficient data processing."},s=void 0,c={},l=[{value:"Basic Usage",id:"basic-usage",level:3},{value:"<code>JSON</code> Serialization/Deserialization",id:"json-serializationdeserialization",level:3}];function d(e){let n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "fmt"\n)\n\nfunc main() {\n    var v g.Var\n\n    v.Set("123")\n\n    fmt.Println(v.Val())\n\n    // Basic type conversion\n    fmt.Println(v.Int())\n    fmt.Println(v.Uint())\n    fmt.Println(v.Float64())\n\n    // Slice conversion\n    fmt.Println(v.Ints())\n    fmt.Println(v.Floats())\n    fmt.Println(v.Strings())\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"123\n123\n123\n123\n[123]\n[123]\n[123]\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"json-serializationdeserialization",children:[(0,t.jsx)(n.code,{children:"JSON"})," Serialization/Deserialization"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"gvar.Var"})," container implements the serialization/deserialization interface of the standard library ",(0,t.jsx)(n.code,{children:"json"})," data format."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Marshal"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'    package main\n\n    import (\n        "encoding/json"\n        "fmt"\n        "github.com/gogf/gf/v2/frame/g"\n    )\n\n    func main() {\n        type Student struct {\n            Id     *g.Var\n            Name   *g.Var\n            Scores *g.Var\n        }\n        s := Student{\n            Id:     g.NewVar(1),\n            Name:   g.NewVar("john"),\n            Scores: g.NewVar([]int{100, 99, 98}),\n        }\n        b, _ := json.Marshal(s)\n        fmt.Println(string(b))\n    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'    {"Id":1,"Name":"john","Scores":[100,99,98]}\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Unmarshal"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'    package main\n\n    import (\n        "encoding/json"\n        "fmt"\n        "github.com/gogf/gf/v2/frame/g"\n    )\n\n    func main() {\n        b := []byte(`{"Id":1,"Name":"john","Scores":[100,99,98]}`)\n        type Student struct {\n            Id     *g.Var\n            Name   *g.Var\n            Scores *g.Var\n        }\n        s := Student{}\n        json.Unmarshal(b, &s)\n        fmt.Println(s)\n    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    {1 john [100,99,98]}\n"})})]})}function m(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},250065:function(e,n,a){a.d(n,{Z:function(){return s},a:function(){return o}});var i=a(667294);let t={},r=i.createContext(t);function o(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);