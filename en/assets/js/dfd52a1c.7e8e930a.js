"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["93773"],{814159:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>o,default:()=>h,assets:()=>c,toc:()=>d,frontMatter:()=>s});var t=JSON.parse('{"id":"course/starbook/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u6CE8\u518C/2.1.\u524D\u7F6E\u8BF4\u660E","title":"2.1 Preface","description":"The development of the user registration feature for the Star English Book project, which details the code layering design and ORM feature application of the GoFrame framework, provides installation and usage instructions for the MySQL driver, explains the process of database interaction through simple examples, enhances code readability and maintainability, and explains the actual connection process with the MySQL database to prevent SQL injection risks.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/course/starbook/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u6CE8\u518C/2.1.\u524D\u7F6E\u8BF4\u660E.md","sourceDirName":"course/starbook/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u6CE8\u518C","slug":"/course/starbook/register-overview","permalink":"/en/course/starbook/register-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/course/starbook/\u7B2C\u4E8C\u7AE0-\u7528\u6237\u6CE8\u518C/2.1.\u524D\u7F6E\u8BF4\u660E.md","tags":[],"version":"current","lastUpdatedBy":"oldme","lastUpdatedAt":1734407125000,"frontMatter":{"title":"2.1 Preface","hide_title":true,"slug":"/course/starbook/register-overview","keywords":["Star English Book","user registration","GoFrame","code layering","MVC concept","ORM","database driver","MySQL driver","Go language","software development"],"description":"The development of the user registration feature for the Star English Book project, which details the code layering design and ORM feature application of the GoFrame framework, provides installation and usage instructions for the MySQL driver, explains the process of database interaction through simple examples, enhances code readability and maintainability, and explains the actual connection process with the MySQL database to prevent SQL injection risks."},"sidebar":"courseStarBookSidebar","previous":{"title":"Chapter 2 - User Registration","permalink":"/en/course/starbook/register"},"next":{"title":"2.2 Data Model","permalink":"/en/course/starbook/register-model"}}'),i=r("785893"),a=r("250065");let s={title:"2.1 Preface",hide_title:!0,slug:"/course/starbook/register-overview",keywords:["Star English Book","user registration","GoFrame","code layering","MVC concept","ORM","database driver","MySQL driver","Go language","software development"],description:"The development of the user registration feature for the Star English Book project, which details the code layering design and ORM feature application of the GoFrame framework, provides installation and usage instructions for the MySQL driver, explains the process of database interaction through simple examples, enhances code readability and maintainability, and explains the actual connection process with the MySQL database to prevent SQL injection risks."},o=void 0,c={},d=[{value:"Code Layering",id:"code-layering",level:2},{value:"ORM",id:"orm",level:2},{value:"Database Driver",id:"database-driver",level:2},{value:"Installing Drivers",id:"installing-drivers",level:3},{value:"Importing Drivers",id:"importing-drivers",level:3},{value:"Checking the Driver",id:"checking-the-driver",level:3}];function l(e){let n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This chapter will formally develop the ",(0,i.jsx)(n.strong,{children:"Star English Book"})," project, where we will develop the first interface: user registration, to provide user registration functionality."]}),"\n",(0,i.jsx)(n.h2,{id:"code-layering",children:"Code Layering"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"GoFrame"}),' framework has an excellent code layering design, with a clear and well-structured software architecture. During development, you can follow the "three-step" rule: first, define interface information at the ',(0,i.jsx)(n.code,{children:"Api"})," layer, then the ",(0,i.jsx)(n.code,{children:"Controller"})," layer receives HTTP interface requests, and finally, the ",(0,i.jsx)(n.code,{children:"Logic"})," layer completes the specific logic and database interaction. This is actually a variant of the ",(0,i.jsx)(n.code,{children:"MVC"})," concept."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Flow",src:r(669025).Z+"",width:"437",height:"708"})}),"\n",(0,i.jsx)(n.h2,{id:"orm",children:"ORM"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ORM"})," stands for ",(0,i.jsx)(n.code,{children:"Object-Relational Mapping"}),", and its core function is to map data tables to objects, typically structs in the Go language."]}),"\n",(0,i.jsxs)(n.p,{children:["After mapping, we can handle data tables by manipulating objects, avoiding the need to write ",(0,i.jsx)(n.code,{children:"SQL"})," statements directly. This not only improves code readability and maintainability but also prevents common ",(0,i.jsx)(n.code,{children:"SQL"})," injection issues from a security standpoint."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"GoFrame"})," provides built-in ",(0,i.jsx)(n.code,{children:"ORM"})," functionality through the ",(0,i.jsx)(n.a,{href:"/en/docs/core/gdb",children:"gdb"})," component, offering convenient and common ",(0,i.jsx)(n.code,{children:"SQL"})," operations."]}),"\n",(0,i.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'ctx := gctx.New()\nUsers.Ctx(ctx).Where("username", "admin").One()\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This is a simple query operation, and ",(0,i.jsx)(n.code,{children:"ORM"})," will automatically generate ",(0,i.jsx)(n.code,{children:"SQL"})," statements based on it."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM users WHERE username = 'admin';\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ORM"})," only provides the data table mapping function, and actual interaction with the database still requires using a database driver."]}),"\n",(0,i.jsx)(n.h2,{id:"database-driver",children:"Database Driver"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"GoFrame"})," is a component-based framework, and for better extensibility, the database driver has been decoupled, allowing users to choose different database drivers according to their needs to support different databases."]}),"\n",(0,i.jsx)(n.h3,{id:"installing-drivers",children:"Installing Drivers"}),"\n",(0,i.jsxs)(n.p,{children:["Install the ",(0,i.jsx)(n.code,{children:"MySQL"})," driver:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ go get -u github.com/gogf/gf/contrib/drivers/mysql/v2\n"})}),"\n",(0,i.jsx)(n.p,{children:"Other database drivers:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"go get -u github.com/gogf/gf/contrib/drivers/clickhouse/v2\ngo get -u github.com/gogf/gf/contrib/drivers/dm/v2\ngo get -u github.com/gogf/gf/contrib/drivers/mssql/v2\ngo get -u github.com/gogf/gf/contrib/drivers/oracle/v2\ngo get -u github.com/gogf/gf/contrib/drivers/pgsql/v2\ngo get -u github.com/gogf/gf/contrib/drivers/sqlite/v2\ngo get -u github.com/gogf/gf/contrib/drivers/sqlitecgo/v2\n"})}),"\n",(0,i.jsx)(n.h3,{id:"importing-drivers",children:"Importing Drivers"}),"\n",(0,i.jsx)(n.p,{children:"Globally import the driver:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"main.go"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    _ "github.com/gogf/gf/contrib/drivers/mysql/v2"\n    ...\n)\n\nfunc main() {\n    cmd.Main.Run(gctx.GetInitCtx())\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"checking-the-driver",children:"Checking the Driver"}),"\n",(0,i.jsx)(n.p,{children:"After completing the above, we need to check if the database driver is successfully installed. Add the database configuration in the configuration file, and if there is any content, clear all of it to maintain consistency with the following:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"manifest/config/config.yaml"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'server:\n    address: ":8000"         # Server listening port\n    openapiPath: "/api.json" # OpenAPI interface document address\n    swaggerPath: "/swagger"  # Built-in SwaggerUI display address\n\ndatabase:\n  default:\n    link:   "mysql:root:12345678@tcp(127.0.0.1:3306)/star?loc=Local"\n    debug:  true\n'})}),"\n",(0,i.jsx)(n.p,{children:"Modify the main function to check if the database is connected properly before the program runs."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"main.go"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\n\xb7\xb7\xb7\n\nfunc main() {\n    var err error\n\n    // Check if the database is connected\n    err = connDb()\n    if err != nil {\n        panic(err)\n    }\n\n    cmd.Main.Run(gctx.GetInitCtx())\n}\n\n// connDb checks if the database connection is normal\nfunc connDb() error {\n    err := g.DB().PingMaster()\n    if err != nil {\n        return errors.New("Failed to connect to the database")\n    }\n    return nil\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Run the project, if no error is reported, the database driver is successfully installed."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-base",children:"$ gf run main.go\nbuild: .\\main.go\ngo build -o .\\main.exe  .\\main.go\n.\\main.exe \nbuild running pid: 24612\n2024-11-07 16:42:51.197 [INFO] {f89117371ba305188476a74abc958a23} swagger ui is serving at address: http://127.0.0.1:8000/swagger/\n2024-11-07 16:42:51.197 [INFO] pid[24612]: http server started listening on [:8000]\n2024-11-07 16:42:51.197 [INFO] {f89117371ba305188476a74abc958a23} openapi specification is serving at address: http://127.0.0.1:8000/api.json\n\n  ADDRESS | METHOD |   ROUTE    |                        HANDLER                        |    MIDDLEWARE\n----------|--------|------------|-------------------------------------------------------|--------------------\n  :8000   | ALL    | /api.json  | github.com/gogf/gf/v2/net/ghttp.(*Server).openapiSpec |\n----------|--------|------------|-------------------------------------------------------|--------------------\n  :8000   | ALL    | /swagger/* | github.com/gogf/gf/v2/net/ghttp.(*Server).swaggerUI   | HOOK_BEFORE_SERVE\n----------|--------|------------|-------------------------------------------------------|--------------------\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"gf run main.go"})," is a command provided by ",(0,i.jsx)(n.code,{children:"GF CLI"})," to run the program. When a developer modifies a ",(0,i.jsx)(n.code,{children:"go"})," file in the project, the command stops the original program, automatically compiles, and runs the current program. It can be used as a replacement for ",(0,i.jsx)(n.code,{children:"go run main.go"}),"."]})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},669025:function(e,n,r){r.d(n,{Z:function(){return t}});let t=r.p+"assets/images/\u6D41\u7A0B-5f11def3786f29636eb20bd7b940db13.png"},250065:function(e,n,r){r.d(n,{Z:function(){return o},a:function(){return s}});var t=r(667294);let i={},a=t.createContext(i);function s(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);