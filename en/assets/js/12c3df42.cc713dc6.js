"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["90530"],{218105:function(e,t,n){n.r(t),n.d(t,{metadata:()=>o,contentTitle:()=>a,default:()=>l,assets:()=>c,toc:()=>d,frontMatter:()=>i});var o=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-Struct\u8F6C\u6362","title":"General Codec - Struct","description":"Using the Struct method in the GoFrame framework to convert JSON data into a specified data format or object. The example demonstrates how to parse JSON data and use the gjson library to scan it as a custom user struct. This type of data format conversion is very useful when dealing with complex data structures, especially in Go programming.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-Struct\u8F6C\u6362.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson","slug":"/docs/components/encoding-gjson-struct-converting","permalink":"/en/docs/components/encoding-gjson-struct-converting","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7F16\u7801\u89E3\u7801/\u901A\u7528\u7F16\u89E3\u7801-gjson/\u901A\u7528\u7F16\u89E3\u7801-Struct\u8F6C\u6362.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":2,"frontMatter":{"slug":"/docs/components/encoding-gjson-struct-converting","title":"General Codec - Struct","sidebar_position":2,"hide_title":true,"keywords":["GoFrame Framework","Struct Conversion","JSON Parsing","Data Format Conversion","Object Conversion","gjson Library","Encoding","Go Language","Data Scanning","User Struct"],"description":"Using the Struct method in the GoFrame framework to convert JSON data into a specified data format or object. The example demonstrates how to parse JSON data and use the gjson library to scan it as a custom user struct. This type of data format conversion is very useful when dealing with complex data structures, especially in Go programming."},"sidebar":"mainSidebar","previous":{"title":"General Codec - Nested Visiting","permalink":"/en/docs/components/encoding-gjson-nested-visiting"},"next":{"title":"General Codec - Dynamic Creation and Modification","permalink":"/en/docs/components/encoding-gjson-dynamic-creating-and-editing"}}'),r=n("785893"),s=n("250065");let i={slug:"/docs/components/encoding-gjson-struct-converting",title:"General Codec - Struct",sidebar_position:2,hide_title:!0,keywords:["GoFrame Framework","Struct Conversion","JSON Parsing","Data Format Conversion","Object Conversion","gjson Library","Encoding","Go Language","Data Scanning","User Struct"],description:"Using the Struct method in the GoFrame framework to convert JSON data into a specified data format or object. The example demonstrates how to parse JSON data and use the gjson library to scan it as a custom user struct. This type of data format conversion is very useful when dealing with complex data structures, especially in Go programming."},a=void 0,c={},d=[{value:"<code>Struct</code> Conversion",id:"struct-conversion",level:2}];function u(e){let t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h2,{id:"struct-conversion",children:[(0,r.jsx)(t.code,{children:"Struct"})," Conversion"]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"Struct"})," method is used to convert the entire data content contained in ",(0,r.jsx)(t.code,{children:"Json"})," into a specified data format or object."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'data :=\n    `\n{\n    "count" : 1,\n    "array" : ["John", "Ming"]\n}`\nif j, err := gjson.DecodeToJson(data); err != nil {\n    panic(err)\n} else {\n    type Users struct {\n        Count int\n        Array []string\n    }\n    users := new(Users)\n    if err := j.Scan(users); err != nil {\n        panic(err)\n    }\n    fmt.Printf(`%+v`, users)\n}\n\n// Output:\n// &{Count:1 Array:[John Ming]}\n'})})]})}function l(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return a},a:function(){return i}});var o=n(667294);let r={},s=o.createContext(r);function i(e){let t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);