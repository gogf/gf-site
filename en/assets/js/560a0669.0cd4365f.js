"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["31108"],{30481:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>p,assets:()=>l,toc:()=>c,frontMatter:()=>s});var r=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE/\u6A21\u677F\u5F15\u64CE-\u5176\u4ED6\u4F7F\u7528","title":"Template Engine - Others","description":"Using different features of the template engine in the GoFrame framework, including support for I18N features and implementation in Http objects and controllers. Through example code, we demonstrate template parsing syntax and data isolation management in multi-threaded environments. Also includes usage notes on non-recommended controller registration methods.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE/\u6A21\u677F\u5F15\u64CE-\u5176\u4ED6\u4F7F\u7528.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE","slug":"/docs/core/gview-more","permalink":"/en/docs/core/gview-more","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u6A21\u677F\u5F15\u64CE/\u6A21\u677F\u5F15\u64CE-\u5176\u4ED6\u4F7F\u7528.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732440306000,"sidebarPosition":6,"frontMatter":{"slug":"/docs/core/gview-more","title":"Template Engine - Others","sidebar_position":6,"hide_title":true,"keywords":["GoFrame","GoFrame Framework","Template Engine","I18N Support","HTTP Object View","Controller View Management","GoFrame Framework","gview","Template Parsing","WebServer"],"description":"Using different features of the template engine in the GoFrame framework, including support for I18N features and implementation in Http objects and controllers. Through example code, we demonstrate template parsing syntax and data isolation management in multi-threaded environments. Also includes usage notes on non-recommended controller registration methods."},"sidebar":"mainSidebar","previous":{"title":"Template Engine - XSS","permalink":"/en/docs/core/gview-xss"},"next":{"title":"Template Engine - Funcs","permalink":"/en/docs/core/gview-funcs"}}'),i=t("785893"),o=t("250065");let s={slug:"/docs/core/gview-more",title:"Template Engine - Others",sidebar_position:6,hide_title:!0,keywords:["GoFrame","GoFrame Framework","Template Engine","I18N Support","HTTP Object View","Controller View Management","GoFrame Framework","gview","Template Parsing","WebServer"],description:"Using different features of the template engine in the GoFrame framework, including support for I18N features and implementation in Http objects and controllers. Through example code, we demonstrate template parsing syntax and data isolation management in multi-threaded environments. Also includes usage notes on non-recommended controller registration methods."},a=void 0,l={},c=[{value:"<code>I18N</code> Support",id:"i18n-support",level:2},{value:"HTTP Object View",id:"http-object-view",level:2},{value:"Controller View Management",id:"controller-view-management",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"i18n-support",children:[(0,i.jsx)(n.code,{children:"I18N"})," Support"]}),"\n",(0,i.jsxs)(n.p,{children:["The template engine supports ",(0,i.jsx)(n.code,{children:"i18n"})," features, allowing you to inject specific ",(0,i.jsx)(n.code,{children:"i18n"})," languages into the context to render different requests/pages in different ",(0,i.jsx)(n.code,{children:"i18n"})," languages. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n    "fmt"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/i18n/gi18n"\n)\n\nfunc main() {\n    var (\n        ctxCN   = gi18n.WithLanguage(context.TODO(), "zh-CN")\n        ctxJa   = gi18n.WithLanguage(context.TODO(), "ja")\n        content = `{{.name}} says "{#hello}{#world}!"`\n    )\n\n    result1, _ := g.View().ParseContent(ctxCN, content, g.Map{\n        "name": "john",\n    })\n    fmt.Println(result1)\n\n    result2, _ := g.View().ParseContent(ctxJa, content, g.Map{\n        "name": "john",\n    })\n    fmt.Println(result2)\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["After executing, the output result is: (ensure the current running directory contains ",(0,i.jsx)(n.code,{children:"i18n"})," translation configuration files)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'john says "\u4F60\u597D\u4E16\u754C!"\njohn says "\u3053\u3093\u306B\u3061\u306F\u4E16\u754C!"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"http-object-view",children:"HTTP Object View"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"WebServer"})," return object in the ",(0,i.jsx)(n.code,{children:"goframe"})," framework provides basic template parsing methods as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"func (r *Response) WriteTpl(tpl string, params map[string]interface{}, funcMap ...map[string]interface{}) error\nfunc (r *Response) WriteTplContent(content string, params map[string]interface{}, funcMap ...map[string]interface{}) error\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Among them, ",(0,i.jsx)(n.code,{children:"WriteTpl"})," is used to output template files, and ",(0,i.jsx)(n.code,{children:"WriteTplContent"})," is used to directly parse and output template content."]}),"\n",(0,i.jsx)(n.p,{children:"Example of use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n)\n\nfunc main() {\n    s := g.Server()\n    s.BindHandler("/", func(r *ghttp.Request) {\n        r.Cookie.Set("theme", "default")\n        r.Session.Set("name", "john")\n        r.Response.WriteTplContent(`Cookie:{{.Cookie.theme}}, Session:{{.Session.name}}`, nil)\n    })\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"After executing, the output result is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Cookie:default, Session:john\n"})}),"\n",(0,i.jsx)(n.h2,{id:"controller-view-management",children:"Controller View Management"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"goframe"})," framework provides good template engine support for the routing controller registration method, managed by the ",(0,i.jsx)(n.code,{children:"gmvc.View"})," view object, providing good data ",(0,i.jsx)(n.code,{children:"isolation"}),". The controller view is designed for concurrency safety, allowing asynchronous operations in multi-threading."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"The controller registration method is similar to the PHP execution process and relatively inefficient, so it is not recommended for future use."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"func (view *View) Assign(key string, value interface{})\nfunc (view *View) Assigns(data gview.Params)\n\nfunc (view *View) Parse(file string) ([]byte, error)\nfunc (view *View) ParseContent(content string) ([]byte, error)\n\nfunc (view *View) Display(files ...string) error\nfunc (view *View) DisplayContent(content string) error\n\nfunc (view *View) LockFunc(f func(vars map[string]interface{}))\nfunc (view *View) RLockFunc(f func(vars map[string]interface{}))\n"})}),"\n",(0,i.jsx)(n.p,{children:"Usage example 1:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/frame/gmvc"\n)\n\ntype ControllerTemplate struct {\n    gmvc.Controller\n}\n\nfunc (c *ControllerTemplate) Info() {\n    c.View.Assign("name", "john")\n    c.View.Assigns(map[string]interface{}{\n        "age"   : 18,\n        "score" : 100,\n    })\n    c.View.Display("index.tpl")\n}\n\nfunc main() {\n    s := ghttp.GetServer()\n    s.BindController("/template", new(ControllerTemplate))\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The template content of ",(0,i.jsx)(n.code,{children:"index.tpl"})," is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<html>\n    <head>\n        <title>gf template engine</title>\n    </head>\n    <body>\n        <p>Name: {{.name}}</p>\n        <p>Age:  {{.age}}</p>\n        <p>Score:{{.score}}</p>\n    </body>\n</html>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["After executing, visiting ",(0,i.jsx)(n.a,{href:"http://127.0.0.1:8199/template/info",children:"http://127.0.0.1:8199/template/info"})," shows the parsed template on the page. If the page reports an error that it cannot find the template file, don't worry, because no template directory setting is made, the default is the current executable directory (",(0,i.jsx)(n.code,{children:"/tmp"})," for ",(0,i.jsx)(n.code,{children:"Linux&Mac"}),", ",(0,i.jsx)(n.code,{children:"C:\\Documents and Settings\\Username\\Local Settings\\Temp"})," for ",(0,i.jsx)(n.code,{children:"Windows"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["The given template file parameter file requires a full filename suffix, such as ",(0,i.jsx)(n.code,{children:"index.tpl"}),", ",(0,i.jsx)(n.code,{children:"index.html"}),", etc. The template engine does not mandate the file extension, allowing full customization by the user. Additionally, the template file parameter also supports the absolute path of the file (complete file path)."]}),"\n",(0,i.jsx)(n.p,{children:"Of course, we can also directly parse the template content, for example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/frame/gmvc"\n)\n\ntype ControllerTemplate struct {\n    gmvc.Controller\n}\n\nfunc (c *ControllerTemplate) Info() {\n    c.View.Assign("name", "john")\n    c.View.Assigns(map[string]interface{}{\n        "age"   : 18,\n        "score" : 100,\n    })\n    c.View.DisplayContent(`\n        <html>\n            <head>\n                <title>gf template engine</title>\n            </head>\n            <body>\n                <p>Name: {{.name}}</p>\n                <p>Age:  {{.age}}</p>\n                <p>Score:{{.score}}</p>\n            </body>\n        </html>\n    `)\n}\n\nfunc main() {\n    s := ghttp.GetServer()\n    s.BindController("/template", new(ControllerTemplate{}))\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["After executing, visiting ",(0,i.jsx)(n.a,{href:"http://127.0.0.1:8199/template/info",children:"http://127.0.0.1:8199/template/info"})," shows the parsed content as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<html>\n    <head>\n        <title>gf template engine</title>\n    </head>\n    <body>\n        <p>Name: john</p>\n        <p>Age:  18</p>\n        <p>Score:100</p>\n    </body>\n</html>\n"})})]})}function p(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var r=t(667294);let i={},o=r.createContext(i);function s(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);