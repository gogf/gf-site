"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["34034"],{463885:function(e,n,r){r.r(n),r.d(n,{metadata:()=>t,contentTitle:()=>s,default:()=>d,assets:()=>c,toc:()=>g,frontMatter:()=>i});var t=JSON.parse('{"id":"course/proxima-book/\u7B2C\u56DB\u7AE0-\u4E1A\u52A1\u7F51\u5173/4.3.\u542F\u52A8\u8FD0\u884C","title":"4.3 Service Startup","description":"Detailed instructions on configuring and starting the API Gateway service, including server configuration, OpenAPI documentation, logging setup, and other key components.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/course/proxima-book/\u7B2C\u56DB\u7AE0-\u4E1A\u52A1\u7F51\u5173/4.3.\u542F\u52A8\u8FD0\u884C.md","sourceDirName":"course/proxima-book/\u7B2C\u56DB\u7AE0-\u4E1A\u52A1\u7F51\u5173","slug":"/course/proxima-book/gateway-run","permalink":"/en/course/proxima-book/gateway-run","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/course/proxima-book/\u7B2C\u56DB\u7AE0-\u4E1A\u52A1\u7F51\u5173/4.3.\u542F\u52A8\u8FD0\u884C.md","tags":[],"version":"current","lastUpdatedBy":"oldme","lastUpdatedAt":1734398801000,"frontMatter":{"title":"4.3 Service Startup","hide_title":true,"slug":"/course/proxima-book/gateway-run","keywords":["GoFrame","gateway configuration","service startup","HTTP server","OpenAPI","Swagger","logging setup"],"description":"Detailed instructions on configuring and starting the API Gateway service, including server configuration, OpenAPI documentation, logging setup, and other key components."},"sidebar":"courseProximaBookSidebar","previous":{"title":"4.2 APIs and Controllers","permalink":"/en/course/proxima-book/gateway-controller"},"next":{"title":"4.4 Implementing the gRPC Client","permalink":"/en/course/proxima-book/gateway-client"}}'),a=r("785893"),o=r("250065");let i={title:"4.3 Service Startup",hide_title:!0,slug:"/course/proxima-book/gateway-run",keywords:["GoFrame","gateway configuration","service startup","HTTP server","OpenAPI","Swagger","logging setup"],description:"Detailed instructions on configuring and starting the API Gateway service, including server configuration, OpenAPI documentation, logging setup, and other key components."},s=void 0,c={},g=[{value:"Configuration Files",id:"configuration-files",level:2},{value:"Command File",id:"command-file",level:2},{value:"Starting the Service",id:"starting-the-service",level:2}];function l(e){let n={code:"code",em:"em",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Let's start by running the service before we call the microservices."}),"\n",(0,a.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"app/gateway/manifest/config/config.yaml"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'server:  \n  address:     ":8000"  \n  openapiPath: "/api.json"  \n  swaggerPath: "/swagger"  \n  logger:  \n    path: "./log"  \n    file: "{Y-m-d}.log"  \n    level: "all"  \n    stdout: true\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"app/gateway/manifest/config/etcd.yaml"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'etcd:  \n  address: "srv.com:2379"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"command-file",children:"Command File"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"app/gateway/internal/cmd/cmd.go"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package cmd  \n  \nimport (  \n    "context"  \n  \n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/os/gcmd"\n    "proxima/app/gateway/internal/controller/user"\n    "proxima/app/gateway/internal/controller/words"\n)  \n  \nvar (  \n    Main = gcmd.Command{  \n       Name:  "main",  \n       Usage: "main",  \n       Brief: "start http gateway server",  \n       Func: func(ctx context.Context, parser *gcmd.Parser) (err error) {  \n          s := g.Server()  \n          s.Group("/", func(group *ghttp.RouterGroup) {  \n             group.Middleware(ghttp.MiddlewareHandlerResponse)  \n             group.Group("/v1", func(group *ghttp.RouterGroup) {  \n                group.Group("/", func(group *ghttp.RouterGroup) {  \n                   group.Bind(user.NewV1())  \n                   group.Bind(words.NewV1())  \n                })  \n             })  \n          })  \n          s.Run()  \n          return nil  \n       },  \n    }  \n)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"starting-the-service",children:"Starting the Service"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"app/gateway/main.go"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main  \n  \nimport (  \n    "github.com/gogf/gf/contrib/registry/etcd/v2"  \n    "github.com/gogf/gf/contrib/rpc/grpcx/v2"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/os/gctx"  \n    "proxima/app/gateway/internal/cmd"\n)  \n  \nfunc main() {  \n    var ctx = gctx.New()  \n    conf, err := g.Cfg("etcd").Get(ctx, "etcd.address")  \n    if err != nil {  \n       panic(err)  \n    }  \n  \n    var address = conf.String()  \n    grpcx.Resolver.Register(etcd.New(address))  \n  \n    cmd.Main.Run(ctx)  \n}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ gf run .\\main.go\nbuild running pid: 16144\n2024-12-10 15:30:30.788 [INFO] pid[16144]: http server started listening on [:8000]\n2024-12-10 15:30:30.788 [INFO] {f0f10d9d4ec00f181b7a6f615f39d54b} swagger ui is serving at address: http://127.0.0.1:8000/swagger/\n2024-12-10 15:30:30.789 [INFO] {f0f10d9d4ec00f181b7a6f615f39d54b} openapi specification is serving at address: http://127.0.0.1:8000/api.json\n2024-12-10 15:30:30.817 [DEBU] {f0f10d9d4ec00f181b7a6f615f39d54b} service register: &{Head: Deployment: Namespace: Name:default Version: Endpoints:192.168.10.98:8000 Metadata:map[insecure:true protocol:http]}\n2024-12-10 15:30:30.900 [DEBU] {f0f10d9d4ec00f181b7a6f615f39d54b} etcd put success with key "/service/default/default/default/latest/192.168.10.98:8000", value "{"insecure":true,"protocol":"http"}", lease "7587883327293376805"\n\n  ADDRESS | METHOD |      ROUTE      |                               HANDLER                                |    MIDDLEWARE\n----------|--------|-----------------|----------------------------------------------------------------------|--------------------\n  :8000   | ALL    | /api.json       | github.com/gogf/gf/v2/net/ghttp.(*Server).openapiSpec                |\n----------|--------|-----------------|----------------------------------------------------------------------|--------------------\n  :8000   | ALL    | /swagger/*      | github.com/gogf/gf/v2/net/ghttp.(*Server).swaggerUI                  | HOOK_BEFORE_SERVE\n----------|--------|-----------------|----------------------------------------------------------------------|--------------------\n  :8000   | POST   | /v1/users/login | proxima/app/gateway/internal/controller/user.(*ControllerV1).Login   |\n----------|--------|-----------------|----------------------------------------------------------------------|--------------------\n  :8000   | POST   | /v1/words       | proxima/app/gateway/internal/controller/words.(*ControllerV1).Create |\n----------|--------|-----------------|----------------------------------------------------------------------|--------------------\n  :8000   | GET    | /v1/words/{id}  | proxima/app/gateway/internal/controller/words.(*ControllerV1).Detail |\n----------|--------|-----------------|----------------------------------------------------------------------|--------------------\n\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Entering the ",(0,a.jsx)(n.code,{children:"etcd"})," container and executing the command to view:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ etcdctl get "" --prefix --keys-only\n\n/service/default/default/default/latest/{IP}:8000\n/service/default/default/word/latest/{IP}:32001\n/service/default/default/word/latest/{IP}:32002\n'})}),"\n",(0,a.jsx)(n.p,{children:"As we can see, all three of our services have been successfully registered."})]})}function d(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return s},a:function(){return i}});var t=r(667294);let a={},o=t.createContext(a);function i(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);