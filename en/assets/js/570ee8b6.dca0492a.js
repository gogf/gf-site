"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["18995"],{77084:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>a,default:()=>u,assets:()=>l,toc:()=>r,frontMatter:()=>d});var s=JSON.parse('{"id":"docs/\u6846\u67B6\u8BBE\u8BA1/\u5DE5\u7A0B\u5F00\u53D1\u8BBE\u8BA1/\u6570\u636E\u6A21\u578B\u4E0E\u4E1A\u52A1\u6A21\u578B","title":"Data and Business Models","description":"Data models and business models in the GoFrame framework, including data models for databases like MySQL, Redis, and input/output models for interface interactions. Detailed explanation of the definition and usage of business input/output models, with a special introduction to the special business model DO integrated with the ORM component to simplify DAO data access operations.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6846\u67B6\u8BBE\u8BA1/\u5DE5\u7A0B\u5F00\u53D1\u8BBE\u8BA1/\u6570\u636E\u6A21\u578B\u4E0E\u4E1A\u52A1\u6A21\u578B.md","sourceDirName":"docs/\u6846\u67B6\u8BBE\u8BA1/\u5DE5\u7A0B\u5F00\u53D1\u8BBE\u8BA1","slug":"/docs/design/project-models","permalink":"/en/docs/design/project-models","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6846\u67B6\u8BBE\u8BA1/\u5DE5\u7A0B\u5F00\u53D1\u8BBE\u8BA1/\u6570\u636E\u6A21\u578B\u4E0E\u4E1A\u52A1\u6A21\u578B.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732541616000,"sidebarPosition":4,"frontMatter":{"slug":"/docs/design/project-models","title":"Data and Business Models","sidebar_position":4,"hide_title":true,"keywords":["GoFrame","Data Model","Business Model","Interface Input/Output Model","Business Input/Output Model","ORM Component","DAO Operation","CLI Tool","Entity Model","Module Call"],"description":"Data models and business models in the GoFrame framework, including data models for databases like MySQL, Redis, and input/output models for interface interactions. Detailed explanation of the definition and usage of business input/output models, with a special introduction to the special business model DO integrated with the ORM component to simplify DAO data access operations."},"sidebar":"mainSidebar","previous":{"title":"Structured Programming","permalink":"/en/docs/design/project-struct-parameter"},"next":{"title":"Mono-Repo Management","permalink":"/en/docs/design/project-mono-repo"}}'),o=t("785893"),i=t("250065");let d={slug:"/docs/design/project-models",title:"Data and Business Models",sidebar_position:4,hide_title:!0,keywords:["GoFrame","Data Model","Business Model","Interface Input/Output Model","Business Input/Output Model","ORM Component","DAO Operation","CLI Tool","Entity Model","Module Call"],description:"Data models and business models in the GoFrame framework, including data models for databases like MySQL, Redis, and input/output models for interface interactions. Detailed explanation of the definition and usage of business input/output models, with a special introduction to the special business model DO integrated with the ORM component to simplify DAO data access operations."},a=void 0,l={},r=[{value:"1. Data Model",id:"1-data-model",level:2},{value:"2. Business Model",id:"2-business-model",level:2},{value:"Interface Input/Output Model",id:"interface-inputoutput-model",level:3},{value:"Business Input/Output Model",id:"business-inputoutput-model",level:3},{value:"Special Business Model <code>DO</code>",id:"special-business-model-do",level:3},{value:"3. Other Models",id:"3-other-models",level:2}];function c(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["In the previous section ",(0,o.jsx)(n.a,{href:"/en/docs/design/project-layer",children:"Code Layering"}),', the concept of "',(0,o.jsx)(n.strong,{children:"model"}),'" was mentioned.']}),"\n",(0,o.jsxs)(n.p,{children:["In this section, we will focus on introducing the definition and management of models in ",(0,o.jsx)(n.code,{children:"GoFrame"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"1-data-model",children:"1. Data Model"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Data Model"}),", also known as ",(0,o.jsx)(n.strong,{children:"Entity Model"}),", mainly comes from the data structure of the underlying persistent databases, such as ",(0,o.jsx)(n.code,{children:"MySQL"}),", ",(0,o.jsx)(n.code,{children:"Redis"}),", ",(0,o.jsx)(n.code,{children:"MongoDB"}),", ",(0,o.jsx)(n.code,{children:"Kafka"}),", etc. These data structures are maintained by third-party systems and can be identified through tools which automatically generate corresponding program data model codes. These data model codes are located in the ",(0,o.jsx)(n.code,{children:"/internal/model/entity"})," directory. Developers do not need to manually maintain data models in the program. According to the ",(0,o.jsx)(n.code,{children:"GoFrame"})," framework specification, data models are uniformly maintained using ",(0,o.jsx)(n.code,{children:"CLI"})," tools, and codes are automatically generated."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(745994).Z+"",width:"3584",height:"2058"})}),"\n",(0,o.jsx)(n.p,{children:"Example of Data Model"}),"\n",(0,o.jsx)(n.h2,{id:"2-business-model",children:"2. Business Model"}),"\n",(0,o.jsxs)(n.p,{children:["The business model mainly includes two types: ",(0,o.jsx)(n.strong,{children:"Interface Input/Output Model"})," and ",(0,o.jsx)(n.strong,{children:"Business Input/Output Model"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"interface-inputoutput-model",children:"Interface Input/Output Model"}),"\n",(0,o.jsxs)(n.p,{children:["Interface Input/Output Models are used for interface interaction between systems/services, defined in the ",(0,o.jsx)(n.code,{children:"api"})," interface layer, and can be called by all layers of the project, such as ",(0,o.jsx)(n.code,{children:"controller, logic, model"}),". However, the ",(0,o.jsx)(n.code,{children:"api"})," layer is only used for interface interaction with external services, and this model cannot call or reference internal models like ",(0,o.jsx)(n.code,{children:"model"}),". In the ",(0,o.jsx)(n.code,{children:"GoFrame"})," framework specification, these input/output model names are named in the format ",(0,o.jsx)(n.code,{children:"XxxReq"})," and ",(0,o.jsx)(n.code,{children:"XxxRes"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(472322).Z+"",width:"3584",height:"2058"})}),"\n",(0,o.jsx)(n.p,{children:"Example of Interface Input Model"}),"\n",(0,o.jsx)(n.h3,{id:"business-inputoutput-model",children:"Business Input/Output Model"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Business Input/Output Models"})," are used for method call interactions ",(0,o.jsx)(n.strong,{children:"within"})," service modules/components, especially calls between ",(0,o.jsx)(n.code,{children:"controller->service"})," or ",(0,o.jsx)(n.code,{children:"service->service"}),". These models are defined in the ",(0,o.jsx)(n.code,{children:"model"})," layer. In the ",(0,o.jsx)(n.code,{children:"GoFrame"})," framework specification, these input/output model names are usually in the format ",(0,o.jsx)(n.code,{children:"XxxInput"})," and ",(0,o.jsx)(n.code,{children:"XxxOutput"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(632537).Z+"",width:"3584",height:"2058"})}),"\n",(0,o.jsx)(n.p,{children:"Example of Business Input Model and Business Output Model"}),"\n",(0,o.jsxs)(n.h3,{id:"special-business-model-do",children:["Special Business Model ",(0,o.jsx)(n.code,{children:"DO"})]}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"GoFrame"}),", there is a special business model ",(0,o.jsx)(n.code,{children:"DO"}),", which is intermediate between business models and data models and is mainly used to simplify ",(0,o.jsx)(n.code,{children:"DAO"})," data access operations by leveraging the framework's powerful ",(0,o.jsx)(n.code,{children:"ORM"})," component."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(405170).Z+"",width:"3584",height:"2058"})}),"\n",(0,o.jsx)(n.p,{children:"DO is mainly used for DAO data access operations"}),"\n",(0,o.jsx)(n.h2,{id:"3-other-models",children:"3. Other Models"}),"\n",(0,o.jsxs)(n.p,{children:["There are also internal private models used for module internal calls, such as models defined within each business module in ",(0,o.jsx)(n.code,{children:"logic"}),", used for internal logic and not exposed to the outside."]})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},745994:function(e,n,t){t.d(n,{Z:function(){return s}});let s=t.p+"assets/images/0126798ec8cb70d798fc2260afb2f9a9-fb358fcf07a381134bb16ff3f59c1eed.png"},472322:function(e,n,t){t.d(n,{Z:function(){return s}});let s=t.p+"assets/images/8c037d2e08ddf5b8cb758cefd706b5ea-17ea063841b9063658042f80f39692c0.png"},632537:function(e,n,t){t.d(n,{Z:function(){return s}});let s=t.p+"assets/images/b23a0dab9a4f4ac63c51c166248d9779-c0a32249bd64130f529badbd69513b1f.png"},405170:function(e,n,t){t.d(n,{Z:function(){return s}});let s=t.p+"assets/images/d08e7808de1c18c306e05157dd899992-050a5df489b3f5ea3be8be21211c4afa.png"},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return d}});var s=t(667294);let o={},i=s.createContext(o);function d(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);