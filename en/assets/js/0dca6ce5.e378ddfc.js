"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["59060"],{817293:function(e,n,i){i.r(n),i.d(n,{metadata:()=>t,contentTitle:()=>o,default:()=>h,assets:()=>c,toc:()=>a,frontMatter:()=>l});var t=JSON.parse('{"id":"examples/observability/metric/prometheus/prometheus","title":"Prometheus Integration","description":"direct Prometheus integration in GoFrame without OpenTelemetry","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/examples/observability/metric/prometheus/prometheus.md","sourceDirName":"examples/observability/metric/prometheus","slug":"/examples/observability/metric/prometheus","permalink":"/en/examples/observability/metric/prometheus","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/examples/observability/metric/prometheus/prometheus.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1740107000000,"frontMatter":{"title":"Prometheus Integration","slug":"/examples/observability/metric/prometheus","keywords":["metrics","prometheus","direct integration","goframe"],"description":"direct Prometheus integration in GoFrame without OpenTelemetry","hide_title":true},"sidebar":"examplesSidebar","previous":{"title":"Meter Attributes","permalink":"/en/examples/observability/metric/meter_attributes"},"next":{"title":"Tracing","permalink":"/en/examples/observability/trace"}}'),r=i("785893"),s=i("250065");let l={title:"Prometheus Integration",slug:"/examples/observability/metric/prometheus",keywords:["metrics","prometheus","direct integration","goframe"],description:"direct Prometheus integration in GoFrame without OpenTelemetry",hide_title:!0},o="Metric - Direct Prometheus Integration Example",c={},a=[{value:"Description",id:"description",level:2},{value:"Structure",id:"structure",level:2},{value:"Features",id:"features",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Notes",id:"notes",level:2}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"metric---direct-prometheus-integration-example",children:"Metric - Direct Prometheus Integration Example"})}),"\n",(0,r.jsxs)(n.p,{children:["Github Source: ",(0,r.jsx)(n.a,{href:"https://github.com/gogf/examples/tree/main/observability/metric/prometheus",children:"https://github.com/gogf/examples/tree/main/observability/metric/prometheus"})]}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["This example demonstrates how to directly integrate ",(0,r.jsx)(n.code,{children:"Prometheus"})," metrics in ",(0,r.jsx)(n.code,{children:"GoFrame"})," without using ",(0,r.jsx)(n.code,{children:"OpenTelemetry"}),". It shows how to:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create Prometheus metrics directly"}),"\n",(0,r.jsx)(n.li,{children:"Register metrics with Prometheus registry"}),"\n",(0,r.jsx)(n.li,{children:"Expose metrics via HTTP endpoint"}),"\n",(0,r.jsx)(n.li,{children:"Update metric values dynamically"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"- `go.mod`: The Go module file for dependency management\n- `go.sum`: The Go module checksums file\n- `prometheus.go`: The main application demonstrating direct Prometheus integration\n"})}),"\n",(0,r.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,r.jsx)(n.p,{children:"The example showcases the following features:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Metric Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Counter: Monotonically increasing value"}),"\n",(0,r.jsx)(n.li,{children:"Gauge: Value that can go up and down"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Metric Operations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Metric registration"}),"\n",(0,r.jsx)(n.li,{children:"Value updates"}),"\n",(0,r.jsx)(n.li,{children:"HTTP exposure"}),"\n",(0,r.jsx)(n.li,{children:"Random value generation"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"HTTP Endpoints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/"}),": Triggers metric updates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/metrics"}),": Exposes Prometheus metrics"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://golang.org/dl/",children:"Go"})," ",(0,r.jsx)(n.code,{children:"1.22"})," or higher"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://git-scm.com/downloads",children:"Git"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://goframe.org",children:"GoFrame"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/gogf/gf/tree/master/contrib/metric/otelmetric",children:"GoFrame OpenTelemetry Metric"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Run the example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"go run prometheus.go\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Test the application:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Generate some metric values\ncurl http://localhost:8000/\n\n# View metrics\ncurl http://localhost:8000/metrics\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Example metrics output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"# HELP demo_counter A demo counter.\n# TYPE demo_counter counter\ndemo_counter 1\n\n# HELP demo_gauge A demo gauge.\n# TYPE demo_gauge gauge\ndemo_gauge 42\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.p,{children:"The example demonstrates:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Direct Prometheus metric creation"}),"\n",(0,r.jsx)(n.li,{children:"Manual metric registration"}),"\n",(0,r.jsx)(n.li,{children:"HTTP server configuration"}),"\n",(0,r.jsx)(n.li,{children:"Dynamic value updates"}),"\n",(0,r.jsx)(n.li,{children:"Metric exposure"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses native Prometheus client"}),"\n",(0,r.jsx)(n.li,{children:"No OpenTelemetry dependency"}),"\n",(0,r.jsx)(n.li,{children:"Simpler but less feature-rich"}),"\n",(0,r.jsx)(n.li,{children:"Manual metric management"}),"\n",(0,r.jsx)(n.li,{children:"Good for basic use cases"}),"\n",(0,r.jsx)(n.li,{children:"Default port is 8000"}),"\n",(0,r.jsx)(n.li,{children:"Metrics endpoint at /metrics"}),"\n",(0,r.jsx)(n.li,{children:"Consider security when exposing metrics"}),"\n",(0,r.jsx)(n.li,{children:"Random values for demonstration"}),"\n",(0,r.jsx)(n.li,{children:"Counter only increases"}),"\n",(0,r.jsx)(n.li,{children:"Gauge can increase or decrease"}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return o},a:function(){return l}});var t=i(667294);let r={},s=t.createContext(r);function l(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);