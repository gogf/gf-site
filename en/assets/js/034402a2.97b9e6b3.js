"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["53212"],{544010:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>a,default:()=>h,assets:()=>l,toc:()=>d,frontMatter:()=>r});var i=JSON.parse('{"id":"course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406/3.4.\u603B\u7ED3","title":"3.4 Summary","description":"With GoFrame, accomplish user session management, implementing login and user information retrieval. Understand GoFrame in depth through token generation and user information interface declaration. Introduce middleware for user permission authentication applied in grouped routing. When using JWT, address the logout issue with blacklist and whitelist mechanisms, discussing their pros, cons, and implementation methods.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406/3.4.\u603B\u7ED3.md","sourceDirName":"course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406","slug":"/course/starbook/session-summary","permalink":"/en/course/starbook/session-summary","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/course/starbook/\u7B2C\u4E09\u7AE0-\u4F1A\u8BDD\u7BA1\u7406/3.4.\u603B\u7ED3.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732458699000,"frontMatter":{"title":"3.4 Summary","hide_title":true,"slug":"/course/starbook/session-summary","keywords":["GoFrame","User Session Management","Login Functionality","User Information Retrieval","Token Generation","Permission Authentication","Middleware Usage","Grouped Routing","JWT","Blacklist and Whitelist Mechanism"],"description":"With GoFrame, accomplish user session management, implementing login and user information retrieval. Understand GoFrame in depth through token generation and user information interface declaration. Introduce middleware for user permission authentication applied in grouped routing. When using JWT, address the logout issue with blacklist and whitelist mechanisms, discussing their pros, cons, and implementation methods."},"sidebar":"courseStarBookSidebar","previous":{"title":"3.3 Get User Information","permalink":"/en/course/starbook/session-get-user-info"},"next":{"title":"Chapter 4 - Word Management","permalink":"/en/course/starbook/word"}}'),s=t("785893"),o=t("250065");let r={title:"3.4 Summary",hide_title:!0,slug:"/course/starbook/session-summary",keywords:["GoFrame","User Session Management","Login Functionality","User Information Retrieval","Token Generation","Permission Authentication","Middleware Usage","Grouped Routing","JWT","Blacklist and Whitelist Mechanism"],description:"With GoFrame, accomplish user session management, implementing login and user information retrieval. Understand GoFrame in depth through token generation and user information interface declaration. Introduce middleware for user permission authentication applied in grouped routing. When using JWT, address the logout issue with blacklist and whitelist mechanisms, discussing their pros, cons, and implementation methods."},a=void 0,l={},d=[{value:"About Logging Out",id:"about-logging-out",level:2}];function c(e){let n={code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["In this chapter, we used ",(0,s.jsx)(n.code,{children:"GoFrame"})," to complete the management of user sessions, providing the two major features of ",(0,s.jsx)(n.strong,{children:"login"})," and ",(0,s.jsx)(n.strong,{children:"user information retrieval"}),", deepening our understanding of ",(0,s.jsx)(n.code,{children:"GoFrame"})," and learning the following content:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Declare a user struct to generate ",(0,s.jsx)(n.code,{children:"Token"}),";"]}),"\n",(0,s.jsxs)(n.li,{children:["Parse ",(0,s.jsx)(n.code,{children:"Token"})," to extract user information and provide a user information retrieval interface;"]}),"\n",(0,s.jsx)(n.li,{children:"Basic usage of middleware to complete user permission authentication;"}),"\n",(0,s.jsx)(n.li,{children:"Register middleware in grouped routing."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"about-logging-out",children:"About Logging Out"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["Why didn't we develop a logout feature? This is because ",(0,s.jsx)(n.code,{children:"JWT"})," is essentially a stateless token, and once issued, the server does not store it. This means that when using ",(0,s.jsx)(n.code,{children:"JWT"}),", logging out cannot be as simple as destroying a session on the server-side as in traditional sessions. There are roughly two solutions for handling ",(0,s.jsx)(n.code,{children:"JWT"})," logout, each with its pros and cons:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Blacklist Mechanism"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When a user logs out or the ",(0,s.jsx)(n.code,{children:"JWT"})," is revoked, add the token to a blacklist database;"]}),"\n",(0,s.jsxs)(n.li,{children:["With each request, extract the ",(0,s.jsx)(n.code,{children:"JWT"})," from the request header and check if it's in the blacklist;"]}),"\n",(0,s.jsx)(n.li,{children:"If the token is in the blacklist, deny the request;"}),"\n",(0,s.jsx)(n.li,{children:"Its advantage lies in ease of implementation and maintenance, suitable for most cases; the disadvantage is the necessity to store all revoked tokens, which may lead to increased storage space."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Whitelist Mechanism"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Upon user login, add the generated ",(0,s.jsx)(n.code,{children:"JWT"})," to a whitelist database;"]}),"\n",(0,s.jsxs)(n.li,{children:["With each request, extract the ",(0,s.jsx)(n.code,{children:"JWT"})," from the request header and check if it's in the whitelist;"]}),"\n",(0,s.jsx)(n.li,{children:"If the token is not in the whitelist, deny the request."}),"\n",(0,s.jsx)(n.li,{children:"Its advantage lies in higher security, as only tokens on the whitelist are accepted, ensuring stricter access control. The downside is increased complexity, requiring tokens to be added to the whitelist upon login and removed at the appropriate time."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Typically, blacklist and whitelist data are stored in non-relational databases, such as ",(0,s.jsx)(n.code,{children:"Redis"}),"."]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return r}});var i=t(667294);let s={},o=i.createContext(s);function r(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);