"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["1566"],{445026:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>h,assets:()=>d,toc:()=>o,frontMatter:()=>t});var r=JSON.parse('{"id":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u8D44\u6E90\u7BA1\u7406/\u8D44\u6E90\u7BA1\u7406-\u65B9\u6CD5\u4ECB\u7ECD","title":"Resource - Methods","description":"Methods for resource management in the GoFrame framework, including how to add resources, load resource files, get specified path files, check if resources exist, scan files in directories, and provide relevant example code for understanding and usage.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u6838\u5FC3\u7EC4\u4EF6/\u8D44\u6E90\u7BA1\u7406/\u8D44\u6E90\u7BA1\u7406-\u65B9\u6CD5\u4ECB\u7ECD.md","sourceDirName":"docs/\u6838\u5FC3\u7EC4\u4EF6/\u8D44\u6E90\u7BA1\u7406","slug":"/docs/core/gres-funcs","permalink":"/en/docs/core/gres-funcs","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u6838\u5FC3\u7EC4\u4EF6/\u8D44\u6E90\u7BA1\u7406/\u8D44\u6E90\u7BA1\u7406-\u65B9\u6CD5\u4ECB\u7ECD.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732440306000,"sidebarPosition":2,"frontMatter":{"slug":"/docs/core/gres-funcs","title":"Resource - Methods","sidebar_position":2,"hide_title":true,"keywords":["GoFrame","Resource Management","Method Introduction","Add","Load","Get","GetWithIndex","GetContent","Contains","ScanDir"],"description":"Methods for resource management in the GoFrame framework, including how to add resources, load resource files, get specified path files, check if resources exist, scan files in directories, and provide relevant example code for understanding and usage."},"sidebar":"mainSidebar","previous":{"title":"Resource - Packing With Method","permalink":"/en/docs/core/gres-pack-using-funcs"},"next":{"title":"Resource - Examples","permalink":"/en/docs/core/gres-example"}}'),s=i("785893"),c=i("250065");let t={slug:"/docs/core/gres-funcs",title:"Resource - Methods",sidebar_position:2,hide_title:!0,keywords:["GoFrame","Resource Management","Method Introduction","Add","Load","Get","GetWithIndex","GetContent","Contains","ScanDir"],description:"Methods for resource management in the GoFrame framework, including how to add resources, load resource files, get specified path files, check if resources exist, scan files in directories, and provide relevant example code for understanding and usage."},l=void 0,d={},o=[{value:"Add",id:"add",level:2},{value:"<code>Load</code>",id:"load",level:2},{value:"<code>Get</code>",id:"get",level:2},{value:"<code>GetWithIndex</code>",id:"getwithindex",level:2},{value:"<code>GetContent</code>",id:"getcontent",level:2},{value:"<code>Contains</code>",id:"contains",level:2},{value:"<code>IsEmpty</code>",id:"isempty",level:2},{value:"<code>ScanDir</code>",id:"scandir",level:2},{value:"<code>ScanDirFile</code>",id:"scandirfile",level:2},{value:"<code>Export</code>",id:"export",level:2},{value:"<code>Dump</code>",id:"dump",level:2}];function a(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["The following is a list of common methods. Documentation updates may lag behind new code features; please refer to the code documentation for more methods and examples: ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/os/gres",children:"https://pkg.go.dev/github.com/gogf/gf/v2/os/gres"})]})}),"\n",(0,s.jsx)(n.h2,{id:"add",children:"Add"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"Add"})," decompresses and adds ",(0,s.jsx)(n.code,{children:"content"})," to the default resource object. ",(0,s.jsx)(n.code,{children:"prefix"})," is an optional parameter that indicates the prefix for each file stored in the current resource object."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func Add(content string, prefix ...string) error\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport "github.com/gogf/gf/v2/os/gres"\n\nfunc main() {\n      if err := gres.Add("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"); err != nil {\n          panic("add binary content to resource manager failed: " + err.Error())\n      }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"load",children:(0,s.jsx)(n.code,{children:"Load"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"Load"})," loads, decompresses, and reads file data at path ",(0,s.jsx)(n.code,{children:"path"})," into the default resource object. ",(0,s.jsx)(n.code,{children:"prefix"})," is an optional parameter that signifies the prefix for each file stored in the current resource object."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func Load(path string, prefix ...string) error\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport "github.com/gogf/gf/v2/os/gres"\n\nfunc main() {\n      if err := gres.Load("../res/myfile"); err != nil {\n          panic("load binary content to resource manager failed: " + err.Error())\n      }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"get",children:(0,s.jsx)(n.code,{children:"Get"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"Get"})," returns the file at the specified path."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func Get(path string) *File\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gctx"\n      "github.com/gogf/gf/v2/os/glog"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      file := gres.Get("../res/myfile")\n      if file == nil {\n          glog.Error(gctx.New(), "get file failed!")\n          return\n      }\n\n      fmt.Println("Get File Name:", file.Name())\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"getwithindex",children:(0,s.jsx)(n.code,{children:"GetWithIndex"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"GetWithIndex"})," searches for a file with the given path. If the file is a directory, it searches for index files within that directory. ",(0,s.jsx)(n.code,{children:"GetWithIndex"})," is typically used for HTTP static file services."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func GetWithIndex(path string, indexFiles []string) *File\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gctx"\n      "github.com/gogf/gf/v2/os/glog"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      file := gres.GetWithIndex("../res", []string{"myfile", "myconfig"})\n      if file == nil {\n          glog.Error(gctx.New(), "get file failed!")\n          return\n      }\n\n      fmt.Println("Get File Name:", file.Name())\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"getcontent",children:(0,s.jsx)(n.code,{children:"GetContent"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"GetContent"})," directly returns the content at path ",(0,s.jsx)(n.code,{children:"path"})," from the default resource object."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func GetContent(path string) []byte\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      fileContent := gres.GetContent("../res/myfile")\n      fmt.Println("Get File Content:", fileContent)\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"contains",children:(0,s.jsx)(n.code,{children:"Contains"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"Contains"})," checks if a resource with the path ",(0,s.jsx)(n.code,{children:"path"})," exists in the default resource object."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func Contains(path string) bool\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      if gres.Contains("../res/myfile") {\n          fmt.Println("myfile is exist!")\n      } else{\n          fmt.Println("myfile is not exist!")\n      }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"isempty",children:(0,s.jsx)(n.code,{children:"IsEmpty"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"IsEmpty"})," checks and returns whether the resource manager is empty."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func IsEmpty() bool\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      fmt.Println(gres.IsEmpty())\n\n      gres.Add("xxxxxxxxxxxxxxxxx")\n\n      fmt.Println(gres.IsEmpty())\n\n      // Output:\n      // true\n      // false\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"scandir",children:(0,s.jsx)(n.code,{children:"ScanDir"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"ScanDir"})," returns files under a given path. The parameter ",(0,s.jsx)(n.code,{children:"path"})," should be of type folder. The parameter ",(0,s.jsx)(n.code,{children:"pattern"})," supports multiple filename patterns, separated by ",(0,s.jsx)(n.code,{children:","}),". If the parameter ",(0,s.jsx)(n.code,{children:"recursive"})," is ",(0,s.jsx)(n.code,{children:"true"}),", it recursively scans directories."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func ScanDir(path string, pattern string, recursive ...bool) []*File\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      files := gres.ScanDir("../res", "*.doc,*.go", true)\n      if len(files) > 0 {\n          for _, file := range files {\n              fmt.Println("ScanDir Result:", file.Name())\n          }\n      }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"scandirfile",children:(0,s.jsx)(n.code,{children:"ScanDirFile"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"ScanDirFile"})," returns all subfiles for the given absolute path ",(0,s.jsx)(n.code,{children:"path"}),". If the parameter ",(0,s.jsx)(n.code,{children:"recursive"})," is ",(0,s.jsx)(n.code,{children:"true"}),", it will recursively scan directories."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Note: Only returns files, not directories."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func ScanDirFile(path string, pattern string, recursive ...bool) []*File\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      files := gres.ScanDirFile("../res", "*.*", true)\n      if len(files) > 0 {\n          for _, file := range files {\n              fmt.Println("ScanDirFile Result:", file.Name())\n          }\n      }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"export",children:(0,s.jsx)(n.code,{children:"Export"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"Export"})," recursively saves the specified path ",(0,s.jsx)(n.code,{children:"src"})," and all its subfiles to the specified system path ",(0,s.jsx)(n.code,{children:"dst"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func Export(src, dst string, option ...ExportOption) error\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "fmt"\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      err := gres.Export("../res/src", "../res/dst")\n      if err != nil {\n          fmt.Println("gres.Export Error:", err)\n      }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"dump",children:(0,s.jsx)(n.code,{children:"Dump"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Description: ",(0,s.jsx)(n.code,{children:"Dump"})," prints the files of the default resource object."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func Dump()\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n      "github.com/gogf/gf/v2/os/gres"\n)\n\nfunc main() {\n      gres.Add("xxxxxxxxx")\n\n      gres.Dump()\n}\n'})})]})}function h(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return t}});var r=i(667294);let s={},c=r.createContext(s);function t(e){let n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);