"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["80399"],{629241:function(e,n,t){t.r(n),t.d(n,{metadata:()=>o,contentTitle:()=>r,default:()=>l,assets:()=>a,toc:()=>c,frontMatter:()=>m});var o=JSON.parse('{"id":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u5DE5\u5177\u65B9\u6CD5","title":"Time - Examples","description":"Time management utility methods using the GoFrame framework, including methods to get the current timestamp, date, and time settings such as Timestamp, Date, and SetTimeZone, as well as how to parse common time format strings into the gtime.Time object through StrToTime. With the GoFrame framework, developers can conveniently perform various time format conversions and timezone settings.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u5DE5\u5177\u65B9\u6CD5.md","sourceDirName":"docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime","slug":"/docs/components/os-gtime-common-funcs","permalink":"/en/docs/components/os-gtime-common-funcs","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u7EC4\u4EF6\u5217\u8868/\u7CFB\u7EDF\u76F8\u5173/\u65F6\u95F4\u7BA1\u7406-gtime/\u65F6\u95F4\u7BA1\u7406-\u5DE5\u5177\u65B9\u6CD5.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732443619000,"sidebarPosition":2,"frontMatter":{"slug":"/docs/components/os-gtime-common-funcs","title":"Time - Examples","sidebar_position":2,"hide_title":true,"keywords":["time management","GoFrame","timestamp","date processing","global timezone","time format parsing","gtime object","utility methods","time conversion","time output example"],"description":"Time management utility methods using the GoFrame framework, including methods to get the current timestamp, date, and time settings such as Timestamp, Date, and SetTimeZone, as well as how to parse common time format strings into the gtime.Time object through StrToTime. With the GoFrame framework, developers can conveniently perform various time format conversions and timezone settings."},"sidebar":"mainSidebar","previous":{"title":"Time - Object","permalink":"/en/docs/components/os-gtime-time"},"next":{"title":"Time - Time Zone","permalink":"/en/docs/components/os-gtime-timezone"}}'),i=t("785893"),s=t("250065");let m={slug:"/docs/components/os-gtime-common-funcs",title:"Time - Examples",sidebar_position:2,hide_title:!0,keywords:["time management","GoFrame","timestamp","date processing","global timezone","time format parsing","gtime object","utility methods","time conversion","time output example"],description:"Time management utility methods using the GoFrame framework, including methods to get the current timestamp, date, and time settings such as Timestamp, Date, and SetTimeZone, as well as how to parse common time format strings into the gtime.Time object through StrToTime. With the GoFrame framework, developers can conveniently perform various time format conversions and timezone settings."},r=void 0,a={},c=[{value:"Example 1: Basic Usage",id:"example-1-basic-usage",level:3},{value:"Example 2: <code>StrToTime</code>",id:"example-2-strtotime",level:3}];function d(e){let n={a:"a",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Interface Documentation:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/os/gtime",children:"https://pkg.go.dev/github.com/gogf/gf/v2/os/gtime"})}),"\n",(0,i.jsx)(n.p,{children:"The methods are quite simple, with the more commonly used methods as follows:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Timestamp"})," is used to obtain the current timestamp, while ",(0,i.jsx)(n.code,{children:"TimestampMilli"}),", ",(0,i.jsx)(n.code,{children:"TimestampMicro"}),", and ",(0,i.jsx)(n.code,{children:"TimestampNano"})," are used to get the current millisecond, microsecond, and nanosecond values."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Date"})," and ",(0,i.jsx)(n.code,{children:"Datetime"})," are used to obtain the current date and current date-time."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SetTimeZone"})," is used to set the global timezone for the current process."]}),"\n",(0,i.jsx)(n.li,{children:"For descriptions of other methods, please refer to the interface documentation."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-1-basic-usage",children:"Example 1: Basic Usage"}),"\n",(0,i.jsx)(n.p,{children:"Create a time object and get the current timestamp."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/os/gtime"\n)\n\nfunc main() {\n    fmt.Println("Date       :", gtime.Date())\n    fmt.Println("Datetime   :", gtime.Datetime())\n    fmt.Println("Second     :", gtime.Timestamp())\n    fmt.Println("Millisecond:", gtime.TimestampMilli())\n    fmt.Println("Microsecond:", gtime.TimestampMicro())\n    fmt.Println("Nanosecond :", gtime.TimestampNano())\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"After execution, the output is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Date       : 2018-07-22\nDatetime   : 2018-07-22 11:52:22\nSecond     : 1532231542\nMillisecond: 1532231542688\nMicrosecond: 1532231542688688\nNanosecond : 1532231542688690259\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"example-2-strtotime",children:["Example 2: ",(0,i.jsx)(n.code,{children:"StrToTime"})]}),"\n",(0,i.jsxs)(n.p,{children:["In addition to using the ",(0,i.jsx)(n.code,{children:"New"})," method, you can also use ",(0,i.jsx)(n.code,{children:"StrToTime"})," to parse common time strings into a ",(0,i.jsx)(n.code,{children:"gtime.Time"})," object. Common time strings include:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"2017-12-14 04:51:34 +0805 LMT\n2017-12-14 04:51:34 +0805 LMT\n2006-01-02T15:04:05Z07:00\n2014-01-17T01:19:15+08:00\n2018-02-09T20:46:17.897Z\n2018-02-09 20:46:17.897\n2018-02-09T20:46:17Z\n2018-02-09 20:46:17\n2018/10/31 - 16:38:46\n2018-02-09\n2018.02.09\n\n01-Nov-2018 11:50:28\n01/Nov/2018 11:50:28\n01.Nov.2018 11:50:28\n01.Nov.2018:11:50:28\nDate connectors support '-', '/', '.'\n"})}),"\n",(0,i.jsx)(n.p,{children:"Usage example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/gogf/gf/v2/os/glog"\n    "github.com/gogf/gf/v2/os/gtime"\n    "time"\n)\n\nfunc main() {\n    array := []string{\n        "2017-12-14 04:51:34 +0805 LMT",\n        "2006-01-02T15:04:05Z07:00",\n        "2014-01-17T01:19:15+08:00",\n        "2018-02-09T20:46:17.897Z",\n        "2018-02-09 20:46:17.897",\n        "2018-02-09T20:46:17Z",\n        "2018-02-09 20:46:17",\n        "2018.02.09 20:46:17",\n        "2018-02-09",\n        "2017/12/14 04:51:34 +0805 LMT",\n        "2018/02/09 12:00:15",\n        "01/Nov/2018:13:28:13 +0800",\n        "01-Nov-2018 11:50:28 +0805 LMT",\n        "01-Nov-2018T15:04:05Z07:00",\n        "01-Nov-2018T01:19:15+08:00",\n        "01-Nov-2018 11:50:28 +0805 LMT",\n        "01/Nov/2018 11:50:28",\n        "01/Nov/2018:11:50:28",\n        "01.Nov.2018:11:50:28",\n        "01/Nov/2018",\n    }\n    cstLocal, _ := time.LoadLocation("Asia/Shanghai")\n    for _, s := range array {\n        if t, err := gtime.StrToTime(s); err == nil {\n            fmt.Println(s)\n            fmt.Println(t.UTC().String())\n            fmt.Println(t.In(cstLocal).String())\n        } else {\n            glog.Error(s, err)\n        }\n        fmt.Println()\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this example, some time strings are converted to ",(0,i.jsx)(n.code,{children:"gtime.Time"})," objects using the ",(0,i.jsx)(n.code,{children:"StrToTime"})," method, and both the ",(0,i.jsx)(n.code,{children:"UTC"})," time and ",(0,i.jsx)(n.code,{children:"CST"})," time (Shanghai timezone time) of the event are output. After execution, the output is:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"2017-12-14 04:51:34 +0805 LMT\n2017-12-13 20:46:34\n2017-12-14 04:46:34 +0800 CST\n\n2006-01-02T15:04:05Z07:00\n2006-01-02 22:04:05\n2006-01-03 06:04:05 +0800 CST\n\n2014-01-17T01:19:15+08:00\n2014-01-16 17:19:15\n2014-01-17 01:19:15 +0800 CST\n\n2018-02-09T20:46:17.897Z\n2018-02-09 20:46:17\n2018-02-10 04:46:17.897 +0800 CST\n\n2018-02-09 20:46:17.897\n2018-02-09 12:46:17\n2018-02-09 20:46:17.897 +0800 CST\n\n2018-02-09T20:46:17Z\n2018-02-09 20:46:17\n2018-02-10 04:46:17 +0800 CST\n\n2018-02-09 20:46:17\n2018-02-09 12:46:17\n2018-02-09 20:46:17 +0800 CST\n\n2018.02.09 20:46:17\n2018-02-09 12:46:17\n2018-02-09 20:46:17 +0800 CST\n\n2018-02-09\n2018-02-08 16:00:00\n2018-02-09 00:00:00 +0800 CST\n\n2017/12/14 04:51:34 +0805 LMT\n2017-12-13 20:46:34\n2017-12-14 04:46:34 +0800 CST\n\n2018/02/09 12:00:15\n2018-02-09 04:00:15\n2018-02-09 12:00:15 +0800 CST\n\n01/Nov/2018:13:28:13 +0800\n2018-11-01 05:28:13\n2018-11-01 13:28:13 +0800 CST\n\n01-Nov-2018 11:50:28 +0805 LMT\n2018-11-01 03:45:28\n2018-11-01 11:45:28 +0800 CST\n\n01-Nov-2018T15:04:05Z07:00\n2018-11-01 22:04:05\n2018-11-02 06:04:05 +0800 CST\n\n01-Nov-2018T01:19:15+08:00\n2018-10-31 17:19:15\n2018-11-01 01:19:15 +0800 CST\n\n01-Nov-2018 11:50:28 +0805 LMT\n2018-11-01 03:45:28\n2018-11-01 11:45:28 +0800 CST\n\n01/Nov/2018 11:50:28\n2018-11-01 03:50:28\n2018-11-01 11:50:28 +0800 CST\n\n01/Nov/2018:11:50:28\n2018-11-01 03:50:28\n2018-11-01 11:50:28 +0800 CST\n\n01.Nov.2018:11:50:28\n2018-11-01 03:50:28\n2018-11-01 11:50:28 +0800 CST\n\n01/Nov/2018\n2018-10-31 16:00:00\n2018-11-01 00:00:00 +0800 CST\n"})})]})}function l(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return m}});var o=t(667294);let i={},s=o.createContext(i);function m(e){let n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:m(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);