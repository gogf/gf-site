"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["72756"],{542558:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>S,default:()=>C,assets:()=>E,toc:()=>M,frontMatter:()=>w});var r=JSON.parse('{"id":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u63A5\u53E3\u6587\u6863/\u63A5\u53E3\u6587\u6863-OpenAPIv3","title":"API Document - OpenAPIv3","description":"Use the OpenAPIv3 protocol in the GoFrame framework to standardize the generation of API documentation. By embedding the g.Meta metadata structure, you can automatically generate API information with protocol tags. Additionally, the article shows how to customize extension tags and manually improve the API documentation.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/WEB\u670D\u52A1\u5F00\u53D1/\u63A5\u53E3\u6587\u6863/\u63A5\u53E3\u6587\u6863-OpenAPIv3.md","sourceDirName":"docs/WEB\u670D\u52A1\u5F00\u53D1/\u63A5\u53E3\u6587\u6863","slug":"/docs/web/api-document-openapiv3","permalink":"/en/docs/web/api-document-openapiv3","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/WEB\u670D\u52A1\u5F00\u53D1/\u63A5\u53E3\u6587\u6863/\u63A5\u53E3\u6587\u6863-OpenAPIv3.md","tags":[],"version":"current","lastUpdatedBy":"wanna","lastUpdatedAt":1733209345000,"sidebarPosition":0,"frontMatter":{"slug":"/docs/web/api-document-openapiv3","title":"API Document - OpenAPIv3","sidebar_position":0,"hide_title":true,"keywords":["OpenAPIv3","GoFrame","API Documentation","Standard Routing","g.Meta","swagger","API","Framework","Metadata","Protocol"],"description":"Use the OpenAPIv3 protocol in the GoFrame framework to standardize the generation of API documentation. By embedding the g.Meta metadata structure, you can automatically generate API information with protocol tags. Additionally, the article shows how to customize extension tags and manually improve the API documentation."},"sidebar":"mainSidebar","previous":{"title":"API Document","permalink":"/en/docs/web/api-document"},"next":{"title":"API Document - Custom UI","permalink":"/en/docs/web/api-document-swagger-ui"}}'),s=t("785893"),o=t("250065"),a=t("667294"),i=t("467026"),c=t("851770"),d=t("616550"),l=t("855104"),h=t("561906"),p=t("592227"),u=t("556588");function m(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||a.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function g(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var x=t("37131");let f="tabList__CuJ",j="tabItem_LNqP";function v(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:a}=e,d=[],{blockElementScrollPositionUntilNextRender:l}=(0,c.o5)(),h=e=>{let n=e.currentTarget,t=a[d.indexOf(n)].value;t!==r&&(l(n),o(t))},p=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{let t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1]}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:a.map(e=>{let{value:n,label:t,attributes:o}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>d.push(e),onKeyDown:p,onClick:h,...o,className:(0,i.Z)("tabs__item",j,o?.className,{"tabs__item--active":r===n}),children:t??n},n)})})}function b(e){let{lazy:n,children:t,selectedValue:r}=e,o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=o.find(e=>e.props.value===r);return e?(0,a.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function y(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:r}=e,s=function(e){let{values:n,children:t}=e;return(0,a.useMemo)(()=>{let e=n??m(t).map(e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}});return!function(e){let n=(0,p.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}(e),[o,i]=(0,a.useState)(()=>(function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let r=t.find(e=>e.default)??t[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:s})),[c,x]=function(e){let{queryString:n=!1,groupId:t}=e,r=(0,d.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t}),o=(0,h._X)(s);return[o,(0,a.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})},[s,r])]}({queryString:t,groupId:r}),[f,j]=function(e){var n;let{groupId:t}=e;let r=(n=t)?`docusaurus.tab.${n}`:null,[s,o]=(0,u.Nk)(r);return[s,(0,a.useCallback)(e=>{if(!!r)o.set(e)},[r,o])]}({groupId:r}),v=(()=>{let e=c??f;return g({value:e,tabValues:s})?e:null})();return(0,l.Z)(()=>{v&&i(v)},[v]),{selectedValue:o,selectValue:(0,a.useCallback)(e=>{if(!g({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);i(e),x(e),j(e)},[x,j,s]),tabValues:s}}(e);return(0,s.jsxs)("div",{className:(0,i.Z)("tabs-container",f),children:[(0,s.jsx)(v,{...n,...e}),(0,s.jsx)(b,{...n,...e})]})}function I(e){let n=(0,x.Z)();return(0,s.jsx)(y,{...e,children:m(e.children)},String(n))}let A="tabItem_Ymn6";function P(e){let{children:n,hidden:t,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.Z)(A,r),hidden:t,children:n})}let w={slug:"/docs/web/api-document-openapiv3",title:"API Document - OpenAPIv3",sidebar_position:0,hide_title:!0,keywords:["OpenAPIv3","GoFrame","API Documentation","Standard Routing","g.Meta","swagger","API","Framework","Metadata","Protocol"],description:"Use the OpenAPIv3 protocol in the GoFrame framework to standardize the generation of API documentation. By embedding the g.Meta metadata structure, you can automatically generate API information with protocol tags. Additionally, the article shows how to customize extension tags and manually improve the API documentation."},S=void 0,E={},M=[{value:"I. <code>OpenAPIv3</code>",id:"i-openapiv3",level:2},{value:"II. <code>g.Meta</code> Metadata",id:"ii-gmeta-metadata",level:2},{value:"III. Common Protocol Tags",id:"iii-common-protocol-tags",level:2},{value:"1. Basic Tags",id:"1-basic-tags",level:3},{value:"2. Extension Tags",id:"2-extension-tags",level:3},{value:"IV. Extending Response Structure Information",id:"iv-extending-response-structure-information",level:2},{value:"V. Expanding <code>OpenAPIv3</code> Information",id:"v-expanding-openapiv3-information",level:2},{value:"VI\u3001Add api.json(swagger) custom authentication",id:"viadd-apijsonswagger-custom-authentication",level:2}];function R(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," protocol is mainly used in standardized routing. Before reading the introduction to the API documentation protocol, please familiarize yourself with the standardized routing: ",(0,s.jsx)(n.a,{href:"/en/docs/web/router-registering-strict-router",children:"Standard Router"})]})}),"\n",(0,s.jsxs)(n.h2,{id:"i-openapiv3",children:["I. ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})]}),"\n",(0,s.jsxs)(n.p,{children:["For a detailed introduction to the ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," protocol, please refer to: ",(0,s.jsx)(n.a,{href:"https://swagger.io/specification/",children:"https://swagger.io/specification/"})]}),"\n",(0,s.jsxs)(n.h2,{id:"ii-gmeta-metadata",children:["II. ",(0,s.jsx)(n.code,{children:"g.Meta"})," Metadata"]}),"\n",(0,s.jsxs)(n.p,{children:["API metadata information can be implemented by embedding the ",(0,s.jsx)(n.code,{children:"g.Meta"})," structure in the input struct and using its attribute tags."]}),"\n",(0,s.jsxs)(n.p,{children:["For an introduction to the metadata component, please refer to the section: ",(0,s.jsx)(n.a,{href:"/en/docs/components/util-gmeta",children:"Metadata"})]}),"\n",(0,s.jsx)(n.h2,{id:"iii-common-protocol-tags",children:"III. Common Protocol Tags"}),"\n",(0,s.jsxs)(n.p,{children:["The attribute tags in input and output structs fully support the ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," protocol. Once the corresponding protocol tags are added, the generated ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," information will automatically include the attribute."]}),"\n",(0,s.jsxs)(n.p,{children:["Most tag attributes are automatically generated by the ",(0,s.jsx)(n.code,{children:"Server"})," component, and there are not many tags that developers need to set manually."]}),"\n",(0,s.jsx)(n.h3,{id:"1-basic-tags",children:"1. Basic Tags"}),"\n",(0,s.jsx)(n.p,{children:"Commonly used basic tags include:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Common OpenAPIv3 Tags"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"path"})}),(0,s.jsx)(n.td,{children:"Combined with the prefix at registration to form the API URI path"}),(0,s.jsxs)(n.td,{children:["Used for ",(0,s.jsx)(n.code,{children:"g.Meta"})," to mark API metadata"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tags"})}),(0,s.jsx)(n.td,{children:"The tag to which the API belongs for API classification"}),(0,s.jsxs)(n.td,{children:["Used for ",(0,s.jsx)(n.code,{children:"g.Meta"})," to mark API metadata"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"method"})}),(0,s.jsxs)(n.td,{children:["The request method for the API: ",(0,s.jsx)(n.code,{children:"GET/PUT/POST/DELETE...(case insensitive)"})]}),(0,s.jsxs)(n.td,{children:["Used for ",(0,s.jsx)(n.code,{children:"g.Meta"})," to mark API metadata"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"deprecated"})}),(0,s.jsx)(n.td,{children:"Marks the API as deprecated"}),(0,s.jsxs)(n.td,{children:["Used for ",(0,s.jsx)(n.code,{children:"g.Meta"})," to mark API metadata"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"summary"})}),(0,s.jsx)(n.td,{children:"Brief description of the API/parameter"}),(0,s.jsxs)(n.td,{children:["Abbreviation ",(0,s.jsx)(n.code,{children:"sm"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"description"})}),(0,s.jsx)(n.td,{children:"Detailed description of the API/parameter"}),(0,s.jsxs)(n.td,{children:["Abbreviation ",(0,s.jsx)(n.code,{children:"dc"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"in"})}),(0,s.jsx)(n.td,{children:"Parameter submission method"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"header/path/query/cookie"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"default"})}),(0,s.jsx)(n.td,{children:"Default value for the parameter"}),(0,s.jsxs)(n.td,{children:["Abbreviation ",(0,s.jsx)(n.code,{children:"d"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"mime"})}),(0,s.jsxs)(n.td,{children:["The ",(0,s.jsx)(n.code,{children:"MIME"})," type of the API, such as ",(0,s.jsx)(n.code,{children:"multipart/form-data"}),", generally set globally, defaults to ",(0,s.jsx)(n.code,{children:"application/json"}),"."]}),(0,s.jsxs)(n.td,{children:["Used for ",(0,s.jsx)(n.code,{children:"g.Meta"})," to mark API metadata"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsxs)(n.td,{children:["The type of the parameter, generally not needed, special parameters may require manual setting, such as ",(0,s.jsx)(n.code,{children:"file"})]}),(0,s.jsx)(n.td,{children:"Only applicable to parameter attributes"})]})]})]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["For more tags, please refer to the standard ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," protocol: ",(0,s.jsx)(n.a,{href:"https://swagger.io/specification/",children:"https://swagger.io/specification/"})]})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the above tags, the ",(0,s.jsx)(n.code,{children:"g.Meta"})," of the response structure also supports additional tags to set more detailed documentation information:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Tag"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Remarks"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"status"})}),(0,s.jsx)(n.td,{children:"Set the default return status code of the response"}),(0,s.jsxs)(n.td,{children:["Used for ",(0,s.jsx)(n.code,{children:"g.Meta"})," to mark API metadata, default value is ",(0,s.jsx)(n.code,{children:"200"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"responseExample"})}),(0,s.jsxs)(n.td,{children:["Set the ",(0,s.jsx)(n.code,{children:"json"})," file path of the default return example of the response"]}),(0,s.jsxs)(n.td,{children:["Used for ",(0,s.jsx)(n.code,{children:"g.Meta"})," to mark API metadata, abbreviation ",(0,s.jsx)(n.code,{children:"resEg"})]})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"json"})," file formats supported by ",(0,s.jsx)(n.code,{children:"responseExample"})," are as follows:"]}),"\n",(0,s.jsxs)(I,{children:[(0,s.jsx)(P,{value:"array",label:"Array",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "code": 0,\n        "message": "Success",\n        "data": null\n    },\n    {\n        "code": 1,\n        "message": "Internal Server Error",\n        "data": null\n    }\n]\n'})})}),(0,s.jsx)(P,{value:"object",label:"Object",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "success": {\n        "code": 0,\n        "message": "Success",\n        "data": null\n    },\n    "error": {\n        "code": 1,\n        "message": "Internal Server Error",\n        "data": null\n    }\n}\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"2-extension-tags",children:"2. Extension Tags"}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.code,{children:"OpenAPI"})," specification, all tags prefixed with ",(0,s.jsx)(n.code,{children:"x-"})," are customizable extension tags by developers. Extension tags can be defined in any API or attribute using ",(0,s.jsx)(n.code,{children:"Golang struct tag"})," format, and during the generation of API documentation, they will be returned as independent fields. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "github.com/gogf/gf/v2/errors/gcode"\n    "github.com/gogf/gf/v2/errors/gerror"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n)\n\ntype GetListReq struct {\n    g.Meta `path:"/user" tags:"User" method:"get" x-group:"User/Info" summary:"Get user list with basic info."`\n    Page   int `dc:"Page number" d:"1" x-sort:"1"`\n    Size   int `dc:"Size for per page." d:"10" x-sort:"2"`\n}\ntype GetListRes struct{}\n\ntype Controller struct{}\n\nfunc (c *Controller) GetList(ctx context.Context, req *GetListReq) (res *GetListRes, err error) {\n    return nil, gerror.NewCode(gcode.CodeNotImplemented)\n}\n\nfunc main() {\n    s := g.Server()\n    s.Group("/", func(group *ghttp.RouterGroup) {\n        group.Bind(new(Controller))\n    })\n    s.SetOpenApiPath("/api.json")\n    s.SetSwaggerPath("/swagger")\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["After execution, visit the address ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8199/swagger",children:"http://127.0.0.1:8199/swagger"})," to view the ",(0,s.jsx)(n.code,{children:"swagger ui"}),", and visit ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8199/api.json",children:"http://127.0.0.1:8199/api.json"})," to view the corresponding ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," documentation. The generated ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," documentation is as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    "openapi": "3.0.0",\n    "components": {\n        "schemas": {\n            "main.GetListReq": {\n                "properties": {\n                    "Page": {\n                        "default": 1,\n                        "description": "Page number",\n                        "format": "int",\n                        "properties": {},\n                        "type": "integer",\n                        "x-sort": "1"\n                    },\n                    "Size": {\n                        "default": 10,\n                        "description": "Size for per page.",\n                        "format": "int",\n                        "properties": {},\n                        "type": "integer",\n                        "x-sort": "2"\n                    }\n                },\n                "type": "object",\n                "x-group": "User/Info"\n            },\n            "main.GetListRes": {\n                "properties": {},\n                "type": "object"\n            }\n        }\n    },\n    "info": {\n        "title": "",\n        "version": ""\n    },\n    "paths": {\n        "/user": {\n            "get": {\n                "parameters": [\n                    {\n                        "description": "Page number",\n                        "in": "query",\n                        "name": "Page",\n                        "schema": {\n                            "default": 1,\n                            "description": "Page number",\n                            "format": "int",\n                            "properties": {},\n                            "type": "integer",\n                            "x-sort": "1"\n                        },\n                        "x-sort": "1"\n                    },\n                    {\n                        "description": "Size for per page.",\n                        "in": "query",\n                        "name": "Size",\n                        "schema": {\n                            "default": 10,\n                            "description": "Size for per page.",\n                            "format": "int",\n                            "properties": {},\n                            "type": "integer",\n                            "x-sort": "2"\n                        },\n                        "x-sort": "2"\n                    }\n                ],\n                "responses": {\n                    "200": {\n                        "content": {\n                            "application/json": {\n                                "schema": {\n                                    "$ref": "#/components/schemas/main.GetListRes"\n                                }\n                            }\n                        },\n                        "description": ""\n                    }\n                },\n                "summary": "Get user list with basic info.",\n                "tags": [\n                    "User"\n                ],\n                "x-group": "User/Info"\n            },\n            "x-group": "User/Info"\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"As you can see, the extension tags have been included in the API documentation."}),"\n",(0,s.jsx)(n.h2,{id:"iv-extending-response-structure-information",children:"IV. Extending Response Structure Information"}),"\n",(0,s.jsxs)(n.p,{children:["For requests that require multiple response status codes, the framework provides the ",(0,s.jsx)(n.code,{children:"IEnhanceResponseStatus"})," interface in the ",(0,s.jsx)(n.code,{children:"goai"})," component, and developers can extend the information of the response structure by implementing this interface. The related definitions are as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type EnhancedStatusCode = int\n\ntype EnhancedStatusType struct {\n    Response any\n    Examples any\n}\n\ntype IEnhanceResponseStatus interface {\n    EnhanceResponseStatus() map[EnhancedStatusCode]EnhancedStatusType\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Response"})," is a response structure similar to a normal response structure, you can also add a ",(0,s.jsx)(n.code,{children:"g.Meta"})," tag to add documentation information, and after setting the ",(0,s.jsx)(n.code,{children:"mime"})," tag, the structure will also override the content of the general response structure. ",(0,s.jsx)(n.code,{children:"Examples"})," is a response example, you can use the error code list to automatically generate example content and display it in the document, so as to ensure the synchronization of document content and actual business content. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n\n    "github.com/gogf/gf/v2/errors/gcode"\n    "github.com/gogf/gf/v2/errors/gerror"\n    "github.com/gogf/gf/v2/frame/g"\n    "github.com/gogf/gf/v2/net/ghttp"\n    "github.com/gogf/gf/v2/net/goai"\n)\n\ntype StoreMessageReq struct {\n    g.Meta  `path:"/messages" method:"post" summary:"Store a message"`\n    Content string `json:"content"`\n}\ntype StoreMessageRes struct {\n    g.Meta `status:"201"`\n    Id     string `json:"id"`\n}\ntype EmptyRes struct {\n    g.Meta `mime:"application/json"`\n}\n\ntype CommonRes struct {\n    Code    int         `json:"code"`\n    Message string      `json:"message"`\n    Data    interface{} `json:"data"`\n}\n\nvar StoreMessageErr = map[int]gcode.Code{\n    500: gcode.New(1, "Server Dead", nil),\n}\n\nfunc (r StoreMessageRes) EnhanceResponseStatus() (resList map[int]goai.EnhancedStatusType) {\n    examples := []interface{}{}\n    example500 := CommonRes{\n        Code:    StoreMessageErr[500].Code(),\n        Message: StoreMessageErr[500].Message(),\n        Data:    nil,\n    }\n    examples = append(examples, example500)\n    return map[int]goai.EnhancedStatusType{\n        403: {\n            Response: EmptyRes{},\n        },\n        500: {\n            Response: struct{}{},\n            Examples: examples,\n        },\n    }\n}\n\ntype Controller struct{}\n\nfunc (c *Controller) StoreMessage(ctx context.Context, req *StoreMessageReq) (res *StoreMessageRes, err error) {\n    return nil, gerror.NewCode(gcode.CodeNotImplemented)\n}\n\nfunc main() {\n    s := g.Server()\n    s.Group("/", func(group *ghttp.RouterGroup) {\n        group.Bind(new(Controller))\n    })\n    oai := s.GetOpenApi()\n    oai.Config.CommonResponse = CommonRes{}\n    oai.Config.CommonResponseDataField = `Data`\n    s.SetOpenApiPath("/api.json")\n    s.SetSwaggerPath("/swagger")\n    s.SetPort(8199)\n    s.Run()\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["After execution, visit the address ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8199/swagger",children:"http://127.0.0.1:8199/swagger"})," to view the ",(0,s.jsx)(n.code,{children:"swagger ui"}),", and visit ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8199/api.json",children:"http://127.0.0.1:8199/api.json"})," to view the corresponding ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," documentation. The generated ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," documentation is as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "openapi": "3.0.0",\n    "components": {\n        "schemas": {\n            "main.StoreMessageReq": {\n                "properties": {\n                    "content": {\n                        "format": "string",\n                        "type": "string"\n                    }\n                },\n                "type": "object"\n            },\n            "main.StoreMessageRes": {\n                "properties": {\n                    "id": {\n                        "format": "string",\n                        "type": "string"\n                    }\n                },\n                "type": "object"\n            },\n            "interface": {\n                "properties": {},\n                "type": "object"\n            },\n            "main.EmptyRes": {\n                "properties": {},\n                "type": "object"\n            },\n            "struct": {\n                "properties": {},\n                "type": "object"\n            }\n        }\n    },\n    "info": {\n        "title": "",\n        "version": ""\n    },\n    "paths": {\n        "/messages": {\n            "post": {\n                "requestBody": {\n                    "content": {\n                        "application/json": {\n                            "schema": {\n                                "$ref": "#/components/schemas/main.StoreMessageReq"\n                            }\n                        }\n                    }\n                },\n                "responses": {\n                    "201": {\n                        "content": {\n                            "application/json": {\n                                "schema": {\n                                    "properties": {\n                                        "code": {\n                                            "format": "int",\n                                            "type": "integer"\n                                        },\n                                        "message": {\n                                            "format": "string",\n                                            "type": "string"\n                                        },\n                                        "data": {\n                                            "properties": {\n                                                "id": {\n                                                    "format": "string",\n                                                    "type": "string"\n                                                }\n                                            },\n                                            "type": "object"\n                                        }\n                                    },\n                                    "type": "object"\n                                }\n                            }\n                        },\n                        "description": ""\n                    },\n                    "403": {\n                        "content": {\n                            "application/json": {\n                                "schema": {\n                                    "$ref": "#/components/schemas/main.EmptyRes"\n                                }\n                            }\n                        },\n                        "description": ""\n                    },\n                    "500": {\n                        "content": {\n                            "application/json": {\n                                "schema": {\n                                    "properties": {\n                                        "code": {\n                                            "format": "int",\n                                            "type": "integer"\n                                        },\n                                        "message": {\n                                            "format": "string",\n                                            "type": "string"\n                                        },\n                                        "data": {\n                                            "properties": {},\n                                            "type": "object"\n                                        }\n                                    },\n                                    "type": "object"\n                                },\n                                "examples": {\n                                    "example 1": {\n                                        "value": {\n                                            "code": 1,\n                                            "message": "Server Dead",\n                                            "data": null\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        "description": ""\n                    }\n                },\n                "summary": "Store a message"\n            }\n        }\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["As you can see, the default response status code has been changed to ",(0,s.jsx)(n.code,{children:"201"}),", and the response example has also been automatically generated."]}),"\n",(0,s.jsxs)(n.h2,{id:"v-expanding-openapiv3-information",children:["V. Expanding ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," Information"]}),"\n",(0,s.jsxs)(n.p,{children:["The core API information has already been automatically generated. If developers want to further complete the API information, they can obtain the ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," struct object via ",(0,s.jsx)(n.code,{children:"s.GetOpenApi()"})," and manually fill in the corresponding attribute content. Let's look at an example where we design a common data structure around each API:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(585391).Z+"",width:"3584",height:"2070"})}),"\n",(0,s.jsxs)(n.p,{children:["From this, we can see that with the general ",(0,s.jsx)(n.code,{children:"OpenAPIv3"})," object, we can customize its content and generate various other types of custom API documentation based on it."]}),"\n",(0,s.jsx)(n.h2,{id:"viadd-apijsonswagger-custom-authentication",children:"VI\u3001Add api.json(swagger) custom authentication"}),"\n",(0,s.jsxs)(n.p,{children:["For situations where api document authentication is required, you can use the ",(0,s.jsx)(n.code,{children:"ghttp.BindHookHandler"})," method to authenticate the ",(0,s.jsx)(n.code,{children:"s.GetOpenApiPath()"})," routing binding pre-method. The example is as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func main() {\n    s := g.Server()\n    // if api.json requires authentication, add openApiBasicAuth handler\n    s.BindHookHandler(s.GetOpenApiPath(), ghttp.HookBeforeServe, openApiBasicAuth)\n    s.Run()\n}\n\nfunc openApiBasicAuth(r *ghttp.Request) {\n    if !r.BasicAuth("OpenApiAuthUserName", "OpenApiAuthPass", "Restricted") {\n        r.ExitAll()\n        return\n    }\n}\n\n'})})]})}function C(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(R,{...e})}):R(e)}},585391:function(e,n,t){t.d(n,{Z:function(){return r}});let r=t.p+"assets/images/452372a121db73abd8c5027077b3026e-87092b3e642702b6dd6c9e8e76407fc5.png"},250065:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return a}});var r=t(667294);let s={},o=r.createContext(s);function a(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);