"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["75109"],{829575:function(e,i,n){n.r(i),n.d(i,{metadata:()=>s,contentTitle:()=>c,default:()=>m,assets:()=>a,toc:()=>o,frontMatter:()=>l});var s=JSON.parse('{"id":"examples/observability/metric/basic/basic","title":"Basic","description":"A basic example demonstrating various metric types and their usage in GoFrame","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/examples/observability/metric/basic/basic.md","sourceDirName":"examples/observability/metric/basic","slug":"/examples/observability/metric/basic","permalink":"/en/examples/observability/metric/basic","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/examples/observability/metric/basic/basic.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1740107000000,"frontMatter":{"title":"Basic","slug":"/examples/observability/metric/basic","keywords":["metrics","basic","prometheus","opentelemetry","goframe"],"description":"A basic example demonstrating various metric types and their usage in GoFrame","hide_title":true},"sidebar":"examplesSidebar","previous":{"title":"Metric","permalink":"/en/examples/observability/metric"},"next":{"title":"Callback","permalink":"/en/examples/observability/metric/callback"}}'),r=n("785893"),t=n("250065");let l={title:"Basic",slug:"/examples/observability/metric/basic",keywords:["metrics","basic","prometheus","opentelemetry","goframe"],description:"A basic example demonstrating various metric types and their usage in GoFrame",hide_title:!0},c="Metric - Basic Example",a={},o=[{value:"Description",id:"description",level:2},{value:"Structure",id:"structure",level:2},{value:"Features",id:"features",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Notes",id:"notes",level:2}];function d(e){let i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"metric---basic-example",children:"Metric - Basic Example"})}),"\n",(0,r.jsxs)(i.p,{children:["Github Source: ",(0,r.jsx)(i.a,{href:"https://github.com/gogf/examples/tree/main/observability/metric/basic",children:"https://github.com/gogf/examples/tree/main/observability/metric/basic"})]}),"\n",(0,r.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(i.p,{children:["This example demonstrates the basic usage of various metric types in ",(0,r.jsx)(i.code,{children:"GoFrame"})," using ",(0,r.jsx)(i.code,{children:"OpenTelemetry"})," and ",(0,r.jsx)(i.code,{children:"Prometheus"})," integration. It shows how to:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Create and use different types of metrics"}),"\n",(0,r.jsx)(i.li,{children:"Configure metric attributes"}),"\n",(0,r.jsxs)(i.li,{children:["Export metrics in ",(0,r.jsx)(i.code,{children:"Prometheus"})," format"]}),"\n",(0,r.jsx)(i.li,{children:"Set up a metrics endpoint"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"structure",children:"Structure"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-text",children:"- `go.mod`: The Go module file for dependency management\n- `go.sum`: The Go module checksums file\n- `main.go`: The main application demonstrating metric usage\n"})}),"\n",(0,r.jsx)(i.h2,{id:"features",children:"Features"}),"\n",(0,r.jsx)(i.p,{children:"The example showcases the following metric types:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Counter"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Cumulative measurements"}),"\n",(0,r.jsx)(i.li,{children:"Only increases"}),"\n",(0,r.jsx)(i.li,{children:"Used for counting events"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"UpDownCounter"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Bidirectional counter"}),"\n",(0,r.jsx)(i.li,{children:"Can increase and decrease"}),"\n",(0,r.jsx)(i.li,{children:"Used for measuring varying quantities"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Histogram"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Distribution of measurements"}),"\n",(0,r.jsx)(i.li,{children:"Configurable buckets"}),"\n",(0,r.jsx)(i.li,{children:"Used for latency/size measurements"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Observable Metrics"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Counter"}),"\n",(0,r.jsx)(i.li,{children:"UpDownCounter"}),"\n",(0,r.jsx)(i.li,{children:"Gauge"}),"\n",(0,r.jsx)(i.li,{children:"Updated via callbacks"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://golang.org/dl/",children:"Go"})," ",(0,r.jsx)(i.code,{children:"1.22"})," or higher"]}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://git-scm.com/downloads",children:"Git"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://goframe.org",children:"GoFrame"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/gogf/gf/tree/master/contrib/metric/otelmetric",children:"GoFrame OpenTelemetry Metric"})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Run the example:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-bash",children:"go run main.go\n"})}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Access the metrics:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-bash",children:"# Using curl\ncurl http://localhost:8000/metrics\n\n# Or open in browser\nhttp://localhost:8000/metrics\n"})}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Example metrics output:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-text",children:'# HELP goframe_metric_demo_counter This is a simple demo for Counter usage\ngoframe_metric_demo_counter{const_attr_1="1"} 11\n\n# HELP goframe_metric_demo_histogram This is a simple demo for histogram usage\ngoframe_metric_demo_histogram_bucket{const_attr_3="3",le="0"} 0\ngoframe_metric_demo_histogram_bucket{const_attr_3="3",le="10"} 1\n...\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(i.p,{children:"The example demonstrates:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Proper metric initialization and configuration"}),"\n",(0,r.jsx)(i.li,{children:"Different ways to update metrics"}),"\n",(0,r.jsx)(i.li,{children:"Attribute handling"}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"Prometheus"})," integration"]}),"\n",(0,r.jsx)(i.li,{children:"Observable metric callbacks"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Metrics are exported in ",(0,r.jsx)(i.code,{children:"Prometheus"})," format"]}),"\n",(0,r.jsx)(i.li,{children:"Default port is 8000"}),"\n",(0,r.jsx)(i.li,{children:"Metrics endpoint is at /metrics"}),"\n",(0,r.jsx)(i.li,{children:"All metrics include constant attributes"}),"\n",(0,r.jsx)(i.li,{children:"Observable metrics are updated via callbacks"}),"\n",(0,r.jsx)(i.li,{children:"Proper cleanup is handled via defer"}),"\n"]})]})}function m(e={}){let{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,i,n){n.d(i,{Z:function(){return c},a:function(){return l}});var s=n(667294);let r={},t=s.createContext(r);function l(e){let i=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);