"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["36029"],{667765:function(e,t,r){r.r(t),r.d(t,{metadata:()=>n,contentTitle:()=>s,default:()=>p,assets:()=>c,toc:()=>d,frontMatter:()=>o});var n=JSON.parse('{"id":"docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u94FE\u8DEF\u8DDF\u8E2A/\u94FE\u8DEF\u8DDF\u8E2A-\u51C6\u5907\u5DE5\u4F5C","title":"Tracing - Preparation","description":"Implement tracing with Jaeger in the GoFrame framework. We will demonstrate how to introduce distributed tracing in a system through a combination of Jaeger and OpenTelemetry, including a quick deployment method for Jaeger and the location of example code in the GoFrame framework, as well as encapsulated registration modules.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u94FE\u8DEF\u8DDF\u8E2A/\u94FE\u8DEF\u8DDF\u8E2A-\u51C6\u5907\u5DE5\u4F5C.md","sourceDirName":"docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u94FE\u8DEF\u8DDF\u8E2A","slug":"/docs/obs/tracing-prepare","permalink":"/en/docs/obs/tracing-prepare","draft":false,"unlisted":false,"editUrl":"https://github.com/gogf/gf-site/blob/main/docs/docs/\u670D\u52A1\u53EF\u89C2\u6D4B\u6027/\u670D\u52A1\u94FE\u8DEF\u8DDF\u8E2A/\u94FE\u8DEF\u8DDF\u8E2A-\u51C6\u5907\u5DE5\u4F5C.md","tags":[],"version":"current","lastUpdatedBy":"John","lastUpdatedAt":1732411910000,"sidebarPosition":1,"frontMatter":{"slug":"/docs/obs/tracing-prepare","title":"Tracing - Preparation","sidebar_position":1,"hide_title":true,"keywords":["GoFrame","GoFrame framework","OpenTelemetry","Jaeger","Distributed Tracing","Tracing","docker","OTLP HTTP","OTLP GRPC","Example Code"],"description":"Implement tracing with Jaeger in the GoFrame framework. We will demonstrate how to introduce distributed tracing in a system through a combination of Jaeger and OpenTelemetry, including a quick deployment method for Jaeger and the location of example code in the GoFrame framework, as well as encapsulated registration modules."},"sidebar":"mainSidebar","previous":{"title":"Tracing - Intro","permalink":"/en/docs/obs/tracing-intro"},"next":{"title":"Tracing - Basic Example","permalink":"/en/docs/obs/tracing-example"}}'),i=r("785893"),a=r("250065");let o={slug:"/docs/obs/tracing-prepare",title:"Tracing - Preparation",sidebar_position:1,hide_title:!0,keywords:["GoFrame","GoFrame framework","OpenTelemetry","Jaeger","Distributed Tracing","Tracing","docker","OTLP HTTP","OTLP GRPC","Example Code"],description:"Implement tracing with Jaeger in the GoFrame framework. We will demonstrate how to introduce distributed tracing in a system through a combination of Jaeger and OpenTelemetry, including a quick deployment method for Jaeger and the location of example code in the GoFrame framework, as well as encapsulated registration modules."},s=void 0,c={},d=[{value:"Jaeger",id:"jaeger",level:2},{value:"Preparation",id:"preparation",level:2},{value:"Sample Code Address",id:"sample-code-address",level:2},{value:"Encapsulated Jaeger Registration (to be removed in version 2.6.0)",id:"encapsulated-jaeger-registration-to-be-removed-in-version-260",level:2},{value:"OTLP HTTP Encapsulation",id:"otlp-http-encapsulation",level:2},{value:"OTLP GRPC Encapsulation",id:"otlp-grpc-encapsulation",level:2}];function l(e){let t={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["After gaining a preliminary understanding of the concept of ",(0,i.jsx)(t.code,{children:"OpenTelemetry"}),", we will use ",(0,i.jsx)(t.code,{children:"Jaeger"})," as an example to demonstrate how to implement tracing in a program."]}),"\n",(0,i.jsx)(t.h2,{id:"jaeger",children:"Jaeger"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://www.jaegertracing.io/",children:"Jaeger"})," \\\u02C8y\u0101-g\u0259r\\ is Uber's open-source distributed tracing system and one of the systems that support ",(0,i.jsx)(t.code,{children:"OpenTelemetry"}),". It is also a ",(0,i.jsx)(t.code,{children:"CNCF"})," project. In this article, we will use ",(0,i.jsx)(t.code,{children:"Jaeger"})," to demonstrate how to introduce distributed tracing into a system. Below is the architecture diagram for ",(0,i.jsx)(t.code,{children:"Opentracing+Jaeger"}),", which also applies to using ",(0,i.jsx)(t.code,{children:"OpenTelemetry"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"",children:(0,i.jsx)(t.img,{src:r(72785).Z+"",width:"2512",height:"1344"})}),"\n",(0,i.jsx)(t.h2,{id:"preparation",children:"Preparation"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Jaeger"})," offers an ",(0,i.jsx)(t.code,{children:"all-in-one"})," image, which allows us to quickly start testing:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"docker run --rm --name jaeger \\\n  -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \\\n  -p 6831:6831/udp \\\n  -p 6832:6832/udp \\\n  -p 5778:5778 \\\n  -p 16686:16686 \\\n  -p 4317:4317 \\\n  -p 4318:4318 \\\n  -p 14250:14250 \\\n  -p 14268:14268 \\\n  -p 14269:14269 \\\n  -p 9411:9411 \\\n  jaegertracing/all-in-one:1.55\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If pulling the ",(0,i.jsx)(t.code,{children:"docker"})," image is too slow, you can try modifying the image address of the ",(0,i.jsx)(t.code,{children:"docker"})," pull site, such as: ",(0,i.jsx)(t.a,{href:"http://mirrors.ustc.edu.cn/help/dockerhub.html?highlight=docker",children:"http://mirrors.ustc.edu.cn/help/dockerhub.html?highlight=docker"})]}),"\n",(0,i.jsxs)(t.p,{children:["After the image starts, you can open the ",(0,i.jsx)(t.code,{children:"Jaeger UI"})," via ",(0,i.jsx)(t.a,{href:"http://localhost:16686/",children:"http://localhost:16686"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:r(172241).Z+"",width:"1918",height:"896"})}),"\n",(0,i.jsx)(t.h2,{id:"sample-code-address",children:"Sample Code Address"}),"\n",(0,i.jsxs)(t.p,{children:["Our sample code is in the ",(0,i.jsx)(t.code,{children:"gf"})," main repository, located at: ",(0,i.jsx)(t.a,{href:"https://github.com/gogf/gf/tree/master/example/trace",children:"https://github.com/gogf/gf/tree/master/example/trace"})]}),"\n",(0,i.jsx)(t.h2,{id:"encapsulated-jaeger-registration-to-be-removed-in-version-260",children:"Encapsulated Jaeger Registration (to be removed in version 2.6.0)"}),"\n",(0,i.jsxs)(t.p,{children:["For developers' convenience, we have encapsulated the initialization logic for ",(0,i.jsx)(t.code,{children:"jaeger"})," through a community module, code address: ",(0,i.jsx)(t.a,{href:"https://github.com/gogf/gf/tree/master/contrib/trace/jaeger",children:"https://github.com/gogf/gf/tree/master/contrib/trace/jaeger"})]}),"\n",(0,i.jsx)(t.h2,{id:"otlp-http-encapsulation",children:"OTLP HTTP Encapsulation"}),"\n",(0,i.jsxs)(t.p,{children:["For developers' convenience, we have encapsulated the initialization logic for ",(0,i.jsx)(t.code,{children:"otelhttp"})," through a community module, code address: ",(0,i.jsx)(t.a,{href:"https://github.com/gogf/gf/tree/master/contrib/trace/otlphttp",children:"https://github.com/gogf/gf/tree/master/contrib/trace/otlphttp"})]}),"\n",(0,i.jsx)(t.h2,{id:"otlp-grpc-encapsulation",children:"OTLP GRPC Encapsulation"}),"\n",(0,i.jsxs)(t.p,{children:["For developers' convenience, we have encapsulated the initialization logic for ",(0,i.jsx)(t.code,{children:"otelgrpc"})," through a community module, code address: ",(0,i.jsx)(t.a,{href:"https://github.com/gogf/gf/tree/master/contrib/trace/otlpgrpc",children:"https://github.com/gogf/gf/tree/master/contrib/trace/otlpgrpc"})]})]})}function p(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},172241:function(e,t,r){r.d(t,{Z:function(){return n}});let n=r.p+"assets/images/870c4c69cfd848787f88b074f0879519-e8f8ffbbe85f12b7ca426a6a20e32f3b.png"},72785:function(e,t,r){r.d(t,{Z:function(){return n}});let n=r.p+"assets/images/cd8d6734e501e9ac4917920666cb0867-0dfc53f098d5b704ad93a0423dbd8ceb.png"},250065:function(e,t,r){r.d(t,{Z:function(){return s},a:function(){return o}});var n=r(667294);let i={},a=n.createContext(i);function o(e){let t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);